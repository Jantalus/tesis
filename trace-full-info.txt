[B]         1  0x5555555595f0 loc_5555555595f0: // size=37 thread=0x100000000
[I]         1  0x5555555595f0    nop edx, edi                             f3 0f 1e fa
[I]         2  0x5555555595f4    xor ebp, ebp                             31 ed
[I]         3  0x5555555595f6    mov r9, rdx                              49 89 d1
[I]         4  0x5555555595f9    pop rsi                                  5e
[I]         5  0x5555555595fa    mov rdx, rsp                             48 89 e2
[I]         6  0x5555555595fd    and rsp, 0xfffffffffffffff0              48 83 e4 f0
[I]         7  0x555555559601    push rax                                 50
[I]         8  0x555555559602    push rsp                                 54
[I]         9  0x555555559603    xor r8d, r8d                             45 31 c0
[I]        10  0x555555559606    xor ecx, ecx                             31 c9
[I]        11  0x555555559608    lea rdi, ptr [rip-0x214f]                48 8d 3d b1 de ff ff
[C]        12 Calling function 0x7fffc2e276a0(__libc_start_main)
[!] Function 0x7fffc2e276a0 is filtered, no tracing
[I]        12  0x55555555960f    call qword ptr [rip+0x1d663]             ff 15 63 d6 01 00
[B]        13  0x555555557000 loc_555555557000: // size=20 thread=0x100000000
[I]        13  0x555555557000    nop edx, edi                             f3 0f 1e fa
[I]        14  0x555555557004    sub rsp, 0x8                             48 83 ec 08
[I]        15  0x555555557008    mov rax, qword ptr [rip+0x1fe49]         48 8b 05 49 fe 01 00
[I]        16  0x55555555700f    test rax, rax                            48 85 c0
[I]        17  0x555555557012    jz 0x555555557016                        74 02
[B]        18  0x555555557016 loc_555555557016: // size=5 thread=0x100000000
[I]        18  0x555555557016    add rsp, 0x8                             48 83 c4 08
[I]        19  0x55555555701a    ret                                      c3
[B]        20  0x5555555596e0 loc_5555555596e0: // size=9 thread=0x100000000
[I]        20  0x5555555596e0    nop edx, edi                             f3 0f 1e fa
[I]        21  0x5555555596e4    jmp 0x555555559650                       e9 67 ff ff ff
[B]        22  0x555555559650 loc_555555559650: // size=36 thread=0x100000000
[I]        22  0x555555559650    lea rdi, ptr [rip+0x1dc21]               48 8d 3d 21 dc 01 00
[I]        23  0x555555559657    lea rsi, ptr [rip+0x1dc1a]               48 8d 35 1a dc 01 00
[I]        24  0x55555555965e    sub rsi, rdi                             48 29 fe
[I]        25  0x555555559661    mov rax, rsi                             48 89 f0
[I]        26  0x555555559664    shr rsi, 0x3f                            48 c1 ee 3f
[I]        27  0x555555559668    sar rax, 0x3                             48 c1 f8 03
[I]        28  0x55555555966c    add rsi, rax                             48 01 c6
[I]        29  0x55555555966f    sar rsi, 0x1                             48 d1 fe
[I]        30  0x555555559672    jz 0x555555559688                        74 14
[B]        31  0x555555559688 loc_555555559688: // size=1 thread=0x100000000
[I]        31  0x555555559688    ret                                      c3
[B]        32  0x5555555574c0 loc_5555555574c0: // size=49 thread=0x100000000
[I]        32  0x5555555574c0    nop edx, edi                             f3 0f 1e fa
[I]        33  0x5555555574c4    push rbp                                 55
[I]        34  0x5555555574c5    mov rbp, rsp                             48 89 e5
[I]        35  0x5555555574c8    push r15                                 41 57
[I]        36  0x5555555574ca    push r14                                 41 56
[I]        37  0x5555555574cc    push r13                                 41 55
[I]        38  0x5555555574ce    push r12                                 41 54
[I]        39  0x5555555574d0    push rbx                                 53
[I]        40  0x5555555574d1    sub rsp, 0xf8                            48 81 ec f8 00 00 00
[I]        41  0x5555555574d8    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]        42  0x5555555574e1    mov qword ptr [rbp-0x38], r12            4c 89 65 c8
[I]        43  0x5555555574e5    mov r12, qword ptr [rsi]                 4c 8b 26
[I]        44  0x5555555574e8    test r12, r12                            4d 85 e4
[I]        45  0x5555555574eb    jz 0x555555559537                        0f 84 46 20 00 00
[B]        46  0x5555555574f1 loc_5555555574f1: // size=20 thread=0x100000000
[I]        46  0x5555555574f1    mov r14d, edi                            41 89 fe
[I]        47  0x5555555574f4    mov rbx, rsi                             48 89 f3
[I]        48  0x5555555574f7    mov rdi, r12                             4c 89 e7
[I]        49  0x5555555574fa    mov esi, 0x2f                            be 2f 00 00 00
[C]        50 Calling function 0x7fffc2f82d00(_dl_mcount_wrapper)
[!] Function 0x7fffc2f82d00 is filtered, no tracing
[I]        50  0x5555555574ff    call qword ptr [rip+0x1f88b]             ff 15 8b f8 01 00
[B]        51  0x555555557505 loc_555555557505: // size=11 thread=0x100000000
[I]        51  0x555555557505    mov r15, r12                             4d 89 e7
[I]        52  0x555555557508    mov r13, rax                             49 89 c5
[I]        53  0x55555555750b    test rax, rax                            48 85 c0
[I]        54  0x55555555750e    jz 0x555555557560                        74 50
[B]        55  0x555555557560 loc_555555557560: // size=66 thread=0x100000000
[I]        55  0x555555557560    mov rax, qword ptr [rip+0x1f911]         48 8b 05 11 f9 01 00
[I]        56  0x555555557567    mov qword ptr [rip+0x1ff32], r12         4c 89 25 32 ff 01 00
[I]        57  0x55555555756e    lea rsi, ptr [rip+0x17ce5]               48 8d 35 e5 7c 01 00
[I]        58  0x555555557575    mov edi, 0x6                             bf 06 00 00 00
[I]        59  0x55555555757a    lea r13, ptr [rip+0x1ee7f]               4c 8d 2d 7f ee 01 00
[I]        60  0x555555557581    mov qword ptr [rax], r12                 4c 89 20
[I]        61  0x555555557584    mov rax, qword ptr [rip+0x1fa1d]         48 8b 05 1d fa 01 00
[I]        62  0x55555555758b    lea r12, ptr [rip+0x17b3a]               4c 8d 25 3a 7b 01 00
[I]        63  0x555555557592    mov qword ptr [rax], r15                 4c 89 38
[I]        64  0x555555557595    lea r15, ptr [rbp-0xc4]                  4c 8d bd 3c ff ff ff
[C]        65 Calling function 0x7fffc2e353f0(setlocale)
[!] Function 0x7fffc2e353f0 is filtered, no tracing
[I]        65  0x55555555759c    call qword ptr [rip+0x1f956]             ff 15 56 f9 01 00
[B]        66  0x5555555575a2 loc_5555555575a2: // size=16 thread=0x100000000
[I]        66  0x5555555575a2    lea rsi, ptr [rip+0x17e1e]               48 8d 35 1e 7e 01 00
[I]        67  0x5555555575a9    mov rdi, r12                             4c 89 e7
[C]        68 Calling function 0x7fffc2e36c30(bindtextdomain)
[!] Function 0x7fffc2e36c30 is filtered, no tracing
[I]        68  0x5555555575ac    call qword ptr [rip+0x1f786]             ff 15 86 f7 01 00
[B]        69  0x5555555575b2 loc_5555555575b2: // size=16 thread=0x100000000
[I]        69  0x5555555575b2    mov rdi, r12                             4c 89 e7
[I]        70  0x5555555575b5    lea r12, ptr [rip+0x15c00]               4c 8d 25 00 5c 01 00
[C]        71 Calling function 0x7fffc2e3a6b0(textdomain)
[!] Function 0x7fffc2e3a6b0 is filtered, no tracing
[I]        71  0x5555555575bc    call qword ptr [rip+0x1f746]             ff 15 46 f7 01 00
[B]        72  0x5555555575c2 loc_5555555575c2: // size=23 thread=0x100000000
[I]        72  0x5555555575c2    lea rdi, ptr [rip+0x7a17]                48 8d 3d 17 7a 00 00
[I]        73  0x5555555575c9    mov dword ptr [rip+0x1fab5], 0x2         c7 05 b5 fa 01 00 02 00 00 00
[C]        74 Calling function 0x55555556c8c0(error_at_line)
[I]        74  0x5555555575d3    addr32 call 0x55555556c8c0               67 e8 e7 52 01 00
[B]        75  0x55555556c8c0 loc_55555556c8c0: // size=19 thread=0x100000000
[I]        75  0x55555556c8c0    nop edx, edi                             f3 0f 1e fa
[I]        76  0x55555556c8c4    mov rdx, qword ptr [rip+0xa73d]          48 8b 15 3d a7 00 00
[I]        77  0x55555556c8cb    xor esi, esi                             31 f6
[I]        78  0x55555556c8cd    jmp qword ptr [rip+0xa67d]               ff 25 7d a6 00 00
[B]        79  0x5555555575d9 loc_5555555575d9: // size=170 thread=0x100000000
[I]        79  0x5555555575d9    movdqa xmm0, xmmword ptr [rip+0x1a67f]   66 0f 6f 05 7f a6 01 00
[I]        80  0x5555555575e1    mov dword ptr [rip+0x201d1], 0x0         c7 05 d1 01 02 00 00 00 00 00
[I]        81  0x5555555575eb    mov byte ptr [rip+0x201c6], 0x1          c6 05 c6 01 02 00 01
[I]        82  0x5555555575f2    mov qword ptr [rip+0x201b3], 0x0         48 c7 05 b3 01 02 00 00 00 00 00
[I]        83  0x5555555575fd    mov qword ptr [rbp-0x100], 0xffffffffffffffff 48 c7 85 00 ff ff ff ff ff ff ff
[I]        84  0x555555557608    mov qword ptr [rbp-0x108], 0xffffffffffffffff 48 c7 85 f8 fe ff ff ff ff ff ff
[I]        85  0x555555557613    mov dword ptr [rbp-0xf0], 0xffffffff     c7 85 10 ff ff ff ff ff ff ff
[I]        86  0x55555555761d    mov dword ptr [rbp-0xe0], 0xffffffff     c7 85 20 ff ff ff ff ff ff ff
[I]        87  0x555555557627    mov dword ptr [rbp-0xd8], 0xffffffff     c7 85 28 ff ff ff ff ff ff ff
[I]        88  0x555555557631    mov dword ptr [rbp-0xd4], 0xffffffff     c7 85 2c ff ff ff ff ff ff ff
[I]        89  0x55555555763b    mov byte ptr [rbp-0x109], 0x0            c6 85 f7 fe ff ff 00
[I]        90  0x555555557642    mov qword ptr [rbp-0xf8], 0x0            48 c7 85 08 ff ff ff 00 00 00 00
[I]        91  0x55555555764d    movaps xmmword ptr [rip+0x2014c], xmm0   0f 29 05 4c 01 02 00
[I]        92  0x555555557654    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]        93  0x55555555765f    nop                                      90
[I]        94  0x555555557660    mov r8, r15                              4d 89 f8
[I]        95  0x555555557663    mov rcx, r13                             4c 89 e9
[I]        96  0x555555557666    lea rdx, ptr [rip+0x1a343]               48 8d 15 43 a3 01 00
[I]        97  0x55555555766d    mov rsi, rbx                             48 89 de
[I]        98  0x555555557670    mov dword ptr [rbp-0xc4], 0xffffffff     c7 85 3c ff ff ff ff ff ff ff
[I]        99  0x55555555767a    mov edi, r14d                            44 89 f7
[C]       100 Calling function 0x7fffc2eec320(getopt_long)
[!] Function 0x7fffc2eec320 is filtered, no tracing
[I]       100  0x55555555767d    call qword ptr [rip+0x1f6e5]             ff 15 e5 f6 01 00
[B]       101  0x555555557683 loc_555555557683: // size=9 thread=0x100000000
[I]       101  0x555555557683    cmp eax, 0xffffffff                      83 f8 ff
[I]       102  0x555555557686    jz 0x555555557e16                        0f 84 8a 07 00 00
[B]       103  0x555555557e16 loc_555555557e16: // size=14 thread=0x100000000
[I]       103  0x555555557e16    cmp qword ptr [rip+0x1f4a2], 0x0         48 83 3d a2 f4 01 00 00
[I]       104  0x555555557e1e    jz 0x5555555586c1                        0f 84 9d 08 00 00
[B]       105  0x5555555586c1 loc_5555555586c1: // size=13 thread=0x100000000
[I]       105  0x5555555586c1    lea rdi, ptr [rip+0x16dc0]               48 8d 3d c0 6d 01 00
[C]       106 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       106  0x5555555586c8    call qword ptr [rip+0x1e572]             ff 15 72 e5 01 00
[B]       107  0x5555555586ce loc_5555555586ce: // size=11 thread=0x100000000
[I]       107  0x5555555586ce    mov r12, rax                             49 89 c4
[I]       108  0x5555555586d1    mov rdi, rax                             48 89 c7
[C]       109 Calling function 0x55555555be50(error_at_line)
[I]       109  0x5555555586d4    call 0x55555555be50                      e8 77 37 00 00
[B]       110  0x55555555be50 loc_55555555be50: // size=38 thread=0x100000000
[I]       110  0x55555555be50    push rbp                                 55
[I]       111  0x55555555be51    mov rbp, rsp                             48 89 e5
[I]       112  0x55555555be54    push r13                                 41 55
[I]       113  0x55555555be56    push r12                                 41 54
[I]       114  0x55555555be58    push rbx                                 53
[I]       115  0x55555555be59    sub rsp, 0x18                            48 83 ec 18
[I]       116  0x55555555be5d    mov rbx, qword ptr fs:[0x28]             64 48 8b 1c 25 28 00 00 00
[I]       117  0x55555555be66    mov qword ptr [rbp-0x28], rbx            48 89 5d d8
[I]       118  0x55555555be6a    mov rbx, rdi                             48 89 fb
[I]       119  0x55555555be6d    test rdi, rdi                            48 85 ff
[I]       120  0x55555555be70    jz 0x55555555bf98                        0f 84 22 01 00 00
[B]       121  0x55555555bf98 loc_55555555bf98: // size=13 thread=0x100000000
[I]       121  0x55555555bf98    lea rdi, ptr [rip+0x134ec]               48 8d 3d ec 34 01 00
[C]       122 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       122  0x55555555bf9f    call qword ptr [rip+0x1ac9b]             ff 15 9b ac 01 00
[B]       123  0x55555555bfa5 loc_55555555bfa5: // size=12 thread=0x100000000
[I]       123  0x55555555bfa5    mov rbx, rax                             48 89 c3
[I]       124  0x55555555bfa8    test rax, rax                            48 85 c0
[I]       125  0x55555555bfab    jnz 0x55555555be76                       0f 85 c5 fe ff ff
[B]       126  0x55555555bfb1 loc_55555555bfb1: // size=13 thread=0x100000000
[I]       126  0x55555555bfb1    lea rdi, ptr [rip+0x1306e]               48 8d 3d 6e 30 01 00
[C]       127 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       127  0x55555555bfb8    call qword ptr [rip+0x1ac82]             ff 15 82 ac 01 00
[B]       128  0x55555555bfbe loc_55555555bfbe: // size=12 thread=0x100000000
[I]       128  0x55555555bfbe    mov rbx, rax                             48 89 c3
[I]       129  0x55555555bfc1    test rax, rax                            48 85 c0
[I]       130  0x55555555bfc4    jnz 0x55555555be76                       0f 85 ac fe ff ff
[B]       131  0x55555555bfca loc_55555555bfca: // size=13 thread=0x100000000
[I]       131  0x55555555bfca    lea rdi, ptr [rip+0x1305f]               48 8d 3d 5f 30 01 00
[C]       132 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       132  0x55555555bfd1    call qword ptr [rip+0x1ac69]             ff 15 69 ac 01 00
[B]       133  0x55555555bfd7 loc_55555555bfd7: // size=40 thread=0x100000000
[I]       133  0x55555555bfd7    mov dword ptr [rip+0x1b2e7], 0x0         c7 05 e7 b2 01 00 00 00 00 00
[I]       134  0x55555555bfe1    cmp rax, 0x1                             48 83 f8 01
[I]       135  0x55555555bfe5    sbb rax, rax                             48 19 c0
[I]       136  0x55555555bfe8    and eax, 0x200                           25 00 02 00 00
[I]       137  0x55555555bfed    add rax, 0x200                           48 05 00 02 00 00
[I]       138  0x55555555bff3    mov qword ptr [rip+0x1b2c6], rax         48 89 05 c6 b2 01 00
[I]       139  0x55555555bffa    jmp 0x55555555bebe                       e9 bf fe ff ff
[B]       140  0x55555555bebe loc_55555555bebe: // size=21 thread=0x100000000
[I]       140  0x55555555bebe    xor eax, eax                             31 c0
[I]       141  0x55555555bec0    mov rdx, qword ptr [rbp-0x28]            48 8b 55 d8
[I]       142  0x55555555bec4    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]       143  0x55555555becd    jnz 0x55555555c016                       0f 85 43 01 00 00
[B]       144  0x55555555bed3 loc_55555555bed3: // size=11 thread=0x100000000
[I]       144  0x55555555bed3    add rsp, 0x18                            48 83 c4 18
[I]       145  0x55555555bed7    pop rbx                                  5b
[I]       146  0x55555555bed8    pop r12                                  41 5c
[I]       147  0x55555555beda    pop r13                                  41 5d
[I]       148  0x55555555bedc    pop rbp                                  5d
[I]       149  0x55555555bedd    ret                                      c3
[B]       150  0x5555555586d9 loc_5555555586d9: // size=9 thread=0x100000000
[I]       150  0x5555555586d9    test r12, r12                            4d 85 e4
[I]       151  0x5555555586dc    jz 0x5555555592f4                        0f 84 12 0c 00 00
[B]       152  0x5555555592f4 loc_5555555592f4: // size=13 thread=0x100000000
[I]       152  0x5555555592f4    lea rdi, ptr [rip+0x16190]               48 8d 3d 90 61 01 00
[C]       153 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       153  0x5555555592fb    call qword ptr [rip+0x1d93f]             ff 15 3f d9 01 00
[B]       154  0x555555559301 loc_555555559301: // size=9 thread=0x100000000
[I]       154  0x555555559301    test rax, rax                            48 85 c0
[I]       155  0x555555559304    jnz 0x5555555586e2                       0f 85 d8 f3 ff ff
[B]       156  0x55555555930a loc_55555555930a: // size=5 thread=0x100000000
[I]       156  0x55555555930a    jmp 0x5555555586fc                       e9 ed f3 ff ff
[B]       157  0x5555555586fc loc_5555555586fc: // size=13 thread=0x100000000
[I]       157  0x5555555586fc    cmp byte ptr [rbp-0x109], 0x0            80 bd f7 fe ff ff 00
[I]       158  0x555555558703    jz 0x555555557e24                        0f 84 1b f7 ff ff
[B]       159  0x555555557e24 loc_555555557e24: // size=10 thread=0x100000000
[I]       159  0x555555557e24    mov eax, dword ptr [rbp-0xd4]            8b 85 2c ff ff ff
[I]       160  0x555555557e2a    test eax, eax                            85 c0
[I]       161  0x555555557e2c    jns 0x555555557e39                       79 0b
[C]       162 Calling function 0x55555555ce90(error_at_line)
[B]       162  0x555555557e2e loc_555555557e2e: // size=5 thread=0x100000000
[I]       162  0x555555557e2e    call 0x55555555ce90                      e8 5d 50 00 00
[B]       163  0x55555555ce90 loc_55555555ce90: // size=11 thread=0x100000000
[I]       163  0x55555555ce90    movzx eax, byte ptr [rip+0x1a192]        0f b6 05 92 a1 01 00
[I]       164  0x55555555ce97    test al, al                              84 c0
[I]       165  0x55555555ce99    js 0x55555555cea0                        78 05
[B]       166  0x55555555cea0 loc_55555555cea0: // size=15 thread=0x100000000
[I]       166  0x55555555cea0    push rbp                                 55
[I]       167  0x55555555cea1    mov edi, 0x1                             bf 01 00 00 00
[I]       168  0x55555555cea6    mov rbp, rsp                             48 89 e5
[C]       169 Calling function 0x7fffc2f0ea70(isatty)
[!] Function 0x7fffc2f0ea70 is filtered, no tracing
[I]       169  0x55555555cea9    call qword ptr [rip+0x19e19]             ff 15 19 9e 01 00
[B]       170  0x55555555ceaf loc_55555555ceaf: // size=11 thread=0x100000000
[I]       170  0x55555555ceaf    pop rbp                                  5d
[I]       171  0x55555555ceb0    mov byte ptr [rip+0x1a173], al           88 05 73 a1 01 00
[I]       172  0x55555555ceb6    and eax, 0x1                             83 e0 01
[I]       173  0x55555555ceb9    ret                                      c3
[B]       174  0x555555557e33 loc_555555557e33: // size=20 thread=0x100000000
[I]       174  0x555555557e33    movzx eax, al                            0f b6 c0
[I]       175  0x555555557e36    add eax, 0x1                             83 c0 01
[I]       176  0x555555557e39    mov dword ptr [rip+0x1f4e5], eax         89 05 e5 f4 01 00
[I]       177  0x555555557e3f    sub eax, 0x2                             83 e8 02
[I]       178  0x555555557e42    cmp eax, 0x2                             83 f8 02
[I]       179  0x555555557e45    jbe 0x555555557e54                       76 0d
[B]       180  0x555555557e54 loc_555555557e54: // size=14 thread=0x100000000
[I]       180  0x555555557e54    cmp qword ptr [rbp-0x100], 0xffffffffffffffff 48 83 bd 00 ff ff ff ff
[I]       181  0x555555557e5c    jz 0x555555558cbe                        0f 84 5c 0e 00 00
[C]       182 Calling function 0x55555555ce90(error_at_line)
[B]       182  0x555555558cbe loc_555555558cbe: // size=5 thread=0x100000000
[I]       182  0x555555558cbe    call 0x55555555ce90                      e8 cd 41 00 00
[B]       183  0x55555555ce90 loc_55555555ce90: // size=11 thread=0x100000000
[I]       183  0x55555555ce90    movzx eax, byte ptr [rip+0x1a192]        0f b6 05 92 a1 01 00
[I]       184  0x55555555ce97    test al, al                              84 c0
[I]       185  0x55555555ce99    js 0x55555555cea0                        78 05
[B]       186  0x55555555ce9b loc_55555555ce9b: // size=4 thread=0x100000000
[I]       186  0x55555555ce9b    and eax, 0x1                             83 e0 01
[I]       187  0x55555555ce9e    ret                                      c3
[B]       188  0x555555558cc3 loc_555555558cc3: // size=4 thread=0x100000000
[I]       188  0x555555558cc3    test al, al                              84 c0
[I]       189  0x555555558cc5    jz 0x555555558cfc                        74 35
[B]       190  0x555555558cc7 loc_555555558cc7: // size=25 thread=0x100000000
[I]       190  0x555555558cc7    xor eax, eax                             31 c0
[I]       191  0x555555558cc9    mov esi, 0x5413                          be 13 54 00 00
[I]       192  0x555555558cce    mov edi, 0x1                             bf 01 00 00 00
[I]       193  0x555555558cd3    lea rdx, ptr [rbp-0xb0]                  48 8d 95 50 ff ff ff
[C]       194 Calling function 0x7fffc2f16710(ioctl)
[!] Function 0x7fffc2f16710 is filtered, no tracing
[I]       194  0x555555558cda    call qword ptr [rip+0x1e0e0]             ff 15 e0 e0 01 00
[B]       195  0x555555558ce0 loc_555555558ce0: // size=4 thread=0x100000000
[I]       195  0x555555558ce0    test eax, eax                            85 c0
[I]       196  0x555555558ce2    js 0x555555558cfc                        78 18
[B]       197  0x555555558ce4 loc_555555558ce4: // size=12 thread=0x100000000
[I]       197  0x555555558ce4    movzx eax, word ptr [rbp-0xae]           0f b7 85 52 ff ff ff
[I]       198  0x555555558ceb    test ax, ax                              66 85 c0
[I]       199  0x555555558cee    jz 0x555555558cfc                        74 0c
[B]       200  0x555555558cf0 loc_555555558cf0: // size=12 thread=0x100000000
[I]       200  0x555555558cf0    mov qword ptr [rbp-0x100], rax           48 89 85 00 ff ff ff
[I]       201  0x555555558cf7    jmp 0x555555557e62                       e9 66 f1 ff ff
[B]       202  0x555555557e62 loc_555555557e62: // size=53 thread=0x100000000
[I]       202  0x555555557e62    mov rax, qword ptr [rbp-0x100]           48 8b 85 00 ff ff ff
[I]       203  0x555555557e69    xor edx, edx                             31 d2
[I]       204  0x555555557e6b    mov ecx, 0x3                             b9 03 00 00 00
[I]       205  0x555555557e70    mov qword ptr [rip+0x1f641], rax         48 89 05 41 f6 01 00
[I]       206  0x555555557e77    div rcx                                  48 f7 f1
[I]       207  0x555555557e7a    cmp rdx, 0x1                             48 83 fa 01
[I]       208  0x555555557e7e    sbb rax, 0xffffffffffffffff              48 83 d8 ff
[I]       209  0x555555557e82    mov qword ptr [rip+0x1f627], rax         48 89 05 27 f6 01 00
[I]       210  0x555555557e89    mov eax, dword ptr [rip+0x1f495]         8b 05 95 f4 01 00
[I]       211  0x555555557e8f    sub eax, 0x2                             83 e8 02
[I]       212  0x555555557e92    cmp eax, 0x2                             83 f8 02
[I]       213  0x555555557e95    jnbe 0x555555557eaf                      77 18
[B]       214  0x555555557e97 loc_555555557e97: // size=17 thread=0x100000000
[I]       214  0x555555557e97    mov rax, qword ptr [rbp-0x108]           48 8b 85 f8 fe ff ff
[I]       215  0x555555557e9e    cmp rax, 0xffffffffffffffff              48 83 f8 ff
[I]       216  0x555555557ea2    jz 0x5555555584ac                        0f 84 04 06 00 00
[B]       217  0x5555555584ac loc_5555555584ac: // size=24 thread=0x100000000
[I]       217  0x5555555584ac    mov qword ptr [rip+0x1f2d9], 0x8         48 c7 05 d9 f2 01 00 08 00 00 00
[I]       218  0x5555555584b7    lea rdi, ptr [rip+0x16fe0]               48 8d 3d e0 6f 01 00
[C]       219 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       219  0x5555555584be    call qword ptr [rip+0x1e77c]             ff 15 7c e7 01 00
[B]       220  0x5555555584c4 loc_5555555584c4: // size=12 thread=0x100000000
[I]       220  0x5555555584c4    mov r12, rax                             49 89 c4
[I]       221  0x5555555584c7    test rax, rax                            48 85 c0
[I]       222  0x5555555584ca    jz 0x555555557eaf                        0f 84 df f9 ff ff
[B]       223  0x555555557eaf loc_555555557eaf: // size=16 thread=0x100000000
[I]       223  0x555555557eaf    mov edx, dword ptr [rbp-0xd8]            8b 95 28 ff ff ff
[I]       224  0x555555557eb5    mov eax, edx                             89 d0
[I]       225  0x555555557eb7    and eax, 0x1                             83 e0 01
[I]       226  0x555555557eba    add edx, 0x1                             83 c2 01
[I]       227  0x555555557ebd    jnz 0x555555557ec4                       75 05
[C]       228 Calling function 0x55555555ce90(error_at_line)
[B]       228  0x555555557ebf loc_555555557ebf: // size=5 thread=0x100000000
[I]       228  0x555555557ebf    call 0x55555555ce90                      e8 cc 4f 00 00
[B]       229  0x55555555ce90 loc_55555555ce90: // size=11 thread=0x100000000
[I]       229  0x55555555ce90    movzx eax, byte ptr [rip+0x1a192]        0f b6 05 92 a1 01 00
[I]       230  0x55555555ce97    test al, al                              84 c0
[I]       231  0x55555555ce99    js 0x55555555cea0                        78 05
[B]       232  0x55555555ce9b loc_55555555ce9b: // size=4 thread=0x100000000
[I]       232  0x55555555ce9b    and eax, 0x1                             83 e0 01
[I]       233  0x55555555ce9e    ret                                      c3
[B]       234  0x555555557ec4 loc_555555557ec4: // size=19 thread=0x100000000
[I]       234  0x555555557ec4    cmp dword ptr [rbp-0xe0], 0x0            83 bd 20 ff ff ff 00
[I]       235  0x555555557ecb    mov byte ptr [rip+0x1f3ed], al           88 05 ed f3 01 00
[I]       236  0x555555557ed1    js 0x555555558596                        0f 88 bf 06 00 00
[B]       237  0x555555558596 loc_555555558596: // size=13 thread=0x100000000
[I]       237  0x555555558596    lea rdi, ptr [rip+0x16f09]               48 8d 3d 09 6f 01 00
[C]       238 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       238  0x55555555859d    call qword ptr [rip+0x1e69d]             ff 15 9d e6 01 00
[B]       239  0x5555555585a3 loc_5555555585a3: // size=8 thread=0x100000000
[I]       239  0x5555555585a3    mov r12, rax                             49 89 c4
[I]       240  0x5555555585a6    test rax, rax                            48 85 c0
[I]       241  0x5555555585a9    jz 0x5555555585e1                        74 36
[C]       242 Calling function 0x55555555ce90(error_at_line)
[B]       242  0x5555555585e1 loc_5555555585e1: // size=5 thread=0x100000000
[I]       242  0x5555555585e1    call 0x55555555ce90                      e8 aa 48 00 00
[B]       243  0x55555555ce90 loc_55555555ce90: // size=11 thread=0x100000000
[I]       243  0x55555555ce90    movzx eax, byte ptr [rip+0x1a192]        0f b6 05 92 a1 01 00
[I]       244  0x55555555ce97    test al, al                              84 c0
[I]       245  0x55555555ce99    js 0x55555555cea0                        78 05
[B]       246  0x55555555ce9b loc_55555555ce9b: // size=4 thread=0x100000000
[I]       246  0x55555555ce9b    and eax, 0x1                             83 e0 01
[I]       247  0x55555555ce9e    ret                                      c3
[B]       248  0x5555555585e6 loc_5555555585e6: // size=8 thread=0x100000000
[I]       248  0x5555555585e6    test al, al                              84 c0
[I]       249  0x5555555585e8    jz 0x555555557ee3                        0f 84 f5 f8 ff ff
[B]       250  0x5555555585ee loc_5555555585ee: // size=15 thread=0x100000000
[I]       250  0x5555555585ee    mov dword ptr [rbp-0xe0], 0x3            c7 85 20 ff ff ff 03 00 00 00
[I]       251  0x5555555585f8    jmp 0x555555557ed7                       e9 da f8 ff ff
[B]       252  0x555555557ed7 loc_555555557ed7: // size=33 thread=0x100000000
[I]       252  0x555555557ed7    mov eax, dword ptr [rbp-0xe0]            8b 85 20 ff ff ff
[I]       253  0x555555557edd    mov dword ptr [rip+0x1f3fd], eax         89 05 fd f3 01 00
[I]       254  0x555555557ee3    mov eax, dword ptr [rip+0x1f43b]         8b 05 3b f4 01 00
[I]       255  0x555555557ee9    mov r12d, dword ptr [rip+0x1f3f0]        44 8b 25 f0 f3 01 00
[I]       256  0x555555557ef0    test eax, eax                            85 c0
[I]       257  0x555555557ef2    jz 0x55555555839d                        0f 84 a5 04 00 00
[B]       258  0x555555557ef8 loc_555555557ef8: // size=12 thread=0x100000000
[I]       258  0x555555557ef8    sub eax, 0x2                             83 e8 02
[I]       259  0x555555557efb    cmp eax, 0x1                             83 f8 01
[I]       260  0x555555557efe    jbe 0x55555555838f                       0f 86 8b 04 00 00
[B]       261  0x55555555838f loc_55555555838f: // size=14 thread=0x100000000
[I]       261  0x55555555838f    cmp qword ptr [rip+0x1f121], 0x0         48 83 3d 21 f1 01 00 00
[I]       262  0x555555558397    jz 0x555555557f04                        0f 84 67 fb ff ff
[B]       263  0x55555555839d loc_55555555839d: // size=10 thread=0x100000000
[I]       263  0x55555555839d    cmp r12d, 0x6                            41 83 fc 06
[I]       264  0x5555555583a1    jnbe 0x555555557f04                      0f 87 5d fb ff ff
[B]       265  0x5555555583a7 loc_5555555583a7: // size=15 thread=0x100000000
[I]       265  0x5555555583a7    mov eax, 0x4a                            b8 4a 00 00 00
[I]       266  0x5555555583ac    bt rax, r12                              4c 0f a3 e0
[I]       267  0x5555555583b0    jnb 0x555555558f40                       0f 83 8a 0b 00 00
[B]       268  0x5555555583b6 loc_5555555583b6: // size=12 thread=0x100000000
[I]       268  0x5555555583b6    mov byte ptr [rip+0x1ef00], 0x1          c6 05 00 ef 01 00 01
[C]       269 Calling function 0x555555566990(error_at_line)
[I]       269  0x5555555583bd    call 0x555555566990                      e8 ce e5 00 00
[B]       270  0x555555566990 loc_555555566990: // size=13 thread=0x100000000
[I]       270  0x555555566990    push rbp                                 55
[I]       271  0x555555566991    mov rbp, rsp                             48 89 e5
[I]       272  0x555555566994    push r12                                 41 54
[I]       273  0x555555566996    push rbx                                 53
[C]       274 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]       274  0x555555566997    call qword ptr [rip+0x102f3]             ff 15 f3 02 01 00
[B]       275  0x55555556699d loc_55555556699d: // size=17 thread=0x100000000
[I]       275  0x55555556699d    mov edi, 0x38                            bf 38 00 00 00
[I]       276  0x5555555669a2    mov r12d, dword ptr [rax]                44 8b 20
[I]       277  0x5555555669a5    mov rbx, rax                             48 89 c3
[C]       278 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]       278  0x5555555669a8    call qword ptr [rip+0x10502]             ff 15 02 05 01 00
[B]       279  0x5555555669ae loc_5555555669ae: // size=5 thread=0x100000000
[I]       279  0x5555555669ae    test rax, rax                            48 85 c0
[I]       280  0x5555555669b1    jz 0x5555555669e9                        74 36
[B]       281  0x5555555669b3 loc_5555555669b3: // size=54 thread=0x100000000
[I]       281  0x5555555669b3    movdqa xmm0, xmmword ptr [rip+0x10925]   66 0f 6f 05 25 09 01 00
[I]       282  0x5555555669bb    mov rdx, qword ptr [rip+0x1094e]         48 8b 15 4e 09 01 00
[I]       283  0x5555555669c2    movups xmmword ptr [rax], xmm0           0f 11 00
[I]       284  0x5555555669c5    movdqa xmm0, xmmword ptr [rip+0x10923]   66 0f 6f 05 23 09 01 00
[I]       285  0x5555555669cd    mov qword ptr [rax+0x30], rdx            48 89 50 30
[I]       286  0x5555555669d1    movups xmmword ptr [rax+0x10], xmm0      0f 11 40 10
[I]       287  0x5555555669d5    movdqa xmm0, xmmword ptr [rip+0x10923]   66 0f 6f 05 23 09 01 00
[I]       288  0x5555555669dd    mov dword ptr [rbx], r12d                44 89 23
[I]       289  0x5555555669e0    movups xmmword ptr [rax+0x20], xmm0      0f 11 40 20
[I]       290  0x5555555669e4    pop rbx                                  5b
[I]       291  0x5555555669e5    pop r12                                  41 5c
[I]       292  0x5555555669e7    pop rbp                                  5d
[I]       293  0x5555555669e8    ret                                      c3
[B]       294  0x5555555583c2 loc_5555555583c2: // size=12 thread=0x100000000
[I]       294  0x5555555583c2    mov qword ptr [rip+0x1f237], rax         48 89 05 37 f2 01 00
[I]       295  0x5555555583c9    jmp 0x555555557f21                       e9 53 fb ff ff
[B]       296  0x555555557f21 loc_555555557f21: // size=15 thread=0x100000000
[I]       296  0x555555557f21    mov edx, dword ptr [rip+0x1f3f5]         8b 15 f5 f3 01 00
[I]       297  0x555555557f27    cmp edx, 0x1                             83 fa 01
[I]       298  0x555555557f2a    jbe 0x555555557fad                       0f 86 7d 00 00 00
[C]       299 Calling function 0x555555566990(error_at_line)
[B]       299  0x555555557fad loc_555555557fad: // size=5 thread=0x100000000
[I]       299  0x555555557fad    call 0x555555566990                      e8 de e9 00 00
[B]       300  0x555555566990 loc_555555566990: // size=13 thread=0x100000000
[I]       300  0x555555566990    push rbp                                 55
[I]       301  0x555555566991    mov rbp, rsp                             48 89 e5
[I]       302  0x555555566994    push r12                                 41 54
[I]       303  0x555555566996    push rbx                                 53
[C]       304 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]       304  0x555555566997    call qword ptr [rip+0x102f3]             ff 15 f3 02 01 00
[B]       305  0x55555556699d loc_55555556699d: // size=17 thread=0x100000000
[I]       305  0x55555556699d    mov edi, 0x38                            bf 38 00 00 00
[I]       306  0x5555555669a2    mov r12d, dword ptr [rax]                44 8b 20
[I]       307  0x5555555669a5    mov rbx, rax                             48 89 c3
[C]       308 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]       308  0x5555555669a8    call qword ptr [rip+0x10502]             ff 15 02 05 01 00
[B]       309  0x5555555669ae loc_5555555669ae: // size=5 thread=0x100000000
[I]       309  0x5555555669ae    test rax, rax                            48 85 c0
[I]       310  0x5555555669b1    jz 0x5555555669e9                        74 36
[B]       311  0x5555555669b3 loc_5555555669b3: // size=54 thread=0x100000000
[I]       311  0x5555555669b3    movdqa xmm0, xmmword ptr [rip+0x10925]   66 0f 6f 05 25 09 01 00
[I]       312  0x5555555669bb    mov rdx, qword ptr [rip+0x1094e]         48 8b 15 4e 09 01 00
[I]       313  0x5555555669c2    movups xmmword ptr [rax], xmm0           0f 11 00
[I]       314  0x5555555669c5    movdqa xmm0, xmmword ptr [rip+0x10923]   66 0f 6f 05 23 09 01 00
[I]       315  0x5555555669cd    mov qword ptr [rax+0x30], rdx            48 89 50 30
[I]       316  0x5555555669d1    movups xmmword ptr [rax+0x10], xmm0      0f 11 40 10
[I]       317  0x5555555669d5    movdqa xmm0, xmmword ptr [rip+0x10923]   66 0f 6f 05 23 09 01 00
[I]       318  0x5555555669dd    mov dword ptr [rbx], r12d                44 89 23
[I]       319  0x5555555669e0    movups xmmword ptr [rax+0x20], xmm0      0f 11 40 20
[I]       320  0x5555555669e4    pop rbx                                  5b
[I]       321  0x5555555669e5    pop r12                                  41 5c
[I]       322  0x5555555669e7    pop rbp                                  5d
[I]       323  0x5555555669e8    ret                                      c3
[B]       324  0x555555557fb2 loc_555555557fb2: // size=67 thread=0x100000000
[I]       324  0x555555557fb2    mov edx, dword ptr [rip+0x1f36c]         8b 15 6c f3 01 00
[I]       325  0x555555557fb8    or dword ptr [rax+0xc], 0x4000000        81 48 0c 00 00 00 04
[I]       326  0x555555557fbf    mov qword ptr [rip+0x1f4e2], rax         48 89 05 e2 f4 01 00
[I]       327  0x555555557fc6    movzx eax, byte ptr [rip+0x1f72f]        0f b6 05 2f f7 01 00
[I]       328  0x555555557fcd    xor eax, 0x1                             83 f0 01
[I]       329  0x555555557fd0    test edx, edx                            85 d2
[I]       330  0x555555557fd2    setz cl                                  0f 94 c1
[I]       331  0x555555557fd5    and eax, ecx                             21 c8
[I]       332  0x555555557fd7    movsx ecx, byte ptr [rip+0x1f09a]        0f be 0d 9a f0 01 00
[I]       333  0x555555557fde    and al, byte ptr [rip+0x1f714]           22 05 14 f7 01 00
[I]       334  0x555555557fe4    mov byte ptr [rip+0x1f70e], al           88 05 0e f7 01 00
[I]       335  0x555555557fea    movzx eax, al                            0f b6 c0
[I]       336  0x555555557fed    cmp ecx, eax                             39 c1
[I]       337  0x555555557fef    jl 0x555555559502                        0f 8c 0d 15 00 00
[B]       338  0x555555557ff5 loc_555555557ff5: // size=13 thread=0x100000000
[I]       338  0x555555557ff5    cmp dword ptr [rbp-0xf0], 0x0            83 bd 10 ff ff ff 00
[I]       339  0x555555557ffc    js 0x5555555585fd                        0f 88 fb 05 00 00
[B]       340  0x5555555585fd loc_5555555585fd: // size=8 thread=0x100000000
[I]       340  0x5555555585fd    test edx, edx                            85 d2
[I]       341  0x5555555585ff    jz 0x555555558c7d                        0f 84 78 06 00 00
[B]       342  0x555555558605 loc_555555558605: // size=13 thread=0x100000000
[I]       342  0x555555558605    cmp byte ptr [rip+0x1eec4], 0x0          80 3d c4 ee 01 00 00
[I]       343  0x55555555860c    jz 0x555555559153                        0f 84 41 0b 00 00
[B]       344  0x555555559153 loc_555555559153: // size=13 thread=0x100000000
[I]       344  0x555555559153    xor edi, edi                             31 ff
[I]       345  0x555555559155    mov dword ptr [rip+0x1f305], edi         89 3d 05 f3 01 00
[I]       346  0x55555555915b    jmp 0x55555555805b                       e9 fb ee ff ff
[B]       347  0x55555555805b loc_55555555805b: // size=36 thread=0x100000000
[I]       347  0x55555555805b    mov rax, qword ptr [rip+0x1ecbe]         48 8b 05 be ec 01 00
[I]       348  0x555555558062    mov eax, dword ptr [rax]                 8b 00
[I]       349  0x555555558064    mov dword ptr [rbp-0xd4], eax            89 85 2c ff ff ff
[I]       350  0x55555555806a    movzx eax, byte ptr [rip+0x1f2af]        0f b6 05 af f2 01 00
[I]       351  0x555555558071    mov byte ptr [rbp-0xd8], al              88 85 28 ff ff ff
[I]       352  0x555555558077    test al, al                              84 c0
[I]       353  0x555555558079    jnz 0x5555555587c8                       0f 85 49 07 00 00
[B]       354  0x55555555807f loc_55555555807f: // size=9 thread=0x100000000
[I]       354  0x55555555807f    cmp byte ptr [rip+0x1f704], 0x0          80 3d 04 f7 01 00 00
[I]       355  0x555555558086    jz 0x55555555808f                        74 07
[B]       356  0x55555555808f loc_55555555808f: // size=9 thread=0x100000000
[I]       356  0x55555555808f    cmp dword ptr [rip+0x1f6ee], 0x0         83 3d ee f6 01 00 00
[I]       357  0x555555558096    jnz 0x5555555580b0                       75 18
[B]       358  0x555555558098 loc_555555558098: // size=18 thread=0x100000000
[I]       358  0x555555558098    cmp byte ptr [rip+0x1f6e2], 0x0          80 3d e2 f6 01 00 00
[I]       359  0x55555555809f    mov eax, 0x1                             b8 01 00 00 00
[I]       360  0x5555555580a4    jz 0x5555555583f1                        0f 84 47 03 00 00
[B]       361  0x5555555583f1 loc_5555555583f1: // size=13 thread=0x100000000
[I]       361  0x5555555583f1    cmp dword ptr [rip+0x1ef24], 0x3         83 3d 24 ef 01 00 03
[I]       362  0x5555555583f8    jz 0x5555555580aa                        0f 84 ac fc ff ff
[B]       363  0x5555555583fe loc_5555555583fe: // size=13 thread=0x100000000
[I]       363  0x5555555583fe    cmp dword ptr [rip+0x1ef1f], 0x0         83 3d 1f ef 01 00 00
[I]       364  0x555555558405    jz 0x5555555580aa                        0f 84 9f fc ff ff
[B]       365  0x55555555840b loc_55555555840b: // size=10 thread=0x100000000
[I]       365  0x55555555840b    mov eax, 0x3                             b8 03 00 00 00
[I]       366  0x555555558410    jmp 0x5555555580aa                       e9 95 fc ff ff
[B]       367  0x5555555580aa loc_5555555580aa: // size=37 thread=0x100000000
[I]       367  0x5555555580aa    mov dword ptr [rip+0x1f6d4], eax         89 05 d4 f6 01 00
[I]       368  0x5555555580b0    movq xmm1, qword ptr [rip+0x1edf8]       f3 0f 7e 0d f8 ed 01 00
[I]       369  0x5555555580b8    cmp byte ptr [rip+0x1f6c1], 0x0          80 3d c1 f6 01 00 00
[I]       370  0x5555555580bf    movhps xmm1, qword ptr [rip+0x1eba2]     0f 16 0d a2 eb 01 00
[I]       371  0x5555555580c6    movaps xmmword ptr [rbp-0xf0], xmm1      0f 29 8d 10 ff ff ff
[I]       372  0x5555555580cd    jz 0x555555558120                        74 51
[B]       373  0x555555558120 loc_555555558120: // size=13 thread=0x100000000
[I]       373  0x555555558120    lea rdi, ptr [rip+0x170ec]               48 8d 3d ec 70 01 00
[C]       374 Calling function 0x7fffc2e41b00(getenv)
[!] Function 0x7fffc2e41b00 is filtered, no tracing
[I]       374  0x555555558127    call qword ptr [rip+0x1eb13]             ff 15 13 eb 01 00
[B]       375  0x55555555812d loc_55555555812d: // size=8 thread=0x100000000
[I]       375  0x55555555812d    mov rdi, rax                             48 89 c7
[C]       376 Calling function 0x55555555bd30(error_at_line)
[I]       376  0x555555558130    call 0x55555555bd30                      e8 fb 3b 00 00
[B]       377  0x55555555bd30 loc_55555555bd30: // size=16 thread=0x100000000
[I]       377  0x55555555bd30    push rbp                                 55
[I]       378  0x55555555bd31    mov rbp, rsp                             48 89 e5
[I]       379  0x55555555bd34    push r14                                 41 56
[I]       380  0x55555555bd36    push r13                                 41 55
[I]       381  0x55555555bd38    push r12                                 41 54
[I]       382  0x55555555bd3a    push rbx                                 53
[I]       383  0x55555555bd3b    test rdi, rdi                            48 85 ff
[I]       384  0x55555555bd3e    jz 0x55555555bdb0                        74 70
[B]       385  0x55555555bdb0 loc_55555555bdb0: // size=11 thread=0x100000000
[I]       385  0x55555555bdb0    mov edi, 0x80                            bf 80 00 00 00
[C]       386 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]       386  0x55555555bdb5    call qword ptr [rip+0x1b0f5]             ff 15 f5 b0 01 00
[B]       387  0x55555555bdbb loc_55555555bdbb: // size=8 thread=0x100000000
[I]       387  0x55555555bdbb    mov rbx, rax                             48 89 c3
[I]       388  0x55555555bdbe    test rax, rax                            48 85 c0
[I]       389  0x55555555bdc1    jz 0x55555555bda0                        74 dd
[B]       390  0x55555555bdc3 loc_55555555bdc3: // size=25 thread=0x100000000
[I]       390  0x55555555bdc3    xor edx, edx                             31 d2
[I]       391  0x55555555bdc5    mov qword ptr [rax], 0x0                 48 c7 00 00 00 00 00
[I]       392  0x55555555bdcc    mov word ptr [rax+0x8], dx               66 89 50 08
[I]       393  0x55555555bdd0    mov rax, rbx                             48 89 d8
[I]       394  0x55555555bdd3    pop rbx                                  5b
[I]       395  0x55555555bdd4    pop r12                                  41 5c
[I]       396  0x55555555bdd6    pop r13                                  41 5d
[I]       397  0x55555555bdd8    pop r14                                  41 5e
[I]       398  0x55555555bdda    pop rbp                                  5d
[I]       399  0x55555555bddb    ret                                      c3
[B]       400  0x555555558135 loc_555555558135: // size=113 thread=0x100000000
[I]       400  0x555555558135    movzx edx, byte ptr [rip+0x1f1dc]        0f b6 15 dc f1 01 00
[I]       401  0x55555555813c    movzx ecx, byte ptr [rip+0x1f1e5]        0f b6 0d e5 f1 01 00
[I]       402  0x555555558143    or cl, byte ptr [rip+0x1f5b3]            0a 0d b3 f5 01 00
[I]       403  0x555555558149    mov qword ptr [rip+0x1f5b0], rax         48 89 05 b0 f5 01 00
[I]       404  0x555555558150    or ecx, edx                              09 d1
[I]       405  0x555555558152    cmp dword ptr [rip+0x1f1cb], 0x0         83 3d cb f1 01 00 00
[I]       406  0x555555558159    setz al                                  0f 94 c0
[I]       407  0x55555555815c    or ecx, eax                              09 c1
[I]       408  0x55555555815e    mov eax, dword ptr [rip+0x202fc]         8b 05 fc 02 02 00
[I]       409  0x555555558164    sub eax, 0x3                             83 e8 03
[I]       410  0x555555558167    and eax, 0xfffffffd                      83 e0 fd
[I]       411  0x55555555816a    setz al                                  0f 94 c0
[I]       412  0x55555555816d    or dl, byte ptr [rip+0x1f60d]            0a 15 0d f6 01 00
[I]       413  0x555555558173    or ecx, eax                              09 c1
[I]       414  0x555555558175    movzx eax, byte ptr [rip+0x1f1a4]        0f b6 05 a4 f1 01 00
[I]       415  0x55555555817c    mov byte ptr [rip+0x1f579], cl           88 0d 79 f5 01 00
[I]       416  0x555555558182    or edx, eax                              09 c2
[I]       417  0x555555558184    or dl, byte ptr [rip+0x1f600]            0a 15 00 f6 01 00
[I]       418  0x55555555818a    cmp dword ptr [rip+0x1f18b], 0x0         83 3d 8b f1 01 00 00
[I]       419  0x555555558191    setnz sil                                40 0f 95 c6
[I]       420  0x555555558195    xor ecx, 0x1                             83 f1 01
[I]       421  0x555555558198    or edx, esi                              09 f2
[I]       422  0x55555555819a    and edx, ecx                             21 ca
[I]       423  0x55555555819c    mov byte ptr [rip+0x1f558], dl           88 15 58 f5 01 00
[I]       424  0x5555555581a2    test al, al                              84 c0
[I]       425  0x5555555581a4    jz 0x5555555581b0                        74 0a
[B]       426  0x5555555581b0 loc_5555555581b0: // size=19 thread=0x100000000
[I]       426  0x5555555581b0    cmp byte ptr [rip+0x1f541], 0x0          80 3d 41 f5 01 00 00
[I]       427  0x5555555581b7    mov byte ptr [rip+0x1f53c], al           88 05 3c f5 01 00
[I]       428  0x5555555581bd    jnz 0x55555555877f                       0f 85 bc 05 00 00
[B]       429  0x5555555581c3 loc_5555555581c3: // size=13 thread=0x100000000
[I]       429  0x5555555581c3    cmp byte ptr [rip+0x1f532], 0x0          80 3d 32 f5 01 00 00
[I]       430  0x5555555581ca    jnz 0x555555558a5c                       0f 85 8c 08 00 00
[B]       431  0x5555555581d0 loc_5555555581d0: // size=22 thread=0x100000000
[I]       431  0x5555555581d0    mov qword ptr [rip+0x1f43d], 0x64        48 c7 05 3d f4 01 00 64 00 00 00
[I]       432  0x5555555581db    mov edi, 0x5140                          bf 40 51 00 00
[C]       433 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]       433  0x5555555581e0    call qword ptr [rip+0x1ecca]             ff 15 ca ec 01 00
[B]       434  0x5555555581e6 loc_5555555581e6: // size=9 thread=0x100000000
[I]       434  0x5555555581e6    test rax, rax                            48 85 c0
[I]       435  0x5555555581e9    jz 0x555555559413                        0f 84 24 12 00 00
[B]       436  0x5555555581ef loc_5555555581ef: // size=24 thread=0x100000000
[I]       436  0x5555555581ef    xor edx, edx                             31 d2
[I]       437  0x5555555581f1    mov qword ptr [rip+0x1f418], rax         48 89 05 18 f4 01 00
[I]       438  0x5555555581f8    mov r13d, r14d                           45 89 f5
[I]       439  0x5555555581fb    mov qword ptr [rip+0x1f406], rdx         48 89 15 06 f4 01 00
[C]       440 Calling function 0x555555559a50(error_at_line)
[I]       440  0x555555558202    call 0x555555559a50                      e8 49 18 00 00
[B]       441  0x555555559a50 loc_555555559a50: // size=25 thread=0x100000000
[I]       441  0x555555559a50    push rbp                                 55
[I]       442  0x555555559a51    mov rbp, rsp                             48 89 e5
[I]       443  0x555555559a54    push r13                                 41 55
[I]       444  0x555555559a56    push r12                                 41 54
[I]       445  0x555555559a58    push rbx                                 53
[I]       446  0x555555559a59    sub rsp, 0x8                             48 83 ec 08
[I]       447  0x555555559a5d    mov rax, qword ptr [rip+0x1dba4]         48 8b 05 a4 db 01 00
[I]       448  0x555555559a64    test rax, rax                            48 85 c0
[I]       449  0x555555559a67    jle 0x555555559aac                       7e 43
[B]       450  0x555555559aac loc_555555559aac: // size=136 thread=0x100000000
[I]       450  0x555555559aac    mov qword ptr [rip+0x1db51], 0x0         48 c7 05 51 db 01 00 00 00 00 00
[I]       451  0x555555559ab7    mov byte ptr [rip+0x1d7fe], 0x0          c6 05 fe d7 01 00 00
[I]       452  0x555555559abe    mov byte ptr [rip+0x1d9c7], 0x0          c6 05 c7 d9 01 00 00
[I]       453  0x555555559ac5    mov dword ptr [rip+0x1d7e9], 0x0         c7 05 e9 d7 01 00 00 00 00 00
[I]       454  0x555555559acf    mov dword ptr [rip+0x1d7db], 0x0         c7 05 db d7 01 00 00 00 00 00
[I]       455  0x555555559ad9    mov dword ptr [rip+0x1d9a5], 0x0         c7 05 a5 d9 01 00 00 00 00 00
[I]       456  0x555555559ae3    mov dword ptr [rip+0x1d997], 0x0         c7 05 97 d9 01 00 00 00 00 00
[I]       457  0x555555559aed    mov dword ptr [rip+0x1d989], 0x0         c7 05 89 d9 01 00 00 00 00 00
[I]       458  0x555555559af7    mov dword ptr [rip+0x1d97b], 0x0         c7 05 7b d9 01 00 00 00 00 00
[I]       459  0x555555559b01    mov dword ptr [rip+0x1d7a5], 0x0         c7 05 a5 d7 01 00 00 00 00 00
[I]       460  0x555555559b0b    mov dword ptr [rip+0x1d963], 0x0         c7 05 63 d9 01 00 00 00 00 00
[I]       461  0x555555559b15    mov dword ptr [rip+0x1d955], 0x0         c7 05 55 d9 01 00 00 00 00 00
[I]       462  0x555555559b1f    mov dword ptr [rip+0x1d947], 0x0         c7 05 47 d9 01 00 00 00 00 00
[I]       463  0x555555559b29    add rsp, 0x8                             48 83 c4 08
[I]       464  0x555555559b2d    pop rbx                                  5b
[I]       465  0x555555559b2e    pop r12                                  41 5c
[I]       466  0x555555559b30    pop r13                                  41 5d
[I]       467  0x555555559b32    pop rbp                                  5d
[I]       468  0x555555559b33    ret                                      c3
[B]       469  0x555555558207 loc_555555558207: // size=18 thread=0x100000000
[I]       469  0x555555558207    mov eax, dword ptr [rbp-0xd4]            8b 85 2c ff ff ff
[I]       470  0x55555555820d    sub r13d, eax                            41 29 c5
[I]       471  0x555555558210    test r13d, r13d                          45 85 ed
[I]       472  0x555555558213    jle 0x555555558621                       0f 8e 08 04 00 00
[B]       473  0x555555558621 loc_555555558621: // size=13 thread=0x100000000
[I]       473  0x555555558621    cmp byte ptr [rip+0x1f159], 0x0          80 3d 59 f1 01 00 00
[I]       474  0x555555558628    jz 0x555555558c8a                        0f 84 5c 06 00 00
[B]       475  0x555555558c8a loc_555555558c8a: // size=19 thread=0x100000000
[I]       475  0x555555558c8a    mov edx, 0x1                             ba 01 00 00 00
[I]       476  0x555555558c8f    xor esi, esi                             31 f6
[I]       477  0x555555558c91    lea rdi, ptr [rip+0x16554]               48 8d 3d 54 65 01 00
[C]       478 Calling function 0x5555555640f0(error_at_line)
[I]       478  0x555555558c98    call 0x5555555640f0                      e8 53 b4 00 00
[B]       479  0x5555555640f0 loc_5555555640f0: // size=31 thread=0x100000000
[I]       479  0x5555555640f0    push rbp                                 55
[I]       480  0x5555555640f1    mov rbp, rsp                             48 89 e5
[I]       481  0x5555555640f4    push r14                                 41 56
[I]       482  0x5555555640f6    mov r14, rsi                             49 89 f6
[I]       483  0x5555555640f9    push r13                                 41 55
[I]       484  0x5555555640fb    mov r13d, edx                            41 89 d5
[I]       485  0x5555555640fe    push r12                                 41 54
[I]       486  0x555555564100    mov r12, rdi                             49 89 fc
[I]       487  0x555555564103    mov edi, 0x20                            bf 20 00 00 00
[I]       488  0x555555564108    push rbx                                 53
[C]       489 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]       489  0x555555564109    call qword ptr [rip+0x12da1]             ff 15 a1 2d 01 00
[B]       490  0x55555556410f loc_55555556410f: // size=5 thread=0x100000000
[I]       490  0x55555556410f    test rax, rax                            48 85 c0
[I]       491  0x555555564112    jz 0x55555556415d                        74 49
[B]       492  0x555555564114 loc_555555564114: // size=8 thread=0x100000000
[I]       492  0x555555564114    mov rbx, rax                             48 89 c3
[I]       493  0x555555564117    test r14, r14                            4d 85 f6
[I]       494  0x55555556411a    jz 0x555555564127                        74 0b
[B]       495  0x555555564127 loc_555555564127: // size=9 thread=0x100000000
[I]       495  0x555555564127    mov qword ptr [rbx+0x8], r14             4c 89 73 08
[I]       496  0x55555556412b    test r12, r12                            4d 85 e4
[I]       497  0x55555556412e    jz 0x55555556413b                        74 0b
[B]       498  0x555555564130 loc_555555564130: // size=8 thread=0x100000000
[I]       498  0x555555564130    mov rdi, r12                             4c 89 e7
[C]       499 Calling function 0x5555555640a0(error_at_line)
[I]       499  0x555555564133    call 0x5555555640a0                      e8 68 ff ff ff
[B]       500  0x5555555640a0 loc_5555555640a0: // size=20 thread=0x100000000
[I]       500  0x5555555640a0    nop edx, edi                             f3 0f 1e fa
[I]       501  0x5555555640a4    push rbp                                 55
[I]       502  0x5555555640a5    mov rbp, rsp                             48 89 e5
[I]       503  0x5555555640a8    push r12                                 41 54
[I]       504  0x5555555640aa    mov r12, rdi                             49 89 fc
[I]       505  0x5555555640ad    push rbx                                 53
[C]       506 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]       506  0x5555555640ae    call qword ptr [rip+0x12ca4]             ff 15 a4 2c 01 00
[B]       507  0x5555555640b4 loc_5555555640b4: // size=13 thread=0x100000000
[I]       507  0x5555555640b4    lea rbx, ptr [rax+0x1]                   48 8d 58 01
[I]       508  0x5555555640b8    mov rdi, rbx                             48 89 df
[C]       509 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]       509  0x5555555640bb    call qword ptr [rip+0x12def]             ff 15 ef 2d 01 00
[B]       510  0x5555555640c1 loc_5555555640c1: // size=5 thread=0x100000000
[I]       510  0x5555555640c1    test rax, rax                            48 85 c0
[I]       511  0x5555555640c4    jz 0x5555555640dc                        74 16
[B]       512  0x5555555640c6 loc_5555555640c6: // size=22 thread=0x100000000
[I]       512  0x5555555640c6    mov rcx, rbx                             48 89 d9
[I]       513  0x5555555640c9    mov rdx, rbx                             48 89 da
[I]       514  0x5555555640cc    mov rsi, r12                             4c 89 e6
[I]       515  0x5555555640cf    pop rbx                                  5b
[I]       516  0x5555555640d0    mov rdi, rax                             48 89 c7
[I]       517  0x5555555640d3    pop r12                                  41 5c
[I]       518  0x5555555640d5    pop rbp                                  5d
[I]       519  0x5555555640d6    jmp qword ptr [rip+0x12d6c]              ff 25 6c 2d 01 00
[B]       520  0x555555564138 loc_555555564138: // size=37 thread=0x100000000
[I]       520  0x555555564138    mov r12, rax                             49 89 c4
[I]       521  0x55555556413b    mov rax, qword ptr [rip+0x1366e]         48 8b 05 6e 36 01 00
[I]       522  0x555555564142    mov qword ptr [rbx], r12                 4c 89 23
[I]       523  0x555555564145    mov byte ptr [rbx+0x10], r13b            44 88 6b 10
[I]       524  0x555555564149    mov qword ptr [rbx+0x18], rax            48 89 43 18
[I]       525  0x55555556414d    mov qword ptr [rip+0x1365c], rbx         48 89 1d 5c 36 01 00
[I]       526  0x555555564154    pop rbx                                  5b
[I]       527  0x555555564155    pop r12                                  41 5c
[I]       528  0x555555564157    pop r13                                  41 5d
[I]       529  0x555555564159    pop r14                                  41 5e
[I]       530  0x55555556415b    pop rbp                                  5d
[I]       531  0x55555556415c    ret                                      c3
[B]       532  0x555555558c9d loc_555555558c9d: // size=5 thread=0x100000000
[I]       532  0x555555558c9d    jmp 0x555555558646                       e9 a4 f9 ff ff
[B]       533  0x555555558646 loc_555555558646: // size=14 thread=0x100000000
[I]       533  0x555555558646    cmp qword ptr [rip+0x1efba], 0x0         48 83 3d ba ef 01 00 00
[I]       534  0x55555555864e    jnz 0x555555558436                       0f 85 e2 fd ff ff
[B]       535  0x555555558654 loc_555555558654: // size=16 thread=0x100000000
[I]       535  0x555555558654    mov rbx, qword ptr [rip+0x1f155]         48 8b 1d 55 f1 01 00
[I]       536  0x55555555865b    test rbx, rbx                            48 85 db
[I]       537  0x55555555865e    jz 0x5555555582b7                        0f 84 53 fc ff ff
[B]       538  0x555555558664 loc_555555558664: // size=11 thread=0x100000000
[I]       538  0x555555558664    cmp qword ptr [rbx+0x18], 0x0            48 83 7b 18 00
[I]       539  0x555555558669    jnz 0x555555558258                       0f 85 e9 fb ff ff
[B]       540  0x55555555866f loc_55555555866f: // size=12 thread=0x100000000
[I]       540  0x55555555866f    mov byte ptr [rip+0x1f142], 0x0          c6 05 42 f1 01 00 00
[I]       541  0x555555558676    jmp 0x555555558258                       e9 dd fb ff ff
[B]       542  0x555555558258 loc_555555558258: // size=26 thread=0x100000000
[I]       542  0x555555558258    mov rax, qword ptr [rbx+0x18]            48 8b 43 18
[I]       543  0x55555555825c    mov r12, qword ptr [rip+0x1f515]         4c 8b 25 15 f5 01 00
[I]       544  0x555555558263    mov rdi, qword ptr [rbx]                 48 8b 3b
[I]       545  0x555555558266    mov qword ptr [rip+0x1f543], rax         48 89 05 43 f5 01 00
[I]       546  0x55555555826d    test r12, r12                            4d 85 e4
[I]       547  0x555555558270    jz 0x55555555827b                        74 09
[B]       548  0x55555555827b loc_55555555827b: // size=13 thread=0x100000000
[I]       548  0x55555555827b    movzx edx, byte ptr [rbx+0x10]           0f b6 53 10
[I]       549  0x55555555827f    mov rsi, qword ptr [rbx+0x8]             48 8b 73 08
[C]       550 Calling function 0x555555566240(error_at_line)
[I]       550  0x555555558283    call 0x555555566240                      e8 b8 df 00 00
[B]       551  0x555555566240 loc_555555566240: // size=63 thread=0x100000000
[I]       551  0x555555566240    push rbp                                 55
[I]       552  0x555555566241    mov rbp, rsp                             48 89 e5
[I]       553  0x555555566244    push r15                                 41 57
[I]       554  0x555555566246    mov r15d, edx                            41 89 d7
[I]       555  0x555555566249    push r14                                 41 56
[I]       556  0x55555556624b    mov r14, rdi                             49 89 fe
[I]       557  0x55555556624e    push r13                                 41 55
[I]       558  0x555555566250    push r12                                 41 54
[I]       559  0x555555566252    push rbx                                 53
[I]       560  0x555555566253    mov rbx, rsi                             48 89 f3
[I]       561  0x555555566256    sub rsp, 0x2e8                           48 81 ec e8 02 00 00
[I]       562  0x55555556625d    mov qword ptr [rbp-0x2e8], rdi           48 89 bd 18 fd ff ff
[I]       563  0x555555566264    mov dword ptr [rbp-0x304], edx           89 95 fc fc ff ff
[I]       564  0x55555556626a    mov rax, qword ptr fs:[0x28]             64 48 8b 04 25 28 00 00 00
[I]       565  0x555555566273    mov qword ptr [rbp-0x38], rax            48 89 45 c8
[I]       566  0x555555566277    xor eax, eax                             31 c0
[C]       567 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]       567  0x555555566279    call qword ptr [rip+0x10a11]             ff 15 11 0a 01 00
[B]       568  0x55555556627f loc_55555556627f: // size=18 thread=0x100000000
[I]       568  0x55555556627f    mov rdi, r14                             4c 89 f7
[I]       569  0x555555566282    mov dword ptr [rax], 0x0                 c7 00 00 00 00 00
[I]       570  0x555555566288    mov r13, rax                             49 89 c5
[C]       571 Calling function 0x7fffc2ee4800(opendir)
[!] Function 0x7fffc2ee4800 is filtered, no tracing
[I]       571  0x55555556628b    call qword ptr [rip+0x10a97]             ff 15 97 0a 01 00
[B]       572  0x555555566291 loc_555555566291: // size=9 thread=0x100000000
[I]       572  0x555555566291    test rax, rax                            48 85 c0
[I]       573  0x555555566294    jz 0x555555566929                        0f 84 8f 06 00 00
[B]       574  0x55555556629a loc_55555556629a: // size=19 thread=0x100000000
[I]       574  0x55555556629a    mov r12, qword ptr [rip+0x114d7]         4c 8b 25 d7 14 01 00
[I]       575  0x5555555662a1    mov r14, rax                             49 89 c6
[I]       576  0x5555555662a4    test r12, r12                            4d 85 e4
[I]       577  0x5555555662a7    jz 0x5555555663e2                        0f 84 35 01 00 00
[C]       578 Calling function 0x555555559a50(error_at_line)
[B]       578  0x5555555663e2 loc_5555555663e2: // size=5 thread=0x100000000
[I]       578  0x5555555663e2    call 0x555555559a50                      e8 69 36 ff ff
[B]       579  0x555555559a50 loc_555555559a50: // size=25 thread=0x100000000
[I]       579  0x555555559a50    push rbp                                 55
[I]       580  0x555555559a51    mov rbp, rsp                             48 89 e5
[I]       581  0x555555559a54    push r13                                 41 55
[I]       582  0x555555559a56    push r12                                 41 54
[I]       583  0x555555559a58    push rbx                                 53
[I]       584  0x555555559a59    sub rsp, 0x8                             48 83 ec 08
[I]       585  0x555555559a5d    mov rax, qword ptr [rip+0x1dba4]         48 8b 05 a4 db 01 00
[I]       586  0x555555559a64    test rax, rax                            48 85 c0
[I]       587  0x555555559a67    jle 0x555555559aac                       7e 43
[B]       588  0x555555559aac loc_555555559aac: // size=136 thread=0x100000000
[I]       588  0x555555559aac    mov qword ptr [rip+0x1db51], 0x0         48 c7 05 51 db 01 00 00 00 00 00
[I]       589  0x555555559ab7    mov byte ptr [rip+0x1d7fe], 0x0          c6 05 fe d7 01 00 00
[I]       590  0x555555559abe    mov byte ptr [rip+0x1d9c7], 0x0          c6 05 c7 d9 01 00 00
[I]       591  0x555555559ac5    mov dword ptr [rip+0x1d7e9], 0x0         c7 05 e9 d7 01 00 00 00 00 00
[I]       592  0x555555559acf    mov dword ptr [rip+0x1d7db], 0x0         c7 05 db d7 01 00 00 00 00 00
[I]       593  0x555555559ad9    mov dword ptr [rip+0x1d9a5], 0x0         c7 05 a5 d9 01 00 00 00 00 00
[I]       594  0x555555559ae3    mov dword ptr [rip+0x1d997], 0x0         c7 05 97 d9 01 00 00 00 00 00
[I]       595  0x555555559aed    mov dword ptr [rip+0x1d989], 0x0         c7 05 89 d9 01 00 00 00 00 00
[I]       596  0x555555559af7    mov dword ptr [rip+0x1d97b], 0x0         c7 05 7b d9 01 00 00 00 00 00
[I]       597  0x555555559b01    mov dword ptr [rip+0x1d7a5], 0x0         c7 05 a5 d7 01 00 00 00 00 00
[I]       598  0x555555559b0b    mov dword ptr [rip+0x1d963], 0x0         c7 05 63 d9 01 00 00 00 00 00
[I]       599  0x555555559b15    mov dword ptr [rip+0x1d955], 0x0         c7 05 55 d9 01 00 00 00 00 00
[I]       600  0x555555559b1f    mov dword ptr [rip+0x1d947], 0x0         c7 05 47 d9 01 00 00 00 00 00
[I]       601  0x555555559b29    add rsp, 0x8                             48 83 c4 08
[I]       602  0x555555559b2d    pop rbx                                  5b
[I]       603  0x555555559b2e    pop r12                                  41 5c
[I]       604  0x555555559b30    pop r13                                  41 5d
[I]       605  0x555555559b32    pop rbp                                  5d
[I]       606  0x555555559b33    ret                                      c3
[B]       607  0x5555555663e7 loc_5555555663e7: // size=13 thread=0x100000000
[I]       607  0x5555555663e7    cmp byte ptr [rip+0x11392], 0x0          80 3d 92 13 01 00 00
[I]       608  0x5555555663ee    jz 0x555555566759                        0f 84 65 03 00 00
[B]       609  0x555555566759 loc_555555566759: // size=13 thread=0x100000000
[I]       609  0x555555566759    cmp byte ptr [rip+0x11058], 0x0          80 3d 58 10 01 00 00
[I]       610  0x555555566760    jz 0x555555566475                        0f 84 0f fd ff ff
[B]       611  0x555555566475 loc_555555566475: // size=44 thread=0x100000000
[I]       611  0x555555566475    mov qword ptr [rbp-0x2f0], 0x0           48 c7 85 10 fd ff ff 00 00 00 00
[I]       612  0x555555566480    movzx eax, r15b                          41 0f b6 c7
[I]       613  0x555555566484    mov dword ptr [rbp-0x300], eax           89 85 00 fd ff ff
[I]       614  0x55555556648a    nop word ptr [rax+rax*1]                 66 0f 1f 44 00 00
[I]       615  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]       616  0x555555566498    mov rdi, r14                             4c 89 f7
[C]       617 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]       617  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]       618  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]       618  0x5555555664a1    mov r12, rax                             49 89 c4
[I]       619  0x5555555664a4    test rax, rax                            48 85 c0
[I]       620  0x5555555664a7    jz 0x555555566520                        74 77
[B]       621  0x5555555664a9 loc_5555555664a9: // size=19 thread=0x100000000
[I]       621  0x5555555664a9    lea rbx, ptr [rax+0x13]                  48 8d 58 13
[I]       622  0x5555555664ad    mov eax, dword ptr [rip+0x11021]         8b 05 21 10 01 00
[I]       623  0x5555555664b3    cmp eax, 0x2                             83 f8 02
[I]       624  0x5555555664b6    jz 0x5555555666b0                        0f 84 f4 01 00 00
[B]       625  0x5555555664bc loc_5555555664bc: // size=12 thread=0x100000000
[I]       625  0x5555555664bc    cmp byte ptr [r12+0x13], 0x2e            41 80 7c 24 13 2e
[I]       626  0x5555555664c2    jz 0x555555566688                        0f 84 c0 01 00 00
[B]       627  0x555555566688 loc_555555566688: // size=8 thread=0x100000000
[I]       627  0x555555566688    test eax, eax                            85 c0
[I]       628  0x55555556668a    jz 0x555555566510                        0f 84 80 fe ff ff
[C]       629 Calling function 0x55555555f4f0(error_at_line)
[B]       629  0x555555566510 loc_555555566510: // size=5 thread=0x100000000
[I]       629  0x555555566510    call 0x55555555f4f0                      e8 db 8f ff ff
[B]       630  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]       630  0x55555555f4f0    push rbp                                 55
[I]       631  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]       632  0x55555555f4f4    push r15                                 41 57
[I]       633  0x55555555f4f6    push r14                                 41 56
[I]       634  0x55555555f4f8    push r13                                 41 55
[I]       635  0x55555555f4fa    push r12                                 41 54
[I]       636  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]       637  0x55555555f503    push rbx                                 53
[I]       638  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]       639  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]       640  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]       641  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]       642  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]       643  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]       644  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]       645  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]       645  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]       646  0x55555555f58d    test eax, eax                            85 c0
[I]       647  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]       648  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]       648  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]       649  0x55555555f597    test eax, eax                            85 c0
[I]       650  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]       651  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]       651  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]       652  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]       653  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]       654  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]       654  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]       655  0x55555555f5e6    pop rbx                                  5b
[I]       656  0x55555555f5e7    pop r12                                  41 5c
[I]       657  0x55555555f5e9    pop r13                                  41 5d
[I]       658  0x55555555f5eb    pop r14                                  41 5e
[I]       659  0x55555555f5ed    pop r15                                  41 5f
[I]       660  0x55555555f5ef    pop rbp                                  5d
[I]       661  0x55555555f5f0    ret                                      c3
[B]       662  0x555555566515 loc_555555566515: // size=5 thread=0x100000000
[I]       662  0x555555566515    jmp 0x555555566490                       e9 76 ff ff ff
[B]       663  0x555555566490 loc_555555566490: // size=17 thread=0x100000000
[I]       663  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]       664  0x555555566498    mov rdi, r14                             4c 89 f7
[C]       665 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]       665  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]       666  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]       666  0x5555555664a1    mov r12, rax                             49 89 c4
[I]       667  0x5555555664a4    test rax, rax                            48 85 c0
[I]       668  0x5555555664a7    jz 0x555555566520                        74 77
[B]       669  0x5555555664a9 loc_5555555664a9: // size=19 thread=0x100000000
[I]       669  0x5555555664a9    lea rbx, ptr [rax+0x13]                  48 8d 58 13
[I]       670  0x5555555664ad    mov eax, dword ptr [rip+0x11021]         8b 05 21 10 01 00
[I]       671  0x5555555664b3    cmp eax, 0x2                             83 f8 02
[I]       672  0x5555555664b6    jz 0x5555555666b0                        0f 84 f4 01 00 00
[B]       673  0x5555555664bc loc_5555555664bc: // size=12 thread=0x100000000
[I]       673  0x5555555664bc    cmp byte ptr [r12+0x13], 0x2e            41 80 7c 24 13 2e
[I]       674  0x5555555664c2    jz 0x555555566688                        0f 84 c0 01 00 00
[B]       675  0x555555566688 loc_555555566688: // size=8 thread=0x100000000
[I]       675  0x555555566688    test eax, eax                            85 c0
[I]       676  0x55555556668a    jz 0x555555566510                        0f 84 80 fe ff ff
[C]       677 Calling function 0x55555555f4f0(error_at_line)
[B]       677  0x555555566510 loc_555555566510: // size=5 thread=0x100000000
[I]       677  0x555555566510    call 0x55555555f4f0                      e8 db 8f ff ff
[B]       678  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]       678  0x55555555f4f0    push rbp                                 55
[I]       679  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]       680  0x55555555f4f4    push r15                                 41 57
[I]       681  0x55555555f4f6    push r14                                 41 56
[I]       682  0x55555555f4f8    push r13                                 41 55
[I]       683  0x55555555f4fa    push r12                                 41 54
[I]       684  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]       685  0x55555555f503    push rbx                                 53
[I]       686  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]       687  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]       688  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]       689  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]       690  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]       691  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]       692  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]       693  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]       693  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]       694  0x55555555f58d    test eax, eax                            85 c0
[I]       695  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]       696  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]       696  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]       697  0x55555555f597    test eax, eax                            85 c0
[I]       698  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]       699  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]       699  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]       700  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]       701  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]       702  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]       702  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]       703  0x55555555f5e6    pop rbx                                  5b
[I]       704  0x55555555f5e7    pop r12                                  41 5c
[I]       705  0x55555555f5e9    pop r13                                  41 5d
[I]       706  0x55555555f5eb    pop r14                                  41 5e
[I]       707  0x55555555f5ed    pop r15                                  41 5f
[I]       708  0x55555555f5ef    pop rbp                                  5d
[I]       709  0x55555555f5f0    ret                                      c3
[B]       710  0x555555566515 loc_555555566515: // size=5 thread=0x100000000
[I]       710  0x555555566515    jmp 0x555555566490                       e9 76 ff ff ff
[B]       711  0x555555566490 loc_555555566490: // size=17 thread=0x100000000
[I]       711  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]       712  0x555555566498    mov rdi, r14                             4c 89 f7
[C]       713 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]       713  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]       714  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]       714  0x5555555664a1    mov r12, rax                             49 89 c4
[I]       715  0x5555555664a4    test rax, rax                            48 85 c0
[I]       716  0x5555555664a7    jz 0x555555566520                        74 77
[B]       717  0x5555555664a9 loc_5555555664a9: // size=19 thread=0x100000000
[I]       717  0x5555555664a9    lea rbx, ptr [rax+0x13]                  48 8d 58 13
[I]       718  0x5555555664ad    mov eax, dword ptr [rip+0x11021]         8b 05 21 10 01 00
[I]       719  0x5555555664b3    cmp eax, 0x2                             83 f8 02
[I]       720  0x5555555664b6    jz 0x5555555666b0                        0f 84 f4 01 00 00
[B]       721  0x5555555664bc loc_5555555664bc: // size=12 thread=0x100000000
[I]       721  0x5555555664bc    cmp byte ptr [r12+0x13], 0x2e            41 80 7c 24 13 2e
[I]       722  0x5555555664c2    jz 0x555555566688                        0f 84 c0 01 00 00
[B]       723  0x5555555664c8 loc_5555555664c8: // size=8 thread=0x100000000
[I]       723  0x5555555664c8    test eax, eax                            85 c0
[I]       724  0x5555555664ca    jnz 0x5555555666b0                       0f 85 e0 01 00 00
[B]       725  0x5555555664d0 loc_5555555664d0: // size=12 thread=0x100000000
[I]       725  0x5555555664d0    mov r15, qword ptr [rip+0x10fe9]         4c 8b 3d e9 0f 01 00
[I]       726  0x5555555664d7    test r15, r15                            4d 85 ff
[I]       727  0x5555555664da    jnz 0x5555555664f5                       75 19
[B]       728  0x5555555664dc loc_5555555664dc: // size=5 thread=0x100000000
[I]       728  0x5555555664dc    jmp 0x5555555666b0                       e9 cf 01 00 00
[B]       729  0x5555555666b0 loc_5555555666b0: // size=12 thread=0x100000000
[I]       729  0x5555555666b0    mov r15, qword ptr [rip+0x10de1]         4c 8b 3d e1 0d 01 00
[I]       730  0x5555555666b7    test r15, r15                            4d 85 ff
[I]       731  0x5555555666ba    jnz 0x5555555666c9                       75 0d
[B]       732  0x5555555666bc loc_5555555666bc: // size=2 thread=0x100000000
[I]       732  0x5555555666bc    jmp 0x5555555666e8                       eb 2a
[B]       733  0x5555555666e8 loc_5555555666e8: // size=34 thread=0x100000000
[I]       733  0x5555555666e8    movzx eax, byte ptr [r12+0x12]           41 0f b6 44 24 12
[I]       734  0x5555555666ee    lea rcx, ptr [rip+0x704b]                48 8d 0d 4b 70 00 00
[I]       735  0x5555555666f5    xor edx, edx                             31 d2
[I]       736  0x5555555666f7    mov rdi, rbx                             48 89 df
[I]       737  0x5555555666fa    movsx esi, byte ptr [rcx+rax*1]          0f be 34 01
[I]       738  0x5555555666fe    mov rcx, qword ptr [rbp-0x2e8]           48 8b 8d 18 fd ff ff
[C]       739 Calling function 0x555555564590(error_at_line)
[I]       739  0x555555566705    call 0x555555564590                      e8 86 de ff ff
[B]       740  0x555555564590 loc_555555564590: // size=82 thread=0x100000000
[I]       740  0x555555564590    push rbp                                 55
[I]       741  0x555555564591    mov rbp, rsp                             48 89 e5
[I]       742  0x555555564594    push r15                                 41 57
[I]       743  0x555555564596    push r14                                 41 56
[I]       744  0x555555564598    push r13                                 41 55
[I]       745  0x55555556459a    push r12                                 41 54
[I]       746  0x55555556459c    push rbx                                 53
[I]       747  0x55555556459d    sub rsp, 0x388                           48 81 ec 88 03 00 00
[I]       748  0x5555555645a4    mov qword ptr [rbp-0x390], rdi           48 89 bd 70 fc ff ff
[I]       749  0x5555555645ab    mov rdi, qword ptr [rip+0x1305e]         48 8b 3d 5e 30 01 00
[I]       750  0x5555555645b2    mov dword ptr [rbp-0x378], edx           89 95 88 fc ff ff
[I]       751  0x5555555645b8    mov rdx, qword ptr [rip+0x13049]         48 8b 15 49 30 01 00
[I]       752  0x5555555645bf    mov dword ptr [rbp-0x374], esi           89 b5 8c fc ff ff
[I]       753  0x5555555645c5    cmp rdx, qword ptr [rip+0x1304c]         48 3b 15 4c 30 01 00
[I]       754  0x5555555645cc    mov rbx, qword ptr fs:[0x28]             64 48 8b 1c 25 28 00 00 00
[I]       755  0x5555555645d5    mov qword ptr [rbp-0x38], rbx            48 89 5d c8
[I]       756  0x5555555645d9    mov rbx, rcx                             48 89 cb
[I]       757  0x5555555645dc    jz 0x555555564c40                        0f 84 5e 06 00 00
[B]       758  0x5555555645e2 loc_5555555645e2: // size=59 thread=0x100000000
[I]       758  0x5555555645e2    lea rax, ptr [rdx+rdx*2]                 48 8d 04 52
[I]       759  0x5555555645e6    lea rdx, ptr [rdx+rax*4]                 48 8d 14 82
[I]       760  0x5555555645ea    xor eax, eax                             31 c0
[I]       761  0x5555555645ec    shl rdx, 0x4                             48 c1 e2 04
[I]       762  0x5555555645f0    lea r15, ptr [rdi+rdx*1]                 4c 8d 3c 17
[I]       763  0x5555555645f4    lea rdi, ptr [r15+0x8]                   49 8d 7f 08
[I]       764  0x5555555645f8    mov rcx, r15                             4c 89 f9
[I]       765  0x5555555645fb    mov qword ptr [r15], 0x0                 49 c7 07 00 00 00 00
[I]       766  0x555555564602    mov qword ptr [r15+0xc8], 0x0            49 c7 87 c8 00 00 00 00 00 00 00
[I]       767  0x55555556460d    and rdi, 0xfffffffffffffff8              48 83 e7 f8
[I]       768  0x555555564611    sub rcx, rdi                             48 29 f9
[I]       769  0x555555564614    add ecx, 0xd0                            81 c1 d0 00 00 00
[I]       770  0x55555556461a    shr ecx, 0x3                             c1 e9 03
[B]       771  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       771  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       772  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       772  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       773  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       773  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       774  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       774  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       775  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       775  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       776  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       776  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       777  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       777  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       778  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       778  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       779  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       779  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       780  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       780  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       781  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       781  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       782  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       782  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       783  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       783  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       784  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       784  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       785  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       785  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       786  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       786  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       787  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       787  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       788  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       788  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       789  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       789  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       790  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       790  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       791  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       791  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       792  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       792  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       793  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       793  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       794  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       794  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       795  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]       795  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]       796  0x555555564620 loc_555555564620: // size=47 thread=0x100000000
[I]       796  0x555555564620    mov dword ptr [r15+0xc4], 0xffffffff     41 c7 87 c4 00 00 00 ff ff ff ff
[I]       797  0x55555556462b    mov eax, dword ptr [rbp-0x374]           8b 85 8c fc ff ff
[I]       798  0x555555564631    cmp byte ptr [rip+0x12c84], 0x0          80 3d 84 2c 01 00 00
[I]       799  0x555555564638    mov dword ptr [r15+0xa8], eax            41 89 87 a8 00 00 00
[I]       800  0x55555556463f    lea rax, ptr [rip+0x129da]               48 8d 05 da 29 01 00
[I]       801  0x555555564646    mov qword ptr [r15+0xb0], rax            49 89 87 b0 00 00 00
[I]       802  0x55555556464d    jnz 0x55555556465c                       75 0d
[B]       803  0x55555556464f loc_55555556464f: // size=13 thread=0x100000000
[I]       803  0x55555556464f    cmp byte ptr [rip+0x12c67], 0x0          80 3d 67 2c 01 00 00
[I]       804  0x555555564656    jnz 0x555555564c78                       0f 85 1c 06 00 00
[B]       805  0x555555564c78 loc_555555564c78: // size=12 thread=0x100000000
[I]       805  0x555555564c78    mov rdi, qword ptr [rbp-0x390]           48 8b bd 70 fc ff ff
[C]       806 Calling function 0x55555555cec0(error_at_line)
[I]       806  0x555555564c7f    call 0x55555555cec0                      e8 3c 82 ff ff
[B]       807  0x55555555cec0 loc_55555555cec0: // size=58 thread=0x100000000
[I]       807  0x55555555cec0    push rbp                                 55
[I]       808  0x55555555cec1    lea rax, ptr [rip+0x1a418]               48 8d 05 18 a4 01 00
[I]       809  0x55555555cec8    mov rbp, rsp                             48 89 e5
[I]       810  0x55555555cecb    push r14                                 41 56
[I]       811  0x55555555cecd    push r13                                 41 55
[I]       812  0x55555555cecf    push r12                                 41 54
[I]       813  0x55555555ced1    push rbx                                 53
[I]       814  0x55555555ced2    sub rsp, 0x10                            48 83 ec 10
[I]       815  0x55555555ced6    mov rbx, qword ptr [rip+0x1a723]         48 8b 1d 23 a7 01 00
[I]       816  0x55555555cedd    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]       817  0x55555555cee6    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]       818  0x55555555ceea    mov r12, rdi                             49 89 fc
[I]       819  0x55555555ceed    test rbx, rbx                            48 85 db
[I]       820  0x55555555cef0    cmovz rbx, rax                           48 0f 44 d8
[C]       821 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]       821  0x55555555cef4    call qword ptr [rip+0x19d96]             ff 15 96 9d 01 00
[B]       822  0x55555555cefa loc_55555555cefa: // size=39 thread=0x100000000
[I]       822  0x55555555cefa    mov esi, 0x2                             be 02 00 00 00
[I]       823  0x55555555ceff    lea rdi, ptr [rbp-0x2a]                  48 8d 7d d6
[I]       824  0x55555555cf03    mov r14d, dword ptr [rax]                44 8b 30
[I]       825  0x55555555cf06    mov ecx, dword ptr [rbx]                 8b 0b
[I]       826  0x55555555cf08    mov r13, rax                             49 89 c5
[I]       827  0x55555555cf0b    lea r9, ptr [rbx+0x8]                    4c 8d 4b 08
[I]       828  0x55555555cf0f    mov r8d, dword ptr [rbx+0x4]             44 8b 43 04
[I]       829  0x55555555cf13    push qword ptr [rbx+0x30]                ff 73 30
[I]       830  0x55555555cf16    push qword ptr [rbx+0x28]                ff 73 28
[I]       831  0x55555555cf19    mov rdx, r12                             4c 89 e2
[C]       832 Calling function 0x5555555671b0(error_at_line)
[I]       832  0x55555555cf1c    call 0x5555555671b0                      e8 8f a2 00 00
[B]       833  0x5555555671b0 loc_5555555671b0: // size=106 thread=0x100000000
[I]       833  0x5555555671b0    nop edx, edi                             f3 0f 1e fa
[I]       834  0x5555555671b4    push rbp                                 55
[I]       835  0x5555555671b5    mov r11, rsi                             49 89 f3
[I]       836  0x5555555671b8    mov rbp, rsp                             48 89 e5
[I]       837  0x5555555671bb    push r15                                 41 57
[I]       838  0x5555555671bd    push r14                                 41 56
[I]       839  0x5555555671bf    push r13                                 41 55
[I]       840  0x5555555671c1    push r12                                 41 54
[I]       841  0x5555555671c3    push rbx                                 53
[I]       842  0x5555555671c4    sub rsp, 0xb8                            48 81 ec b8 00 00 00
[I]       843  0x5555555671cb    mov qword ptr [rbp-0x58], rdx            48 89 55 a8
[I]       844  0x5555555671cf    mov r13, qword ptr [rbp+0x10]            4c 8b 6d 10
[I]       845  0x5555555671d3    mov dword ptr [rbp-0x9c], r8d            44 89 85 64 ff ff ff
[I]       846  0x5555555671da    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]       847  0x5555555671e1    mov dword ptr [rbp-0x7c], ecx            89 4d 84
[I]       848  0x5555555671e4    mov r15, r8                              4d 89 c7
[I]       849  0x5555555671e7    mov qword ptr [rbp-0x70], r9             4c 89 4d 90
[I]       850  0x5555555671eb    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]       851  0x5555555671f4    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]       852  0x5555555671f8    mov r14, qword ptr [rbp+0x18]            4c 8b 75 18
[I]       853  0x5555555671fc    mov qword ptr [rbp-0xd8], r13            4c 89 ad 28 ff ff ff
[I]       854  0x555555567203    mov qword ptr [rbp-0xd0], r14            4c 89 b5 30 ff ff ff
[I]       855  0x55555556720a    mov r14, rdi                             49 89 fe
[I]       856  0x55555556720d    nop dword ptr [rax]                      0f 1f 00
[I]       857  0x555555567210    mov qword ptr [rbp-0x60], r11            4c 89 5d a0
[C]       858 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[I]       858  0x555555567214    call qword ptr [rip+0xfb36]              ff 15 36 fb 00 00
[B]       859  0x55555556721a loc_55555556721a: // size=85 thread=0x100000000
[I]       859  0x55555556721a    mov byte ptr [rbp-0x63], 0x1             c6 45 9d 01
[I]       860  0x55555556721e    mov r8, r15                              4d 89 f8
[I]       861  0x555555567221    mov r15, r14                             4d 89 f7
[I]       862  0x555555567224    mov qword ptr [rbp-0xb0], rax            48 89 85 50 ff ff ff
[I]       863  0x55555556722b    mov eax, dword ptr [rbp-0x9c]            8b 85 64 ff ff ff
[I]       864  0x555555567231    mov byte ptr [rbp-0x7e], 0x0             c6 45 82 00
[I]       865  0x555555567235    mov r14, qword ptr [rbp-0x60]            4c 8b 75 a0
[I]       866  0x555555567239    shr eax, 0x1                             d1 e8
[I]       867  0x55555556723b    mov byte ptr [rbp-0x65], 0x0             c6 45 9b 00
[I]       868  0x55555556723f    and eax, 0x1                             83 e0 01
[I]       869  0x555555567242    mov qword ptr [rbp-0x78], 0x0            48 c7 45 88 00 00 00 00
[I]       870  0x55555556724a    mov byte ptr [rbp-0x61], al              88 45 9f
[I]       871  0x55555556724d    mov qword ptr [rbp-0x98], 0x0            48 c7 85 68 ff ff ff 00 00 00 00
[I]       872  0x555555567258    mov qword ptr [rbp-0xa8], 0x0            48 c7 85 58 ff ff ff 00 00 00 00
[I]       873  0x555555567263    mov eax, dword ptr [rbp-0x7c]            8b 45 84
[I]       874  0x555555567266    cmp eax, 0xa                             83 f8 0a
[I]       875  0x555555567269    jnbe 0x55555555749c                      0f 87 2d 02 ff ff
[B]       876  0x55555556726f loc_55555556726f: // size=17 thread=0x100000000
[I]       876  0x55555556726f    lea rsi, ptr [rip+0xaae2]                48 8d 35 e2 aa 00 00
[I]       877  0x555555567276    movsxd rax, dword ptr [rsi+rax*4]        48 63 04 86
[I]       878  0x55555556727a    add rax, rsi                             48 01 f0
[I]       879  0x55555556727d    notrack jmp rax                          3e ff e0
[B]       880  0x555555567a7f loc_555555567a7f: // size=71 thread=0x100000000
[I]       880  0x555555567a7f    mov byte ptr [rbp-0x62], 0x0             c6 45 9e 00
[I]       881  0x555555567a83    mov byte ptr [rbp-0x66], 0x1             c6 45 9a 01
[I]       882  0x555555567a87    mov byte ptr [rbp-0x67], 0x1             c6 45 99 01
[I]       883  0x555555567a8b    mov byte ptr [rbp-0x64], 0x1             c6 45 9c 01
[I]       884  0x555555567a8f    mov byte ptr [rbp-0x7d], 0x0             c6 45 83 00
[I]       885  0x555555567a93    mov byte ptr [rbp-0x9d], 0x0             c6 85 63 ff ff ff 00
[I]       886  0x555555567a9a    mov byte ptr [rbp-0x61], 0x1             c6 45 9f 01
[I]       887  0x555555567a9e    mov byte ptr [rbp-0x65], 0x1             c6 45 9b 01
[I]       888  0x555555567aa2    lea rax, ptr [rip+0x78e7]                48 8d 05 e7 78 00 00
[I]       889  0x555555567aa9    mov qword ptr [rbp-0x78], 0x1            48 c7 45 88 01 00 00 00
[I]       890  0x555555567ab1    xor ebx, ebx                             31 db
[I]       891  0x555555567ab3    mov qword ptr [rbp-0x98], rax            48 89 85 68 ff ff ff
[I]       892  0x555555567aba    mov dword ptr [rbp-0x7c], 0x2            c7 45 84 02 00 00 00
[I]       893  0x555555567ac1    jmp 0x555555567350                       e9 8a f8 ff ff
[B]       894  0x555555567350 loc_555555567350: // size=26 thread=0x100000000
[I]       894  0x555555567350    xor r12d, r12d                           45 31 e4
[I]       895  0x555555567353    xor r13d, r13d                           45 31 ed
[I]       896  0x555555567356    mov r11d, r12d                           45 89 e3
[I]       897  0x555555567359    cmp r13, r8                              4d 39 c5
[I]       898  0x55555556735c    setnz r12b                               41 0f 95 c4
[I]       899  0x555555567360    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]       900  0x555555567364    jz 0x555555567484                        0f 84 1a 01 00 00
[B]       901  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]       901  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]       902  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]       903  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]       904  0x555555567494    setnz r12b                               41 0f 95 c4
[I]       905  0x555555567498    test r12b, r12b                          45 84 e4
[I]       906  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]       907  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]       907  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]       908  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]       909  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]       910  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]       911  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]       911  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]       912  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]       913  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]       914  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]       914  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]       915  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]       916  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]       916  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]       917  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]       918  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]       918  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]       919  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]       920  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]       921  0x555555567e87    shl rax, cl                              48 d3 e0
[I]       922  0x555555567e8a    test rax, rsi                            48 85 f0
[I]       923  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]       924  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]       924  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]       925  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]       926  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]       926  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]       927  0x555555568194    test sil, sil                            40 84 f6
[I]       928  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]       929  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]       929  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]       930  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]       931  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]       931  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]       932  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]       933  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]       934  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]       934  0x55555556764d    mov eax, edx                             89 d0
[I]       935  0x55555556764f    mov ecx, edx                             89 d1
[I]       936  0x555555567651    mov r9d, edx                             41 89 d1
[I]       937  0x555555567654    shr al, 0x5                              c0 e8 05
[I]       938  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]       939  0x55555556765a    movzx eax, al                            0f b6 c0
[I]       940  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]       941  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]       942  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]       942  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]       943  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]       944  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]       945  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]       946  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]       946  0x555555567585    xor eax, eax                             31 c0
[I]       947  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]       948  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]       949  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]       949  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]       950  0x555555567595    xor eax, 0x1                             83 f0 01
[I]       951  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]       952  0x55555556759c    and eax, r11d                            44 21 d8
[I]       953  0x55555556759f    test al, al                              84 c0
[I]       954  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]       955  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]       955  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]       956  0x555555567469    jnb 0x55555556746f                       73 04
[B]       957  0x55555556746b loc_55555556746b: // size=25 thread=0x100000000
[I]       957  0x55555556746b    mov byte ptr [r15+rbx*1], r9b            45 88 0c 1f
[I]       958  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]       959  0x555555567473    cmp r13, r8                              4d 39 c5
[I]       960  0x555555567476    setnz r12b                               41 0f 95 c4
[I]       961  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]       962  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]       963  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]       963  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]       964  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]       965  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]       966  0x555555567494    setnz r12b                               41 0f 95 c4
[I]       967  0x555555567498    test r12b, r12b                          45 84 e4
[I]       968  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]       969  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]       969  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]       970  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]       971  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]       972  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]       973  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]       973  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]       974  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]       975  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]       976  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]       976  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]       977  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]       978  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]       978  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]       979  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]       980  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]       980  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]       981  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]       982  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]       983  0x555555567e87    shl rax, cl                              48 d3 e0
[I]       984  0x555555567e8a    test rax, rsi                            48 85 f0
[I]       985  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]       986  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]       986  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]       987  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]       988  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]       988  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]       989  0x555555568194    test sil, sil                            40 84 f6
[I]       990  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]       991  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]       991  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]       992  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]       993  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]       993  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]       994  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]       995  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]       996  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]       996  0x55555556764d    mov eax, edx                             89 d0
[I]       997  0x55555556764f    mov ecx, edx                             89 d1
[I]       998  0x555555567651    mov r9d, edx                             41 89 d1
[I]       999  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1000  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1001  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1002  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1003  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1004  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1004  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1005  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1006  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1007  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1008  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1008  0x555555567585    xor eax, eax                             31 c0
[I]      1009  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1010  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1011  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1011  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1012  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1013  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1014  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1015  0x55555556759f    test al, al                              84 c0
[I]      1016  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1017  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1017  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1018  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1019  0x55555556746b loc_55555556746b: // size=25 thread=0x100000000
[I]      1019  0x55555556746b    mov byte ptr [r15+rbx*1], r9b            45 88 0c 1f
[I]      1020  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1021  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1022  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1023  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1024  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1025  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1025  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1026  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1027  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1028  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1029  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1030  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1031  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1031  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1032  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1033  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1034  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1035  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1035  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1036  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1037  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1038  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1038  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1039  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1040  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1040  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1041  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1042  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1042  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1043  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1044  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1045  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1046  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1047  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1048  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1048  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1049  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1050  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1050  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1051  0x555555568194    test sil, sil                            40 84 f6
[I]      1052  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1053  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1053  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1054  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1055  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1055  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1056  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1057  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1058  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1058  0x55555556764d    mov eax, edx                             89 d0
[I]      1059  0x55555556764f    mov ecx, edx                             89 d1
[I]      1060  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1061  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1062  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1063  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1064  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1065  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1066  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1066  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1067  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1068  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1069  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1070  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1070  0x555555567585    xor eax, eax                             31 c0
[I]      1071  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1072  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1073  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1073  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1074  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1075  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1076  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1077  0x55555556759f    test al, al                              84 c0
[I]      1078  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1079  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1079  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1080  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1081  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      1081  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1082  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1083  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1084  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1085  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1086  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1086  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1087  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1088  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1089  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1090  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1091  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1092  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1092  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1093  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1094  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1095  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1096  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1096  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1097  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1098  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1099  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1099  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1100  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1101  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1101  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1102  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1103  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1103  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1104  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1105  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1106  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1107  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1108  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1109  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1109  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1110  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1111  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1111  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1112  0x555555568194    test sil, sil                            40 84 f6
[I]      1113  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1114  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1114  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1115  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1116  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1116  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1117  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1118  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1119  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1119  0x55555556764d    mov eax, edx                             89 d0
[I]      1120  0x55555556764f    mov ecx, edx                             89 d1
[I]      1121  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1122  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1123  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1124  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1125  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1126  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1127  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1127  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1128  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1129  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1130  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1131  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1131  0x555555567585    xor eax, eax                             31 c0
[I]      1132  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1133  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1134  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1134  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1135  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1136  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1137  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1138  0x55555556759f    test al, al                              84 c0
[I]      1139  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1140  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1140  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1141  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1142  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      1142  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1143  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1144  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1145  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1146  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1147  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1147  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1148  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1149  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1150  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1151  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1152  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1153  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1153  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1154  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1155  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1156  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1157  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1157  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1158  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1159  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1160  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1160  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1161  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1162  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1162  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1163  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1164  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1164  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1165  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1166  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1167  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1168  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1169  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1170  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1170  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1171  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1172  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1172  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1173  0x555555568194    test sil, sil                            40 84 f6
[I]      1174  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1175  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1175  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1176  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1177  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1177  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1178  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1179  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1180  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1180  0x55555556764d    mov eax, edx                             89 d0
[I]      1181  0x55555556764f    mov ecx, edx                             89 d1
[I]      1182  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1183  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1184  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1185  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1186  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1187  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1188  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1188  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1189  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1190  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1191  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1192  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1192  0x555555567585    xor eax, eax                             31 c0
[I]      1193  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1194  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1195  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1195  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1196  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1197  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1198  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1199  0x55555556759f    test al, al                              84 c0
[I]      1200  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1201  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1201  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1202  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1203  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      1203  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1204  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1205  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1206  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1207  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1208  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1208  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1209  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1210  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1211  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1212  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1213  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1214  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1214  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1215  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1216  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1217  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1218  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1218  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1219  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1220  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1221  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1221  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1222  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1223  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1223  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1224  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1225  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1225  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1226  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1227  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1228  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1229  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1230  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1231  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1231  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1232  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1233  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1233  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1234  0x555555568194    test sil, sil                            40 84 f6
[I]      1235  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1236  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1236  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1237  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1238  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1238  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1239  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1240  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1241  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1241  0x55555556764d    mov eax, edx                             89 d0
[I]      1242  0x55555556764f    mov ecx, edx                             89 d1
[I]      1243  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1244  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1245  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1246  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1247  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1248  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1249  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1249  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1250  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1251  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1252  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1253  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1253  0x555555567585    xor eax, eax                             31 c0
[I]      1254  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1255  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1256  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1256  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1257  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1258  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1259  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1260  0x55555556759f    test al, al                              84 c0
[I]      1261  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1262  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1262  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1263  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1264  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      1264  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1265  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1266  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1267  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1268  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1269  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1269  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1270  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1271  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1272  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1273  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1274  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1275  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1275  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1276  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1277  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1278  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1279  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1279  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1280  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1281  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1282  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1282  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1283  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1284  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1284  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1285  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1286  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1286  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1287  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1288  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1289  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1290  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1291  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1292  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1292  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1293  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1294  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1294  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1295  0x555555568194    test sil, sil                            40 84 f6
[I]      1296  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1297  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1297  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1298  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1299  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1299  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1300  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1301  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1302  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1302  0x55555556764d    mov eax, edx                             89 d0
[I]      1303  0x55555556764f    mov ecx, edx                             89 d1
[I]      1304  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1305  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1306  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1307  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1308  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1309  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1310  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1310  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1311  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1312  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1313  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1314  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1314  0x555555567585    xor eax, eax                             31 c0
[I]      1315  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1316  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1317  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1317  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1318  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1319  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1320  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1321  0x55555556759f    test al, al                              84 c0
[I]      1322  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1323  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1323  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1324  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1325  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      1325  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1326  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1327  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1328  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1329  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1330  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1330  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1331  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1332  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1333  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1334  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1335  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1336  0x5555555674a1 loc_5555555674a1: // size=9 thread=0x100000000
[I]      1336  0x5555555674a1    test rbx, rbx                            48 85 db
[I]      1337  0x5555555674a4    jnz 0x5555555684d0                       0f 85 26 10 00 00
[B]      1338  0x5555555684d0 loc_5555555684d0: // size=8 thread=0x100000000
[I]      1338  0x5555555684d0    movzx eax, byte ptr [rbp-0x61]           0f b6 45 9f
[I]      1339  0x5555555684d4    xor al, 0x1                              34 01
[I]      1340  0x5555555684d6    jz 0x5555555684e2                        74 0a
[B]      1341  0x5555555684e2 loc_5555555684e2: // size=21 thread=0x100000000
[I]      1341  0x5555555684e2    mov r10, r15                             4d 89 fa
[I]      1342  0x5555555684e5    mov r11, rbx                             49 89 db
[I]      1343  0x5555555684e8    mov r15, r14                             4d 89 f7
[I]      1344  0x5555555684eb    mov rdi, qword ptr [rbp-0x98]            48 8b bd 68 ff ff ff
[I]      1345  0x5555555684f2    test rdi, rdi                            48 85 ff
[I]      1346  0x5555555684f5    jz 0x555555568523                        74 2c
[B]      1347  0x5555555684f7 loc_5555555684f7: // size=4 thread=0x100000000
[I]      1347  0x5555555684f7    test al, al                              84 c0
[I]      1348  0x5555555684f9    jz 0x555555568523                        74 28
[B]      1349  0x555555568523 loc_555555568523: // size=5 thread=0x100000000
[I]      1349  0x555555568523    cmp r11, r15                             4d 39 fb
[I]      1350  0x555555568526    jnb 0x55555556852d                       73 05
[B]      1351  0x55555556852d loc_55555556852d: // size=19 thread=0x100000000
[I]      1351  0x55555556852d    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      1352  0x555555568531    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      1353  0x55555556853a    jnz 0x555555568ac2                       0f 85 82 05 00 00
[B]      1354  0x555555568540 loc_555555568540: // size=21 thread=0x100000000
[I]      1354  0x555555568540    add rsp, 0xb8                            48 81 c4 b8 00 00 00
[I]      1355  0x555555568547    mov rax, r11                             4c 89 d8
[I]      1356  0x55555556854a    pop rbx                                  5b
[I]      1357  0x55555556854b    pop r12                                  41 5c
[I]      1358  0x55555556854d    pop r13                                  41 5d
[I]      1359  0x55555556854f    pop r14                                  41 5e
[I]      1360  0x555555568551    pop r15                                  41 5f
[I]      1361  0x555555568553    pop rbp                                  5d
[I]      1362  0x555555568554    ret                                      c3
[B]      1363  0x55555555cf21 loc_55555555cf21: // size=16 thread=0x100000000
[I]      1363  0x55555555cf21    mov dword ptr [r13], r14d                45 89 75 00
[I]      1364  0x55555555cf25    movzx esi, byte ptr [rbp-0x2a]           0f b6 75 d6
[I]      1365  0x55555555cf29    pop rdx                                  5a
[I]      1366  0x55555555cf2a    pop rcx                                  59
[I]      1367  0x55555555cf2b    cmp byte ptr [r12], sil                  41 38 34 24
[I]      1368  0x55555555cf2f    jz 0x55555555cf58                        74 27
[B]      1369  0x55555555cf58 loc_55555555cf58: // size=12 thread=0x100000000
[I]      1369  0x55555555cf58    mov rbx, rax                             48 89 c3
[I]      1370  0x55555555cf5b    mov rdi, r12                             4c 89 e7
[C]      1371 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      1371  0x55555555cf5e    call qword ptr [rip+0x19df4]             ff 15 f4 9d 01 00
[B]      1372  0x55555555cf64 loc_55555555cf64: // size=8 thread=0x100000000
[I]      1372  0x55555555cf64    cmp rax, rbx                             48 39 d8
[I]      1373  0x55555555cf67    setnz al                                 0f 95 c0
[I]      1374  0x55555555cf6a    jmp 0x55555555cf36                       eb ca
[B]      1375  0x55555555cf36 loc_55555555cf36: // size=15 thread=0x100000000
[I]      1375  0x55555555cf36    mov rdx, qword ptr [rbp-0x28]            48 8b 55 d8
[I]      1376  0x55555555cf3a    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      1377  0x55555555cf43    jnz 0x55555555cf6c                       75 27
[B]      1378  0x55555555cf45 loc_55555555cf45: // size=13 thread=0x100000000
[I]      1378  0x55555555cf45    lea rsp, ptr [rbp-0x20]                  48 8d 65 e0
[I]      1379  0x55555555cf49    pop rbx                                  5b
[I]      1380  0x55555555cf4a    pop r12                                  41 5c
[I]      1381  0x55555555cf4c    pop r13                                  41 5d
[I]      1382  0x55555555cf4e    pop r14                                  41 5e
[I]      1383  0x55555555cf50    pop rbp                                  5d
[I]      1384  0x55555555cf51    ret                                      c3
[B]      1385  0x555555564c84 loc_555555564c84: // size=18 thread=0x100000000
[I]      1385  0x555555564c84    movzx edx, al                            0f b6 d0
[I]      1386  0x555555564c87    mov dword ptr [r15+0xc4], edx            41 89 97 c4 00 00 00
[I]      1387  0x555555564c8e    test al, al                              84 c0
[I]      1388  0x555555564c90    jz 0x55555556465c                        0f 84 c6 f9 ff ff
[B]      1389  0x55555556465c loc_55555556465c: // size=13 thread=0x100000000
[I]      1389  0x55555556465c    cmp byte ptr [rbp-0x378], 0x0            80 bd 88 fc ff ff 00
[I]      1390  0x555555564663    jz 0x5555555647d0                        0f 84 67 01 00 00
[B]      1391  0x5555555647d0 loc_5555555647d0: // size=13 thread=0x100000000
[I]      1391  0x5555555647d0    cmp byte ptr [rip+0x12f25], 0x0          80 3d 25 2f 01 00 00
[I]      1392  0x5555555647d7    jz 0x555555564898                        0f 84 bb 00 00 00
[B]      1393  0x555555564898 loc_555555564898: // size=13 thread=0x100000000
[I]      1393  0x555555564898    cmp byte ptr [rip+0x12e5c], 0x0          80 3d 5c 2e 01 00 00
[I]      1394  0x55555556489f    jnz 0x555555564970                       0f 85 cb 00 00 00
[B]      1395  0x5555555648a5 loc_5555555648a5: // size=24 thread=0x100000000
[I]      1395  0x5555555648a5    mov r9d, dword ptr [rbp-0x374]           44 8b 8d 8c fc ff ff
[I]      1396  0x5555555648ac    movzx edx, byte ptr [rip+0x12e47]        0f b6 15 47 2e 01 00
[I]      1397  0x5555555648b3    test r9d, r9d                            45 85 c9
[I]      1398  0x5555555648b6    setz al                                  0f 94 c0
[I]      1399  0x5555555648b9    test dl, dl                              84 d2
[I]      1400  0x5555555648bb    jz 0x5555555648c5                        74 08
[B]      1401  0x5555555648c5 loc_5555555648c5: // size=13 thread=0x100000000
[I]      1401  0x5555555648c5    cmp dword ptr [rbp-0x374], 0x3           83 bd 8c fc ff ff 03
[I]      1402  0x5555555648cc    jz 0x555555565818                        0f 84 46 0f 00 00
[B]      1403  0x555555565818 loc_555555565818: // size=13 thread=0x100000000
[I]      1403  0x555555565818    cmp byte ptr [rip+0x11b01], 0x0          80 3d 01 1b 01 00 00
[I]      1404  0x55555556581f    jz 0x5555555648da                        0f 84 b5 f0 ff ff
[B]      1405  0x5555555648da loc_5555555648da: // size=11 thread=0x100000000
[I]      1405  0x5555555648da    movzx ecx, byte ptr [rip+0x12a48]        0f b6 0d 48 2a 01 00
[I]      1406  0x5555555648e1    test cl, cl                              84 c9
[I]      1407  0x5555555648e3    jnz 0x555555564956                       75 71
[B]      1408  0x5555555648e5 loc_5555555648e5: // size=8 thread=0x100000000
[I]      1408  0x5555555648e5    test dl, dl                              84 d2
[I]      1409  0x5555555648e7    jz 0x555555565de9                        0f 84 fc 14 00 00
[B]      1410  0x555555565de9 loc_555555565de9: // size=13 thread=0x100000000
[I]      1410  0x555555565de9    cmp dword ptr [rbp-0x374], 0x5           83 bd 8c fc ff ff 05
[I]      1411  0x555555565df0    jz 0x555555565eae                        0f 84 b8 00 00 00
[B]      1412  0x555555565df6 loc_555555565df6: // size=8 thread=0x100000000
[I]      1412  0x555555565df6    test al, al                              84 c0
[I]      1413  0x555555565df8    jnz 0x555555565eae                       0f 85 b0 00 00 00
[B]      1414  0x555555565dfe loc_555555565dfe: // size=25 thread=0x100000000
[I]      1414  0x555555565dfe    movzx ecx, byte ptr [rip+0x11513]        0f b6 0d 13 15 01 00
[I]      1415  0x555555565e05    movzx eax, byte ptr [rip+0x118ed]        0f b6 05 ed 18 01 00
[I]      1416  0x555555565e0c    mov esi, ecx                             89 ce
[I]      1417  0x555555565e0e    or sil, al                               40 08 c6
[I]      1418  0x555555565e11    jnz 0x5555555660a2                       0f 85 8b 02 00 00
[B]      1419  0x555555565e17 loc_555555565e17: // size=24 thread=0x100000000
[I]      1419  0x555555565e17    cmp dword ptr [rip+0x11966], 0x4         83 3d 66 19 01 00 04
[I]      1420  0x555555565e1e    mov r12, qword ptr [rbp-0x390]           4c 8b a5 70 fc ff ff
[I]      1421  0x555555565e25    setz dl                                  0f 94 c2
[I]      1422  0x555555565e28    xor ecx, ecx                             31 c9
[I]      1423  0x555555565e2a    jmp 0x5555555647ac                       e9 7d e9 ff ff
[B]      1424  0x5555555647ac loc_5555555647ac: // size=35 thread=0x100000000
[I]      1424  0x5555555647ac    mov ebx, dword ptr [rbp-0x374]           8b 9d 8c fc ff ff
[I]      1425  0x5555555647b2    cmp ebx, 0x5                             83 fb 05
[I]      1426  0x5555555647b5    setz al                                  0f 94 c0
[I]      1427  0x5555555647b8    and eax, esi                             21 f0
[I]      1428  0x5555555647ba    cmp ebx, 0x6                             83 fb 06
[I]      1429  0x5555555647bd    mov byte ptr [rbp-0x391], al             88 85 6f fc ff ff
[I]      1430  0x5555555647c3    setz byte ptr [rbp-0x393]                0f 94 85 6d fc ff ff
[I]      1431  0x5555555647ca    jmp 0x555555564a59                       e9 8a 02 00 00
[B]      1432  0x555555564a59 loc_555555564a59: // size=36 thread=0x100000000
[I]      1432  0x555555564a59    mov r8d, dword ptr [rip+0x128c4]         44 8b 05 c4 28 01 00
[I]      1433  0x555555564a60    movzx ebx, byte ptr [rbp-0x391]          0f b6 9d 6f fc ff ff
[I]      1434  0x555555564a67    test r8d, r8d                            45 85 c0
[I]      1435  0x555555564a6a    setz al                                  0f 94 c0
[I]      1436  0x555555564a6d    or eax, ecx                              09 c8
[I]      1437  0x555555564a6f    or bl, al                                08 c3
[I]      1438  0x555555564a71    mov byte ptr [rbp-0x392], bl             88 9d 6e fc ff ff
[I]      1439  0x555555564a77    jz 0x555555564ca8                        0f 84 2b 02 00 00
[B]      1440  0x555555564ca8 loc_555555564ca8: // size=13 thread=0x100000000
[I]      1440  0x555555564ca8    cmp byte ptr [rip+0x12ada], 0x0          80 3d da 2a 01 00 00
[I]      1441  0x555555564caf    jz 0x555555564da8                        0f 84 f3 00 00 00
[B]      1442  0x555555564da8 loc_555555564da8: // size=17 thread=0x100000000
[I]      1442  0x555555564da8    mov rbx, qword ptr [r15+0x58]            49 8b 5f 58
[I]      1443  0x555555564dac    cmp byte ptr [rip+0x12575], 0x0          80 3d 75 25 01 00 00
[I]      1444  0x555555564db3    jnz 0x555555564ee7                       0f 85 2e 01 00 00
[B]      1445  0x555555564db9 loc_555555564db9: // size=9 thread=0x100000000
[I]      1445  0x555555564db9    cmp byte ptr [rip+0x12558], 0x0          80 3d 58 25 01 00 00
[I]      1446  0x555555564dc0    jz 0x555555564deb                        74 29
[B]      1447  0x555555564deb loc_555555564deb: // size=13 thread=0x100000000
[I]      1447  0x555555564deb    cmp byte ptr [rip+0x12537], 0x0          80 3d 37 25 01 00 00
[I]      1448  0x555555564df2    jnz 0x555555565170                       0f 85 78 03 00 00
[B]      1449  0x555555564df8 loc_555555564df8: // size=12 thread=0x100000000
[I]      1449  0x555555564df8    mov rdi, qword ptr [rbp-0x390]           48 8b bd 70 fc ff ff
[C]      1450 Calling function 0x5555555640a0(error_at_line)
[I]      1450  0x555555564dff    call 0x5555555640a0                      e8 9c f2 ff ff
[B]      1451  0x5555555640a0 loc_5555555640a0: // size=20 thread=0x100000000
[I]      1451  0x5555555640a0    nop edx, edi                             f3 0f 1e fa
[I]      1452  0x5555555640a4    push rbp                                 55
[I]      1453  0x5555555640a5    mov rbp, rsp                             48 89 e5
[I]      1454  0x5555555640a8    push r12                                 41 54
[I]      1455  0x5555555640aa    mov r12, rdi                             49 89 fc
[I]      1456  0x5555555640ad    push rbx                                 53
[C]      1457 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      1457  0x5555555640ae    call qword ptr [rip+0x12ca4]             ff 15 a4 2c 01 00
[B]      1458  0x5555555640b4 loc_5555555640b4: // size=13 thread=0x100000000
[I]      1458  0x5555555640b4    lea rbx, ptr [rax+0x1]                   48 8d 58 01
[I]      1459  0x5555555640b8    mov rdi, rbx                             48 89 df
[C]      1460 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]      1460  0x5555555640bb    call qword ptr [rip+0x12def]             ff 15 ef 2d 01 00
[B]      1461  0x5555555640c1 loc_5555555640c1: // size=5 thread=0x100000000
[I]      1461  0x5555555640c1    test rax, rax                            48 85 c0
[I]      1462  0x5555555640c4    jz 0x5555555640dc                        74 16
[B]      1463  0x5555555640c6 loc_5555555640c6: // size=22 thread=0x100000000
[I]      1463  0x5555555640c6    mov rcx, rbx                             48 89 d9
[I]      1464  0x5555555640c9    mov rdx, rbx                             48 89 da
[I]      1465  0x5555555640cc    mov rsi, r12                             4c 89 e6
[I]      1466  0x5555555640cf    pop rbx                                  5b
[I]      1467  0x5555555640d0    mov rdi, rax                             48 89 c7
[I]      1468  0x5555555640d3    pop r12                                  41 5c
[I]      1469  0x5555555640d5    pop rbp                                  5d
[I]      1470  0x5555555640d6    jmp qword ptr [rip+0x12d6c]              ff 25 6c 2d 01 00
[B]      1471  0x555555564e04 loc_555555564e04: // size=30 thread=0x100000000
[I]      1471  0x555555564e04    add qword ptr [rip+0x127fc], 0x1         48 83 05 fc 27 01 00 01
[I]      1472  0x555555564e0c    mov qword ptr [r15], rax                 49 89 07
[I]      1473  0x555555564e0f    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      1474  0x555555564e13    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      1475  0x555555564e1c    jnz 0x555555566123                       0f 85 01 13 00 00
[B]      1476  0x555555564e22 loc_555555564e22: // size=18 thread=0x100000000
[I]      1476  0x555555564e22    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      1477  0x555555564e26    mov rax, rbx                             48 89 d8
[I]      1478  0x555555564e29    pop rbx                                  5b
[I]      1479  0x555555564e2a    pop r12                                  41 5c
[I]      1480  0x555555564e2c    pop r13                                  41 5d
[I]      1481  0x555555564e2e    pop r14                                  41 5e
[I]      1482  0x555555564e30    pop r15                                  41 5f
[I]      1483  0x555555564e32    pop rbp                                  5d
[I]      1484  0x555555564e33    ret                                      c3
[B]      1485  0x55555556670a loc_55555556670a: // size=20 thread=0x100000000
[I]      1485  0x55555556670a    add qword ptr [rbp-0x2f0], rax           48 01 85 10 fd ff ff
[I]      1486  0x555555566711    cmp dword ptr [rip+0x10c0c], 0x1         83 3d 0c 0c 01 00 01
[I]      1487  0x555555566718    jnz 0x555555566510                       0f 85 f2 fd ff ff
[C]      1488 Calling function 0x55555555f4f0(error_at_line)
[B]      1488  0x555555566510 loc_555555566510: // size=5 thread=0x100000000
[I]      1488  0x555555566510    call 0x55555555f4f0                      e8 db 8f ff ff
[B]      1489  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      1489  0x55555555f4f0    push rbp                                 55
[I]      1490  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      1491  0x55555555f4f4    push r15                                 41 57
[I]      1492  0x55555555f4f6    push r14                                 41 56
[I]      1493  0x55555555f4f8    push r13                                 41 55
[I]      1494  0x55555555f4fa    push r12                                 41 54
[I]      1495  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      1496  0x55555555f503    push rbx                                 53
[I]      1497  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      1498  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      1499  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      1500  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      1501  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      1502  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      1503  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      1504  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      1504  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      1505  0x55555555f58d    test eax, eax                            85 c0
[I]      1506  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      1507  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      1507  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      1508  0x55555555f597    test eax, eax                            85 c0
[I]      1509  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      1510  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      1510  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      1511  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      1512  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      1513  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      1513  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      1514  0x55555555f5e6    pop rbx                                  5b
[I]      1515  0x55555555f5e7    pop r12                                  41 5c
[I]      1516  0x55555555f5e9    pop r13                                  41 5d
[I]      1517  0x55555555f5eb    pop r14                                  41 5e
[I]      1518  0x55555555f5ed    pop r15                                  41 5f
[I]      1519  0x55555555f5ef    pop rbp                                  5d
[I]      1520  0x55555555f5f0    ret                                      c3
[B]      1521  0x555555566515 loc_555555566515: // size=5 thread=0x100000000
[I]      1521  0x555555566515    jmp 0x555555566490                       e9 76 ff ff ff
[B]      1522  0x555555566490 loc_555555566490: // size=17 thread=0x100000000
[I]      1522  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]      1523  0x555555566498    mov rdi, r14                             4c 89 f7
[C]      1524 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]      1524  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]      1525  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]      1525  0x5555555664a1    mov r12, rax                             49 89 c4
[I]      1526  0x5555555664a4    test rax, rax                            48 85 c0
[I]      1527  0x5555555664a7    jz 0x555555566520                        74 77
[B]      1528  0x5555555664a9 loc_5555555664a9: // size=19 thread=0x100000000
[I]      1528  0x5555555664a9    lea rbx, ptr [rax+0x13]                  48 8d 58 13
[I]      1529  0x5555555664ad    mov eax, dword ptr [rip+0x11021]         8b 05 21 10 01 00
[I]      1530  0x5555555664b3    cmp eax, 0x2                             83 f8 02
[I]      1531  0x5555555664b6    jz 0x5555555666b0                        0f 84 f4 01 00 00
[B]      1532  0x5555555664bc loc_5555555664bc: // size=12 thread=0x100000000
[I]      1532  0x5555555664bc    cmp byte ptr [r12+0x13], 0x2e            41 80 7c 24 13 2e
[I]      1533  0x5555555664c2    jz 0x555555566688                        0f 84 c0 01 00 00
[B]      1534  0x5555555664c8 loc_5555555664c8: // size=8 thread=0x100000000
[I]      1534  0x5555555664c8    test eax, eax                            85 c0
[I]      1535  0x5555555664ca    jnz 0x5555555666b0                       0f 85 e0 01 00 00
[B]      1536  0x5555555664d0 loc_5555555664d0: // size=12 thread=0x100000000
[I]      1536  0x5555555664d0    mov r15, qword ptr [rip+0x10fe9]         4c 8b 3d e9 0f 01 00
[I]      1537  0x5555555664d7    test r15, r15                            4d 85 ff
[I]      1538  0x5555555664da    jnz 0x5555555664f5                       75 19
[B]      1539  0x5555555664dc loc_5555555664dc: // size=5 thread=0x100000000
[I]      1539  0x5555555664dc    jmp 0x5555555666b0                       e9 cf 01 00 00
[B]      1540  0x5555555666b0 loc_5555555666b0: // size=12 thread=0x100000000
[I]      1540  0x5555555666b0    mov r15, qword ptr [rip+0x10de1]         4c 8b 3d e1 0d 01 00
[I]      1541  0x5555555666b7    test r15, r15                            4d 85 ff
[I]      1542  0x5555555666ba    jnz 0x5555555666c9                       75 0d
[B]      1543  0x5555555666bc loc_5555555666bc: // size=2 thread=0x100000000
[I]      1543  0x5555555666bc    jmp 0x5555555666e8                       eb 2a
[B]      1544  0x5555555666e8 loc_5555555666e8: // size=34 thread=0x100000000
[I]      1544  0x5555555666e8    movzx eax, byte ptr [r12+0x12]           41 0f b6 44 24 12
[I]      1545  0x5555555666ee    lea rcx, ptr [rip+0x704b]                48 8d 0d 4b 70 00 00
[I]      1546  0x5555555666f5    xor edx, edx                             31 d2
[I]      1547  0x5555555666f7    mov rdi, rbx                             48 89 df
[I]      1548  0x5555555666fa    movsx esi, byte ptr [rcx+rax*1]          0f be 34 01
[I]      1549  0x5555555666fe    mov rcx, qword ptr [rbp-0x2e8]           48 8b 8d 18 fd ff ff
[C]      1550 Calling function 0x555555564590(error_at_line)
[I]      1550  0x555555566705    call 0x555555564590                      e8 86 de ff ff
[B]      1551  0x555555564590 loc_555555564590: // size=82 thread=0x100000000
[I]      1551  0x555555564590    push rbp                                 55
[I]      1552  0x555555564591    mov rbp, rsp                             48 89 e5
[I]      1553  0x555555564594    push r15                                 41 57
[I]      1554  0x555555564596    push r14                                 41 56
[I]      1555  0x555555564598    push r13                                 41 55
[I]      1556  0x55555556459a    push r12                                 41 54
[I]      1557  0x55555556459c    push rbx                                 53
[I]      1558  0x55555556459d    sub rsp, 0x388                           48 81 ec 88 03 00 00
[I]      1559  0x5555555645a4    mov qword ptr [rbp-0x390], rdi           48 89 bd 70 fc ff ff
[I]      1560  0x5555555645ab    mov rdi, qword ptr [rip+0x1305e]         48 8b 3d 5e 30 01 00
[I]      1561  0x5555555645b2    mov dword ptr [rbp-0x378], edx           89 95 88 fc ff ff
[I]      1562  0x5555555645b8    mov rdx, qword ptr [rip+0x13049]         48 8b 15 49 30 01 00
[I]      1563  0x5555555645bf    mov dword ptr [rbp-0x374], esi           89 b5 8c fc ff ff
[I]      1564  0x5555555645c5    cmp rdx, qword ptr [rip+0x1304c]         48 3b 15 4c 30 01 00
[I]      1565  0x5555555645cc    mov rbx, qword ptr fs:[0x28]             64 48 8b 1c 25 28 00 00 00
[I]      1566  0x5555555645d5    mov qword ptr [rbp-0x38], rbx            48 89 5d c8
[I]      1567  0x5555555645d9    mov rbx, rcx                             48 89 cb
[I]      1568  0x5555555645dc    jz 0x555555564c40                        0f 84 5e 06 00 00
[B]      1569  0x5555555645e2 loc_5555555645e2: // size=59 thread=0x100000000
[I]      1569  0x5555555645e2    lea rax, ptr [rdx+rdx*2]                 48 8d 04 52
[I]      1570  0x5555555645e6    lea rdx, ptr [rdx+rax*4]                 48 8d 14 82
[I]      1571  0x5555555645ea    xor eax, eax                             31 c0
[I]      1572  0x5555555645ec    shl rdx, 0x4                             48 c1 e2 04
[I]      1573  0x5555555645f0    lea r15, ptr [rdi+rdx*1]                 4c 8d 3c 17
[I]      1574  0x5555555645f4    lea rdi, ptr [r15+0x8]                   49 8d 7f 08
[I]      1575  0x5555555645f8    mov rcx, r15                             4c 89 f9
[I]      1576  0x5555555645fb    mov qword ptr [r15], 0x0                 49 c7 07 00 00 00 00
[I]      1577  0x555555564602    mov qword ptr [r15+0xc8], 0x0            49 c7 87 c8 00 00 00 00 00 00 00
[I]      1578  0x55555556460d    and rdi, 0xfffffffffffffff8              48 83 e7 f8
[I]      1579  0x555555564611    sub rcx, rdi                             48 29 f9
[I]      1580  0x555555564614    add ecx, 0xd0                            81 c1 d0 00 00 00
[I]      1581  0x55555556461a    shr ecx, 0x3                             c1 e9 03
[B]      1582  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1582  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1583  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1583  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1584  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1584  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1585  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1585  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1586  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1586  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1587  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1587  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1588  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1588  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1589  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1589  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1590  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1590  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1591  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1591  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1592  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1592  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1593  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1593  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1594  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1594  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1595  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1595  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1596  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1596  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1597  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1597  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1598  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1598  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1599  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1599  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1600  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1600  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1601  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1601  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1602  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1602  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1603  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1603  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1604  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1604  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1605  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1605  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1606  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      1606  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      1607  0x555555564620 loc_555555564620: // size=47 thread=0x100000000
[I]      1607  0x555555564620    mov dword ptr [r15+0xc4], 0xffffffff     41 c7 87 c4 00 00 00 ff ff ff ff
[I]      1608  0x55555556462b    mov eax, dword ptr [rbp-0x374]           8b 85 8c fc ff ff
[I]      1609  0x555555564631    cmp byte ptr [rip+0x12c84], 0x0          80 3d 84 2c 01 00 00
[I]      1610  0x555555564638    mov dword ptr [r15+0xa8], eax            41 89 87 a8 00 00 00
[I]      1611  0x55555556463f    lea rax, ptr [rip+0x129da]               48 8d 05 da 29 01 00
[I]      1612  0x555555564646    mov qword ptr [r15+0xb0], rax            49 89 87 b0 00 00 00
[I]      1613  0x55555556464d    jnz 0x55555556465c                       75 0d
[B]      1614  0x55555556464f loc_55555556464f: // size=13 thread=0x100000000
[I]      1614  0x55555556464f    cmp byte ptr [rip+0x12c67], 0x0          80 3d 67 2c 01 00 00
[I]      1615  0x555555564656    jnz 0x555555564c78                       0f 85 1c 06 00 00
[B]      1616  0x555555564c78 loc_555555564c78: // size=12 thread=0x100000000
[I]      1616  0x555555564c78    mov rdi, qword ptr [rbp-0x390]           48 8b bd 70 fc ff ff
[C]      1617 Calling function 0x55555555cec0(error_at_line)
[I]      1617  0x555555564c7f    call 0x55555555cec0                      e8 3c 82 ff ff
[B]      1618  0x55555555cec0 loc_55555555cec0: // size=58 thread=0x100000000
[I]      1618  0x55555555cec0    push rbp                                 55
[I]      1619  0x55555555cec1    lea rax, ptr [rip+0x1a418]               48 8d 05 18 a4 01 00
[I]      1620  0x55555555cec8    mov rbp, rsp                             48 89 e5
[I]      1621  0x55555555cecb    push r14                                 41 56
[I]      1622  0x55555555cecd    push r13                                 41 55
[I]      1623  0x55555555cecf    push r12                                 41 54
[I]      1624  0x55555555ced1    push rbx                                 53
[I]      1625  0x55555555ced2    sub rsp, 0x10                            48 83 ec 10
[I]      1626  0x55555555ced6    mov rbx, qword ptr [rip+0x1a723]         48 8b 1d 23 a7 01 00
[I]      1627  0x55555555cedd    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      1628  0x55555555cee6    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      1629  0x55555555ceea    mov r12, rdi                             49 89 fc
[I]      1630  0x55555555ceed    test rbx, rbx                            48 85 db
[I]      1631  0x55555555cef0    cmovz rbx, rax                           48 0f 44 d8
[C]      1632 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]      1632  0x55555555cef4    call qword ptr [rip+0x19d96]             ff 15 96 9d 01 00
[B]      1633  0x55555555cefa loc_55555555cefa: // size=39 thread=0x100000000
[I]      1633  0x55555555cefa    mov esi, 0x2                             be 02 00 00 00
[I]      1634  0x55555555ceff    lea rdi, ptr [rbp-0x2a]                  48 8d 7d d6
[I]      1635  0x55555555cf03    mov r14d, dword ptr [rax]                44 8b 30
[I]      1636  0x55555555cf06    mov ecx, dword ptr [rbx]                 8b 0b
[I]      1637  0x55555555cf08    mov r13, rax                             49 89 c5
[I]      1638  0x55555555cf0b    lea r9, ptr [rbx+0x8]                    4c 8d 4b 08
[I]      1639  0x55555555cf0f    mov r8d, dword ptr [rbx+0x4]             44 8b 43 04
[I]      1640  0x55555555cf13    push qword ptr [rbx+0x30]                ff 73 30
[I]      1641  0x55555555cf16    push qword ptr [rbx+0x28]                ff 73 28
[I]      1642  0x55555555cf19    mov rdx, r12                             4c 89 e2
[C]      1643 Calling function 0x5555555671b0(error_at_line)
[I]      1643  0x55555555cf1c    call 0x5555555671b0                      e8 8f a2 00 00
[B]      1644  0x5555555671b0 loc_5555555671b0: // size=106 thread=0x100000000
[I]      1644  0x5555555671b0    nop edx, edi                             f3 0f 1e fa
[I]      1645  0x5555555671b4    push rbp                                 55
[I]      1646  0x5555555671b5    mov r11, rsi                             49 89 f3
[I]      1647  0x5555555671b8    mov rbp, rsp                             48 89 e5
[I]      1648  0x5555555671bb    push r15                                 41 57
[I]      1649  0x5555555671bd    push r14                                 41 56
[I]      1650  0x5555555671bf    push r13                                 41 55
[I]      1651  0x5555555671c1    push r12                                 41 54
[I]      1652  0x5555555671c3    push rbx                                 53
[I]      1653  0x5555555671c4    sub rsp, 0xb8                            48 81 ec b8 00 00 00
[I]      1654  0x5555555671cb    mov qword ptr [rbp-0x58], rdx            48 89 55 a8
[I]      1655  0x5555555671cf    mov r13, qword ptr [rbp+0x10]            4c 8b 6d 10
[I]      1656  0x5555555671d3    mov dword ptr [rbp-0x9c], r8d            44 89 85 64 ff ff ff
[I]      1657  0x5555555671da    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1658  0x5555555671e1    mov dword ptr [rbp-0x7c], ecx            89 4d 84
[I]      1659  0x5555555671e4    mov r15, r8                              4d 89 c7
[I]      1660  0x5555555671e7    mov qword ptr [rbp-0x70], r9             4c 89 4d 90
[I]      1661  0x5555555671eb    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      1662  0x5555555671f4    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      1663  0x5555555671f8    mov r14, qword ptr [rbp+0x18]            4c 8b 75 18
[I]      1664  0x5555555671fc    mov qword ptr [rbp-0xd8], r13            4c 89 ad 28 ff ff ff
[I]      1665  0x555555567203    mov qword ptr [rbp-0xd0], r14            4c 89 b5 30 ff ff ff
[I]      1666  0x55555556720a    mov r14, rdi                             49 89 fe
[I]      1667  0x55555556720d    nop dword ptr [rax]                      0f 1f 00
[I]      1668  0x555555567210    mov qword ptr [rbp-0x60], r11            4c 89 5d a0
[C]      1669 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[I]      1669  0x555555567214    call qword ptr [rip+0xfb36]              ff 15 36 fb 00 00
[B]      1670  0x55555556721a loc_55555556721a: // size=85 thread=0x100000000
[I]      1670  0x55555556721a    mov byte ptr [rbp-0x63], 0x1             c6 45 9d 01
[I]      1671  0x55555556721e    mov r8, r15                              4d 89 f8
[I]      1672  0x555555567221    mov r15, r14                             4d 89 f7
[I]      1673  0x555555567224    mov qword ptr [rbp-0xb0], rax            48 89 85 50 ff ff ff
[I]      1674  0x55555556722b    mov eax, dword ptr [rbp-0x9c]            8b 85 64 ff ff ff
[I]      1675  0x555555567231    mov byte ptr [rbp-0x7e], 0x0             c6 45 82 00
[I]      1676  0x555555567235    mov r14, qword ptr [rbp-0x60]            4c 8b 75 a0
[I]      1677  0x555555567239    shr eax, 0x1                             d1 e8
[I]      1678  0x55555556723b    mov byte ptr [rbp-0x65], 0x0             c6 45 9b 00
[I]      1679  0x55555556723f    and eax, 0x1                             83 e0 01
[I]      1680  0x555555567242    mov qword ptr [rbp-0x78], 0x0            48 c7 45 88 00 00 00 00
[I]      1681  0x55555556724a    mov byte ptr [rbp-0x61], al              88 45 9f
[I]      1682  0x55555556724d    mov qword ptr [rbp-0x98], 0x0            48 c7 85 68 ff ff ff 00 00 00 00
[I]      1683  0x555555567258    mov qword ptr [rbp-0xa8], 0x0            48 c7 85 58 ff ff ff 00 00 00 00
[I]      1684  0x555555567263    mov eax, dword ptr [rbp-0x7c]            8b 45 84
[I]      1685  0x555555567266    cmp eax, 0xa                             83 f8 0a
[I]      1686  0x555555567269    jnbe 0x55555555749c                      0f 87 2d 02 ff ff
[B]      1687  0x55555556726f loc_55555556726f: // size=17 thread=0x100000000
[I]      1687  0x55555556726f    lea rsi, ptr [rip+0xaae2]                48 8d 35 e2 aa 00 00
[I]      1688  0x555555567276    movsxd rax, dword ptr [rsi+rax*4]        48 63 04 86
[I]      1689  0x55555556727a    add rax, rsi                             48 01 f0
[I]      1690  0x55555556727d    notrack jmp rax                          3e ff e0
[B]      1691  0x555555567a7f loc_555555567a7f: // size=71 thread=0x100000000
[I]      1691  0x555555567a7f    mov byte ptr [rbp-0x62], 0x0             c6 45 9e 00
[I]      1692  0x555555567a83    mov byte ptr [rbp-0x66], 0x1             c6 45 9a 01
[I]      1693  0x555555567a87    mov byte ptr [rbp-0x67], 0x1             c6 45 99 01
[I]      1694  0x555555567a8b    mov byte ptr [rbp-0x64], 0x1             c6 45 9c 01
[I]      1695  0x555555567a8f    mov byte ptr [rbp-0x7d], 0x0             c6 45 83 00
[I]      1696  0x555555567a93    mov byte ptr [rbp-0x9d], 0x0             c6 85 63 ff ff ff 00
[I]      1697  0x555555567a9a    mov byte ptr [rbp-0x61], 0x1             c6 45 9f 01
[I]      1698  0x555555567a9e    mov byte ptr [rbp-0x65], 0x1             c6 45 9b 01
[I]      1699  0x555555567aa2    lea rax, ptr [rip+0x78e7]                48 8d 05 e7 78 00 00
[I]      1700  0x555555567aa9    mov qword ptr [rbp-0x78], 0x1            48 c7 45 88 01 00 00 00
[I]      1701  0x555555567ab1    xor ebx, ebx                             31 db
[I]      1702  0x555555567ab3    mov qword ptr [rbp-0x98], rax            48 89 85 68 ff ff ff
[I]      1703  0x555555567aba    mov dword ptr [rbp-0x7c], 0x2            c7 45 84 02 00 00 00
[I]      1704  0x555555567ac1    jmp 0x555555567350                       e9 8a f8 ff ff
[B]      1705  0x555555567350 loc_555555567350: // size=26 thread=0x100000000
[I]      1705  0x555555567350    xor r12d, r12d                           45 31 e4
[I]      1706  0x555555567353    xor r13d, r13d                           45 31 ed
[I]      1707  0x555555567356    mov r11d, r12d                           45 89 e3
[I]      1708  0x555555567359    cmp r13, r8                              4d 39 c5
[I]      1709  0x55555556735c    setnz r12b                               41 0f 95 c4
[I]      1710  0x555555567360    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1711  0x555555567364    jz 0x555555567484                        0f 84 1a 01 00 00
[B]      1712  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1712  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1713  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1714  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1715  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1716  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1717  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1718  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1718  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1719  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1720  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1721  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1722  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1722  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1723  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1724  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1725  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1725  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1726  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1727  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1727  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1728  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1729  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1729  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1730  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1731  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1732  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1733  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1734  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1735  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1735  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1736  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1737  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1737  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1738  0x555555568194    test sil, sil                            40 84 f6
[I]      1739  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1740  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1740  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1741  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1742  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1742  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1743  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1744  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1745  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1745  0x55555556764d    mov eax, edx                             89 d0
[I]      1746  0x55555556764f    mov ecx, edx                             89 d1
[I]      1747  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1748  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1749  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1750  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1751  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1752  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1753  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1753  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1754  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1755  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1756  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1757  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1757  0x555555567585    xor eax, eax                             31 c0
[I]      1758  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1759  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1760  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1760  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1761  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1762  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1763  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1764  0x55555556759f    test al, al                              84 c0
[I]      1765  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1766  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1766  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1767  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1768  0x55555556746b loc_55555556746b: // size=25 thread=0x100000000
[I]      1768  0x55555556746b    mov byte ptr [r15+rbx*1], r9b            45 88 0c 1f
[I]      1769  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1770  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1771  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1772  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1773  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1774  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1774  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1775  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1776  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1777  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1778  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1779  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1780  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1780  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1781  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1782  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1783  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1784  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1784  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1785  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1786  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1787  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1787  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1788  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1789  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1789  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1790  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1791  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1791  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1792  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1793  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1794  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1795  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1796  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1797  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1797  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1798  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1799  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1799  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1800  0x555555568194    test sil, sil                            40 84 f6
[I]      1801  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1802  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1802  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1803  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1804  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1804  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1805  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1806  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1807  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1807  0x55555556764d    mov eax, edx                             89 d0
[I]      1808  0x55555556764f    mov ecx, edx                             89 d1
[I]      1809  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1810  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1811  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1812  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1813  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1814  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1815  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1815  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1816  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1817  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1818  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1819  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1819  0x555555567585    xor eax, eax                             31 c0
[I]      1820  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1821  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1822  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1822  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1823  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1824  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1825  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1826  0x55555556759f    test al, al                              84 c0
[I]      1827  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1828  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1828  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1829  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1830  0x55555556746b loc_55555556746b: // size=25 thread=0x100000000
[I]      1830  0x55555556746b    mov byte ptr [r15+rbx*1], r9b            45 88 0c 1f
[I]      1831  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1832  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1833  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1834  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1835  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1836  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1836  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1837  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1838  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1839  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1840  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1841  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1842  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1842  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1843  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1844  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1845  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1846  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1846  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1847  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1848  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1849  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1849  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1850  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1851  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1851  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1852  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1853  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1853  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1854  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1855  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1856  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1857  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1858  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1859  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1859  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1860  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1861  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1861  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1862  0x555555568194    test sil, sil                            40 84 f6
[I]      1863  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1864  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1864  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1865  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1866  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1866  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1867  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1868  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1869  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1869  0x55555556764d    mov eax, edx                             89 d0
[I]      1870  0x55555556764f    mov ecx, edx                             89 d1
[I]      1871  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1872  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1873  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1874  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1875  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1876  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1877  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1877  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1878  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1879  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1880  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1881  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1881  0x555555567585    xor eax, eax                             31 c0
[I]      1882  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1883  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1884  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1884  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1885  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1886  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1887  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1888  0x55555556759f    test al, al                              84 c0
[I]      1889  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1890  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1890  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1891  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1892  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      1892  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1893  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1894  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1895  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1896  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1897  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1897  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1898  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1899  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1900  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1901  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1902  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1903  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1903  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1904  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1905  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1906  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1907  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1907  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1908  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1909  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1910  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1910  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1911  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1912  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1912  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1913  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1914  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1914  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1915  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1916  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1917  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1918  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1919  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1920  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1920  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1921  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1922  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1922  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1923  0x555555568194    test sil, sil                            40 84 f6
[I]      1924  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1925  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1925  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1926  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1927  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1927  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1928  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1929  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1930  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1930  0x55555556764d    mov eax, edx                             89 d0
[I]      1931  0x55555556764f    mov ecx, edx                             89 d1
[I]      1932  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1933  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1934  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1935  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1936  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1937  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1938  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1938  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      1939  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      1940  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      1941  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      1942  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      1942  0x555555567585    xor eax, eax                             31 c0
[I]      1943  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      1944  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      1945  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      1945  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      1946  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      1947  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      1948  0x55555556759c    and eax, r11d                            44 21 d8
[I]      1949  0x55555556759f    test al, al                              84 c0
[I]      1950  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      1951  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      1951  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      1952  0x555555567469    jnb 0x55555556746f                       73 04
[B]      1953  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      1953  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      1954  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      1955  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      1956  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      1957  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      1958  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      1958  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1959  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      1960  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      1961  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      1962  0x555555567498    test r12b, r12b                          45 84 e4
[I]      1963  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      1964  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      1964  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      1965  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      1966  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      1967  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      1968  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      1968  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      1969  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      1970  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      1971  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      1971  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      1972  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      1973  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      1973  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      1974  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      1975  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      1975  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      1976  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      1977  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      1978  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      1979  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      1980  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      1981  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      1981  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      1982  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      1983  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      1983  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      1984  0x555555568194    test sil, sil                            40 84 f6
[I]      1985  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      1986  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      1986  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      1987  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      1988  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      1988  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      1989  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      1990  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      1991  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      1991  0x55555556764d    mov eax, edx                             89 d0
[I]      1992  0x55555556764f    mov ecx, edx                             89 d1
[I]      1993  0x555555567651    mov r9d, edx                             41 89 d1
[I]      1994  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      1995  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      1996  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      1997  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      1998  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      1999  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      1999  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2000  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2001  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2002  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2003  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2003  0x555555567585    xor eax, eax                             31 c0
[I]      2004  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2005  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2006  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2006  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2007  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2008  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2009  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2010  0x55555556759f    test al, al                              84 c0
[I]      2011  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2012  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2012  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2013  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2014  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2014  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2015  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2016  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2017  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2018  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2019  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2019  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2020  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2021  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2022  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2023  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2024  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2025  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2025  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2026  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2027  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2028  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2029  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2029  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2030  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2031  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2032  0x555555567399 loc_555555567399: // size=9 thread=0x100000000
[I]      2032  0x555555567399    test r9b, r9b                            45 84 c9
[I]      2033  0x55555556739c    js 0x555555567500                        0f 88 5e 01 00 00
[B]      2034  0x5555555673a2 loc_5555555673a2: // size=10 thread=0x100000000
[I]      2034  0x5555555673a2    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2035  0x5555555673a6    jnbe 0x555555567500                      0f 87 54 01 00 00
[B]      2036  0x5555555673ac loc_5555555673ac: // size=21 thread=0x100000000
[I]      2036  0x5555555673ac    lea rcx, ptr [rip+0xa9d1]                48 8d 0d d1 a9 00 00
[I]      2037  0x5555555673b3    movzx eax, r9b                           41 0f b6 c1
[I]      2038  0x5555555673b7    movsxd rax, dword ptr [rcx+rax*4]        48 63 04 81
[I]      2039  0x5555555673bb    add rax, rcx                             48 01 c8
[I]      2040  0x5555555673be    notrack jmp rax                          3e ff e0
[B]      2041  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2041  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2042  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2043  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2043  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2044  0x555555568194    test sil, sil                            40 84 f6
[I]      2045  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2046  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2046  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2047  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2048  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2048  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2049  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2050  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2051  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2051  0x55555556764d    mov eax, edx                             89 d0
[I]      2052  0x55555556764f    mov ecx, edx                             89 d1
[I]      2053  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2054  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2055  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2056  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2057  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2058  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2059  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2059  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2060  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2061  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2062  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2063  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2063  0x555555567585    xor eax, eax                             31 c0
[I]      2064  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2065  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2066  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2066  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2067  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2068  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2069  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2070  0x55555556759f    test al, al                              84 c0
[I]      2071  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2072  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2072  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2073  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2074  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2074  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2075  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2076  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2077  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2078  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2079  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2079  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2080  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2081  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2082  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2083  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2084  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2085  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2085  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2086  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2087  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2088  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2089  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2089  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2090  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2091  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2092  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2092  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2093  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2094  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2094  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2095  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2096  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2096  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2097  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2098  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2099  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2100  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2101  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2102  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2102  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2103  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2104  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2104  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2105  0x555555568194    test sil, sil                            40 84 f6
[I]      2106  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2107  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2107  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2108  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2109  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2109  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2110  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2111  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2112  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2112  0x55555556764d    mov eax, edx                             89 d0
[I]      2113  0x55555556764f    mov ecx, edx                             89 d1
[I]      2114  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2115  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2116  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2117  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2118  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2119  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2120  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2120  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2121  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2122  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2123  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2124  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2124  0x555555567585    xor eax, eax                             31 c0
[I]      2125  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2126  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2127  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2127  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2128  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2129  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2130  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2131  0x55555556759f    test al, al                              84 c0
[I]      2132  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2133  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2133  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2134  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2135  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2135  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2136  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2137  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2138  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2139  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2140  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2140  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2141  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2142  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2143  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2144  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2145  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2146  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2146  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2147  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2148  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2149  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2150  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2150  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2151  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2152  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2153  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2153  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2154  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2155  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2155  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2156  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2157  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2157  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2158  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2159  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2160  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2161  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2162  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2163  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2163  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2164  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2165  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2165  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2166  0x555555568194    test sil, sil                            40 84 f6
[I]      2167  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2168  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2168  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2169  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2170  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2170  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2171  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2172  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2173  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2173  0x55555556764d    mov eax, edx                             89 d0
[I]      2174  0x55555556764f    mov ecx, edx                             89 d1
[I]      2175  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2176  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2177  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2178  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2179  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2180  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2181  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2181  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2182  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2183  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2184  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2185  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2185  0x555555567585    xor eax, eax                             31 c0
[I]      2186  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2187  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2188  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2188  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2189  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2190  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2191  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2192  0x55555556759f    test al, al                              84 c0
[I]      2193  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2194  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2194  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2195  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2196  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2196  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2197  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2198  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2199  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2200  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2201  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2201  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2202  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2203  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2204  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2205  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2206  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2207  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2207  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2208  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2209  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2210  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2211  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2211  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2212  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2213  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2214  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2214  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2215  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2216  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2216  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2217  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2218  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2218  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2219  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2220  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2221  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2222  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2223  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2224  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2224  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2225  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2226  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2226  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2227  0x555555568194    test sil, sil                            40 84 f6
[I]      2228  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2229  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2229  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2230  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2231  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2231  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2232  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2233  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2234  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2234  0x55555556764d    mov eax, edx                             89 d0
[I]      2235  0x55555556764f    mov ecx, edx                             89 d1
[I]      2236  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2237  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2238  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2239  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2240  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2241  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2242  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2242  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2243  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2244  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2245  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2246  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2246  0x555555567585    xor eax, eax                             31 c0
[I]      2247  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2248  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2249  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2249  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2250  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2251  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2252  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2253  0x55555556759f    test al, al                              84 c0
[I]      2254  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2255  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2255  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2256  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2257  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2257  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2258  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2259  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2260  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2261  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2262  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2262  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2263  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2264  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2265  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2266  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2267  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2268  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2268  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2269  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2270  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2271  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2272  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2272  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2273  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2274  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2275  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2275  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2276  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2277  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2277  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2278  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2279  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2279  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2280  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2281  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2282  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2283  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2284  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2285  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2285  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2286  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2287  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2287  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2288  0x555555568194    test sil, sil                            40 84 f6
[I]      2289  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2290  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2290  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2291  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2292  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2292  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2293  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2294  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2295  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2295  0x55555556764d    mov eax, edx                             89 d0
[I]      2296  0x55555556764f    mov ecx, edx                             89 d1
[I]      2297  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2298  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2299  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2300  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2301  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2302  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2303  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2303  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2304  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2305  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2306  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2307  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2307  0x555555567585    xor eax, eax                             31 c0
[I]      2308  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2309  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2310  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2310  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2311  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2312  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2313  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2314  0x55555556759f    test al, al                              84 c0
[I]      2315  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2316  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2316  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2317  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2318  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2318  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2319  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2320  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2321  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2322  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2323  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2323  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2324  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2325  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2326  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2327  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2328  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2329  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2329  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2330  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2331  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2332  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2333  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2333  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2334  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2335  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2336  0x555555567399 loc_555555567399: // size=9 thread=0x100000000
[I]      2336  0x555555567399    test r9b, r9b                            45 84 c9
[I]      2337  0x55555556739c    js 0x555555567500                        0f 88 5e 01 00 00
[B]      2338  0x5555555673a2 loc_5555555673a2: // size=10 thread=0x100000000
[I]      2338  0x5555555673a2    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2339  0x5555555673a6    jnbe 0x555555567500                      0f 87 54 01 00 00
[B]      2340  0x5555555673ac loc_5555555673ac: // size=21 thread=0x100000000
[I]      2340  0x5555555673ac    lea rcx, ptr [rip+0xa9d1]                48 8d 0d d1 a9 00 00
[I]      2341  0x5555555673b3    movzx eax, r9b                           41 0f b6 c1
[I]      2342  0x5555555673b7    movsxd rax, dword ptr [rcx+rax*4]        48 63 04 81
[I]      2343  0x5555555673bb    add rax, rcx                             48 01 c8
[I]      2344  0x5555555673be    notrack jmp rax                          3e ff e0
[B]      2345  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2345  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2346  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2347  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2347  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2348  0x555555568194    test sil, sil                            40 84 f6
[I]      2349  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2350  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2350  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2351  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2352  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2352  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2353  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2354  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2355  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2355  0x55555556764d    mov eax, edx                             89 d0
[I]      2356  0x55555556764f    mov ecx, edx                             89 d1
[I]      2357  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2358  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2359  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2360  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2361  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2362  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2363  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2363  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2364  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2365  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2366  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2367  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2367  0x555555567585    xor eax, eax                             31 c0
[I]      2368  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2369  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2370  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2370  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2371  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2372  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2373  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2374  0x55555556759f    test al, al                              84 c0
[I]      2375  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2376  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2376  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2377  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2378  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2378  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2379  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2380  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2381  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2382  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2383  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2383  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2384  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2385  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2386  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2387  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2388  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2389  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2389  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2390  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2391  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2392  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2393  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2393  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2394  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2395  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2396  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2396  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2397  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2398  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2398  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2399  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2400  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2400  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2401  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2402  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2403  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2404  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2405  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2406  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2406  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2407  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2408  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2408  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2409  0x555555568194    test sil, sil                            40 84 f6
[I]      2410  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2411  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2411  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2412  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2413  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2413  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2414  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2415  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2416  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2416  0x55555556764d    mov eax, edx                             89 d0
[I]      2417  0x55555556764f    mov ecx, edx                             89 d1
[I]      2418  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2419  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2420  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2421  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2422  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2423  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2424  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2424  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2425  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2426  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2427  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2428  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2428  0x555555567585    xor eax, eax                             31 c0
[I]      2429  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2430  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2431  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2431  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2432  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2433  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2434  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2435  0x55555556759f    test al, al                              84 c0
[I]      2436  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2437  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2437  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2438  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2439  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2439  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2440  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2441  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2442  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2443  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2444  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2444  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2445  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2446  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2447  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2448  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2449  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2450  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2450  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2451  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2452  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2453  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2454  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2454  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2455  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2456  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2457  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2457  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2458  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2459  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2459  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2460  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2461  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2461  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2462  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2463  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2464  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2465  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2466  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2467  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2467  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2468  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2469  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2469  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2470  0x555555568194    test sil, sil                            40 84 f6
[I]      2471  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2472  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2472  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2473  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2474  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2474  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2475  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2476  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2477  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2477  0x55555556764d    mov eax, edx                             89 d0
[I]      2478  0x55555556764f    mov ecx, edx                             89 d1
[I]      2479  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2480  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2481  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2482  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2483  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2484  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2485  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2485  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2486  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2487  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2488  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2489  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2489  0x555555567585    xor eax, eax                             31 c0
[I]      2490  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2491  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2492  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2492  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2493  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2494  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2495  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2496  0x55555556759f    test al, al                              84 c0
[I]      2497  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2498  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2498  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2499  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2500  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2500  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2501  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2502  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2503  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2504  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2505  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2505  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2506  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2507  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2508  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2509  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2510  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2511  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2511  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2512  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2513  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2514  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2515  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2515  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2516  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2517  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2518  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2518  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2519  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2520  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2520  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2521  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2522  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2522  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2523  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2524  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2525  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2526  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2527  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2528  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2528  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2529  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2530  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2530  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2531  0x555555568194    test sil, sil                            40 84 f6
[I]      2532  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2533  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2533  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2534  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2535  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2535  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2536  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2537  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2538  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2538  0x55555556764d    mov eax, edx                             89 d0
[I]      2539  0x55555556764f    mov ecx, edx                             89 d1
[I]      2540  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2541  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2542  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2543  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2544  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2545  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2546  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2546  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2547  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2548  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2549  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2550  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2550  0x555555567585    xor eax, eax                             31 c0
[I]      2551  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2552  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2553  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2553  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2554  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2555  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2556  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2557  0x55555556759f    test al, al                              84 c0
[I]      2558  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2559  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2559  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2560  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2561  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2561  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2562  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2563  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2564  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2565  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2566  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2566  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2567  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2568  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2569  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2570  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2571  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2572  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2572  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2573  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2574  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2575  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2576  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2576  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2577  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2578  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2579  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2579  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2580  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2581  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2581  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2582  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2583  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2583  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2584  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2585  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2586  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2587  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2588  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2589  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2589  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2590  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2591  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2591  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2592  0x555555568194    test sil, sil                            40 84 f6
[I]      2593  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2594  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2594  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2595  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2596  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2596  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2597  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2598  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2599  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2599  0x55555556764d    mov eax, edx                             89 d0
[I]      2600  0x55555556764f    mov ecx, edx                             89 d1
[I]      2601  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2602  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2603  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2604  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2605  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2606  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2607  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2607  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2608  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2609  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2610  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2611  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2611  0x555555567585    xor eax, eax                             31 c0
[I]      2612  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2613  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2614  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2614  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2615  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2616  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2617  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2618  0x55555556759f    test al, al                              84 c0
[I]      2619  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2620  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2620  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2621  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2622  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2622  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2623  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2624  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2625  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2626  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2627  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2627  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2628  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2629  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2630  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2631  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2632  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2633  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2633  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2634  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2635  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2636  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2637  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2637  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2638  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2639  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2640  0x555555567399 loc_555555567399: // size=9 thread=0x100000000
[I]      2640  0x555555567399    test r9b, r9b                            45 84 c9
[I]      2641  0x55555556739c    js 0x555555567500                        0f 88 5e 01 00 00
[B]      2642  0x5555555673a2 loc_5555555673a2: // size=10 thread=0x100000000
[I]      2642  0x5555555673a2    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2643  0x5555555673a6    jnbe 0x555555567500                      0f 87 54 01 00 00
[B]      2644  0x5555555673ac loc_5555555673ac: // size=21 thread=0x100000000
[I]      2644  0x5555555673ac    lea rcx, ptr [rip+0xa9d1]                48 8d 0d d1 a9 00 00
[I]      2645  0x5555555673b3    movzx eax, r9b                           41 0f b6 c1
[I]      2646  0x5555555673b7    movsxd rax, dword ptr [rcx+rax*4]        48 63 04 81
[I]      2647  0x5555555673bb    add rax, rcx                             48 01 c8
[I]      2648  0x5555555673be    notrack jmp rax                          3e ff e0
[B]      2649  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2649  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2650  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2651  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2651  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2652  0x555555568194    test sil, sil                            40 84 f6
[I]      2653  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2654  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2654  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2655  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2656  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2656  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2657  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2658  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2659  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2659  0x55555556764d    mov eax, edx                             89 d0
[I]      2660  0x55555556764f    mov ecx, edx                             89 d1
[I]      2661  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2662  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2663  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2664  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2665  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2666  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2667  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2667  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2668  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2669  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2670  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2671  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2671  0x555555567585    xor eax, eax                             31 c0
[I]      2672  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2673  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2674  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2674  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2675  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2676  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2677  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2678  0x55555556759f    test al, al                              84 c0
[I]      2679  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2680  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2680  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2681  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2682  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2682  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2683  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2684  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2685  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2686  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2687  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2687  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2688  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2689  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2690  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2691  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2692  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2693  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2693  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2694  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2695  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2696  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2697  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2697  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2698  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2699  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2700  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2700  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2701  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2702  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2702  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2703  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2704  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2704  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2705  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2706  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2707  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2708  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2709  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2710  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2710  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2711  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2712  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2712  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2713  0x555555568194    test sil, sil                            40 84 f6
[I]      2714  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2715  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2715  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2716  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2717  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2717  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2718  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2719  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2720  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2720  0x55555556764d    mov eax, edx                             89 d0
[I]      2721  0x55555556764f    mov ecx, edx                             89 d1
[I]      2722  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2723  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2724  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2725  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2726  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2727  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2728  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2728  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2729  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2730  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2731  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2732  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2732  0x555555567585    xor eax, eax                             31 c0
[I]      2733  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2734  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2735  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2735  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2736  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2737  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2738  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2739  0x55555556759f    test al, al                              84 c0
[I]      2740  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2741  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2741  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2742  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2743  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2743  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2744  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2745  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2746  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2747  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2748  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2748  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2749  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2750  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2751  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2752  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2753  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2754  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2754  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2755  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2756  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2757  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2758  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2758  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2759  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2760  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2761  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2761  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2762  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2763  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2763  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2764  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2765  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2765  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2766  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2767  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2768  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2769  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2770  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2771  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2771  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2772  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2773  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2773  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2774  0x555555568194    test sil, sil                            40 84 f6
[I]      2775  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2776  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2776  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2777  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2778  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2778  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2779  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2780  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2781  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2781  0x55555556764d    mov eax, edx                             89 d0
[I]      2782  0x55555556764f    mov ecx, edx                             89 d1
[I]      2783  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2784  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2785  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2786  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2787  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2788  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2789  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2789  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2790  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2791  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2792  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2793  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2793  0x555555567585    xor eax, eax                             31 c0
[I]      2794  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2795  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2796  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2796  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2797  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2798  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2799  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2800  0x55555556759f    test al, al                              84 c0
[I]      2801  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2802  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2802  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2803  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2804  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2804  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2805  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2806  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2807  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2808  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2809  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2809  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2810  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2811  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2812  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2813  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2814  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2815  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      2815  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2816  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      2817  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      2818  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      2819  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      2819  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      2820  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      2821  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      2822  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      2822  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      2823  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      2824  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      2824  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      2825  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      2826  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      2826  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      2827  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      2828  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      2829  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      2830  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      2831  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      2832  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      2832  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      2833  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      2834  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      2834  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      2835  0x555555568194    test sil, sil                            40 84 f6
[I]      2836  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      2837  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      2837  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      2838  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      2839  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      2839  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      2840  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      2841  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      2842  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      2842  0x55555556764d    mov eax, edx                             89 d0
[I]      2843  0x55555556764f    mov ecx, edx                             89 d1
[I]      2844  0x555555567651    mov r9d, edx                             41 89 d1
[I]      2845  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      2846  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      2847  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      2848  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      2849  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      2850  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      2850  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      2851  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      2852  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      2853  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      2854  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      2854  0x555555567585    xor eax, eax                             31 c0
[I]      2855  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      2856  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      2857  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      2857  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      2858  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      2859  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      2860  0x55555556759c    and eax, r11d                            44 21 d8
[I]      2861  0x55555556759f    test al, al                              84 c0
[I]      2862  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      2863  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      2863  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      2864  0x555555567469    jnb 0x55555556746f                       73 04
[B]      2865  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      2865  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      2866  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      2867  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      2868  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      2869  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      2870  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      2870  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      2871  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      2872  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      2873  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      2874  0x555555567498    test r12b, r12b                          45 84 e4
[I]      2875  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      2876  0x5555555674a1 loc_5555555674a1: // size=9 thread=0x100000000
[I]      2876  0x5555555674a1    test rbx, rbx                            48 85 db
[I]      2877  0x5555555674a4    jnz 0x5555555684d0                       0f 85 26 10 00 00
[B]      2878  0x5555555684d0 loc_5555555684d0: // size=8 thread=0x100000000
[I]      2878  0x5555555684d0    movzx eax, byte ptr [rbp-0x61]           0f b6 45 9f
[I]      2879  0x5555555684d4    xor al, 0x1                              34 01
[I]      2880  0x5555555684d6    jz 0x5555555684e2                        74 0a
[B]      2881  0x5555555684e2 loc_5555555684e2: // size=21 thread=0x100000000
[I]      2881  0x5555555684e2    mov r10, r15                             4d 89 fa
[I]      2882  0x5555555684e5    mov r11, rbx                             49 89 db
[I]      2883  0x5555555684e8    mov r15, r14                             4d 89 f7
[I]      2884  0x5555555684eb    mov rdi, qword ptr [rbp-0x98]            48 8b bd 68 ff ff ff
[I]      2885  0x5555555684f2    test rdi, rdi                            48 85 ff
[I]      2886  0x5555555684f5    jz 0x555555568523                        74 2c
[B]      2887  0x5555555684f7 loc_5555555684f7: // size=4 thread=0x100000000
[I]      2887  0x5555555684f7    test al, al                              84 c0
[I]      2888  0x5555555684f9    jz 0x555555568523                        74 28
[B]      2889  0x555555568523 loc_555555568523: // size=5 thread=0x100000000
[I]      2889  0x555555568523    cmp r11, r15                             4d 39 fb
[I]      2890  0x555555568526    jnb 0x55555556852d                       73 05
[B]      2891  0x55555556852d loc_55555556852d: // size=19 thread=0x100000000
[I]      2891  0x55555556852d    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      2892  0x555555568531    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      2893  0x55555556853a    jnz 0x555555568ac2                       0f 85 82 05 00 00
[B]      2894  0x555555568540 loc_555555568540: // size=21 thread=0x100000000
[I]      2894  0x555555568540    add rsp, 0xb8                            48 81 c4 b8 00 00 00
[I]      2895  0x555555568547    mov rax, r11                             4c 89 d8
[I]      2896  0x55555556854a    pop rbx                                  5b
[I]      2897  0x55555556854b    pop r12                                  41 5c
[I]      2898  0x55555556854d    pop r13                                  41 5d
[I]      2899  0x55555556854f    pop r14                                  41 5e
[I]      2900  0x555555568551    pop r15                                  41 5f
[I]      2901  0x555555568553    pop rbp                                  5d
[I]      2902  0x555555568554    ret                                      c3
[B]      2903  0x55555555cf21 loc_55555555cf21: // size=16 thread=0x100000000
[I]      2903  0x55555555cf21    mov dword ptr [r13], r14d                45 89 75 00
[I]      2904  0x55555555cf25    movzx esi, byte ptr [rbp-0x2a]           0f b6 75 d6
[I]      2905  0x55555555cf29    pop rdx                                  5a
[I]      2906  0x55555555cf2a    pop rcx                                  59
[I]      2907  0x55555555cf2b    cmp byte ptr [r12], sil                  41 38 34 24
[I]      2908  0x55555555cf2f    jz 0x55555555cf58                        74 27
[B]      2909  0x55555555cf58 loc_55555555cf58: // size=12 thread=0x100000000
[I]      2909  0x55555555cf58    mov rbx, rax                             48 89 c3
[I]      2910  0x55555555cf5b    mov rdi, r12                             4c 89 e7
[C]      2911 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      2911  0x55555555cf5e    call qword ptr [rip+0x19df4]             ff 15 f4 9d 01 00
[B]      2912  0x55555555cf64 loc_55555555cf64: // size=8 thread=0x100000000
[I]      2912  0x55555555cf64    cmp rax, rbx                             48 39 d8
[I]      2913  0x55555555cf67    setnz al                                 0f 95 c0
[I]      2914  0x55555555cf6a    jmp 0x55555555cf36                       eb ca
[B]      2915  0x55555555cf36 loc_55555555cf36: // size=15 thread=0x100000000
[I]      2915  0x55555555cf36    mov rdx, qword ptr [rbp-0x28]            48 8b 55 d8
[I]      2916  0x55555555cf3a    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      2917  0x55555555cf43    jnz 0x55555555cf6c                       75 27
[B]      2918  0x55555555cf45 loc_55555555cf45: // size=13 thread=0x100000000
[I]      2918  0x55555555cf45    lea rsp, ptr [rbp-0x20]                  48 8d 65 e0
[I]      2919  0x55555555cf49    pop rbx                                  5b
[I]      2920  0x55555555cf4a    pop r12                                  41 5c
[I]      2921  0x55555555cf4c    pop r13                                  41 5d
[I]      2922  0x55555555cf4e    pop r14                                  41 5e
[I]      2923  0x55555555cf50    pop rbp                                  5d
[I]      2924  0x55555555cf51    ret                                      c3
[B]      2925  0x555555564c84 loc_555555564c84: // size=18 thread=0x100000000
[I]      2925  0x555555564c84    movzx edx, al                            0f b6 d0
[I]      2926  0x555555564c87    mov dword ptr [r15+0xc4], edx            41 89 97 c4 00 00 00
[I]      2927  0x555555564c8e    test al, al                              84 c0
[I]      2928  0x555555564c90    jz 0x55555556465c                        0f 84 c6 f9 ff ff
[B]      2929  0x55555556465c loc_55555556465c: // size=13 thread=0x100000000
[I]      2929  0x55555556465c    cmp byte ptr [rbp-0x378], 0x0            80 bd 88 fc ff ff 00
[I]      2930  0x555555564663    jz 0x5555555647d0                        0f 84 67 01 00 00
[B]      2931  0x5555555647d0 loc_5555555647d0: // size=13 thread=0x100000000
[I]      2931  0x5555555647d0    cmp byte ptr [rip+0x12f25], 0x0          80 3d 25 2f 01 00 00
[I]      2932  0x5555555647d7    jz 0x555555564898                        0f 84 bb 00 00 00
[B]      2933  0x555555564898 loc_555555564898: // size=13 thread=0x100000000
[I]      2933  0x555555564898    cmp byte ptr [rip+0x12e5c], 0x0          80 3d 5c 2e 01 00 00
[I]      2934  0x55555556489f    jnz 0x555555564970                       0f 85 cb 00 00 00
[B]      2935  0x5555555648a5 loc_5555555648a5: // size=24 thread=0x100000000
[I]      2935  0x5555555648a5    mov r9d, dword ptr [rbp-0x374]           44 8b 8d 8c fc ff ff
[I]      2936  0x5555555648ac    movzx edx, byte ptr [rip+0x12e47]        0f b6 15 47 2e 01 00
[I]      2937  0x5555555648b3    test r9d, r9d                            45 85 c9
[I]      2938  0x5555555648b6    setz al                                  0f 94 c0
[I]      2939  0x5555555648b9    test dl, dl                              84 d2
[I]      2940  0x5555555648bb    jz 0x5555555648c5                        74 08
[B]      2941  0x5555555648c5 loc_5555555648c5: // size=13 thread=0x100000000
[I]      2941  0x5555555648c5    cmp dword ptr [rbp-0x374], 0x3           83 bd 8c fc ff ff 03
[I]      2942  0x5555555648cc    jz 0x555555565818                        0f 84 46 0f 00 00
[B]      2943  0x5555555648d2 loc_5555555648d2: // size=8 thread=0x100000000
[I]      2943  0x5555555648d2    test al, al                              84 c0
[I]      2944  0x5555555648d4    jnz 0x555555565818                       0f 85 3e 0f 00 00
[B]      2945  0x5555555648da loc_5555555648da: // size=11 thread=0x100000000
[I]      2945  0x5555555648da    movzx ecx, byte ptr [rip+0x12a48]        0f b6 0d 48 2a 01 00
[I]      2946  0x5555555648e1    test cl, cl                              84 c9
[I]      2947  0x5555555648e3    jnz 0x555555564956                       75 71
[B]      2948  0x5555555648e5 loc_5555555648e5: // size=8 thread=0x100000000
[I]      2948  0x5555555648e5    test dl, dl                              84 d2
[I]      2949  0x5555555648e7    jz 0x555555565de9                        0f 84 fc 14 00 00
[B]      2950  0x555555565de9 loc_555555565de9: // size=13 thread=0x100000000
[I]      2950  0x555555565de9    cmp dword ptr [rbp-0x374], 0x5           83 bd 8c fc ff ff 05
[I]      2951  0x555555565df0    jz 0x555555565eae                        0f 84 b8 00 00 00
[B]      2952  0x555555565eae loc_555555565eae: // size=13 thread=0x100000000
[I]      2952  0x555555565eae    cmp dword ptr [rip+0x11467], 0x3         83 3d 67 14 01 00 03
[I]      2953  0x555555565eb5    jz 0x555555564970                        0f 84 b5 ea ff ff
[B]      2954  0x555555565ebb loc_555555565ebb: // size=13 thread=0x100000000
[I]      2954  0x555555565ebb    cmp byte ptr [rip+0x1145e], 0x0          80 3d 5e 14 01 00 00
[I]      2955  0x555555565ec2    jz 0x555555565dfe                        0f 84 36 ff ff ff
[B]      2956  0x555555565dfe loc_555555565dfe: // size=25 thread=0x100000000
[I]      2956  0x555555565dfe    movzx ecx, byte ptr [rip+0x11513]        0f b6 0d 13 15 01 00
[I]      2957  0x555555565e05    movzx eax, byte ptr [rip+0x118ed]        0f b6 05 ed 18 01 00
[I]      2958  0x555555565e0c    mov esi, ecx                             89 ce
[I]      2959  0x555555565e0e    or sil, al                               40 08 c6
[I]      2960  0x555555565e11    jnz 0x5555555660a2                       0f 85 8b 02 00 00
[B]      2961  0x555555565e17 loc_555555565e17: // size=24 thread=0x100000000
[I]      2961  0x555555565e17    cmp dword ptr [rip+0x11966], 0x4         83 3d 66 19 01 00 04
[I]      2962  0x555555565e1e    mov r12, qword ptr [rbp-0x390]           4c 8b a5 70 fc ff ff
[I]      2963  0x555555565e25    setz dl                                  0f 94 c2
[I]      2964  0x555555565e28    xor ecx, ecx                             31 c9
[I]      2965  0x555555565e2a    jmp 0x5555555647ac                       e9 7d e9 ff ff
[B]      2966  0x5555555647ac loc_5555555647ac: // size=35 thread=0x100000000
[I]      2966  0x5555555647ac    mov ebx, dword ptr [rbp-0x374]           8b 9d 8c fc ff ff
[I]      2967  0x5555555647b2    cmp ebx, 0x5                             83 fb 05
[I]      2968  0x5555555647b5    setz al                                  0f 94 c0
[I]      2969  0x5555555647b8    and eax, esi                             21 f0
[I]      2970  0x5555555647ba    cmp ebx, 0x6                             83 fb 06
[I]      2971  0x5555555647bd    mov byte ptr [rbp-0x391], al             88 85 6f fc ff ff
[I]      2972  0x5555555647c3    setz byte ptr [rbp-0x393]                0f 94 85 6d fc ff ff
[I]      2973  0x5555555647ca    jmp 0x555555564a59                       e9 8a 02 00 00
[B]      2974  0x555555564a59 loc_555555564a59: // size=36 thread=0x100000000
[I]      2974  0x555555564a59    mov r8d, dword ptr [rip+0x128c4]         44 8b 05 c4 28 01 00
[I]      2975  0x555555564a60    movzx ebx, byte ptr [rbp-0x391]          0f b6 9d 6f fc ff ff
[I]      2976  0x555555564a67    test r8d, r8d                            45 85 c0
[I]      2977  0x555555564a6a    setz al                                  0f 94 c0
[I]      2978  0x555555564a6d    or eax, ecx                              09 c8
[I]      2979  0x555555564a6f    or bl, al                                08 c3
[I]      2980  0x555555564a71    mov byte ptr [rbp-0x392], bl             88 9d 6e fc ff ff
[I]      2981  0x555555564a77    jz 0x555555564ca8                        0f 84 2b 02 00 00
[B]      2982  0x555555564ca8 loc_555555564ca8: // size=13 thread=0x100000000
[I]      2982  0x555555564ca8    cmp byte ptr [rip+0x12ada], 0x0          80 3d da 2a 01 00 00
[I]      2983  0x555555564caf    jz 0x555555564da8                        0f 84 f3 00 00 00
[B]      2984  0x555555564da8 loc_555555564da8: // size=17 thread=0x100000000
[I]      2984  0x555555564da8    mov rbx, qword ptr [r15+0x58]            49 8b 5f 58
[I]      2985  0x555555564dac    cmp byte ptr [rip+0x12575], 0x0          80 3d 75 25 01 00 00
[I]      2986  0x555555564db3    jnz 0x555555564ee7                       0f 85 2e 01 00 00
[B]      2987  0x555555564db9 loc_555555564db9: // size=9 thread=0x100000000
[I]      2987  0x555555564db9    cmp byte ptr [rip+0x12558], 0x0          80 3d 58 25 01 00 00
[I]      2988  0x555555564dc0    jz 0x555555564deb                        74 29
[B]      2989  0x555555564deb loc_555555564deb: // size=13 thread=0x100000000
[I]      2989  0x555555564deb    cmp byte ptr [rip+0x12537], 0x0          80 3d 37 25 01 00 00
[I]      2990  0x555555564df2    jnz 0x555555565170                       0f 85 78 03 00 00
[B]      2991  0x555555564df8 loc_555555564df8: // size=12 thread=0x100000000
[I]      2991  0x555555564df8    mov rdi, qword ptr [rbp-0x390]           48 8b bd 70 fc ff ff
[C]      2992 Calling function 0x5555555640a0(error_at_line)
[I]      2992  0x555555564dff    call 0x5555555640a0                      e8 9c f2 ff ff
[B]      2993  0x5555555640a0 loc_5555555640a0: // size=20 thread=0x100000000
[I]      2993  0x5555555640a0    nop edx, edi                             f3 0f 1e fa
[I]      2994  0x5555555640a4    push rbp                                 55
[I]      2995  0x5555555640a5    mov rbp, rsp                             48 89 e5
[I]      2996  0x5555555640a8    push r12                                 41 54
[I]      2997  0x5555555640aa    mov r12, rdi                             49 89 fc
[I]      2998  0x5555555640ad    push rbx                                 53
[C]      2999 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      2999  0x5555555640ae    call qword ptr [rip+0x12ca4]             ff 15 a4 2c 01 00
[B]      3000  0x5555555640b4 loc_5555555640b4: // size=13 thread=0x100000000
[I]      3000  0x5555555640b4    lea rbx, ptr [rax+0x1]                   48 8d 58 01
[I]      3001  0x5555555640b8    mov rdi, rbx                             48 89 df
[C]      3002 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]      3002  0x5555555640bb    call qword ptr [rip+0x12def]             ff 15 ef 2d 01 00
[B]      3003  0x5555555640c1 loc_5555555640c1: // size=5 thread=0x100000000
[I]      3003  0x5555555640c1    test rax, rax                            48 85 c0
[I]      3004  0x5555555640c4    jz 0x5555555640dc                        74 16
[B]      3005  0x5555555640c6 loc_5555555640c6: // size=22 thread=0x100000000
[I]      3005  0x5555555640c6    mov rcx, rbx                             48 89 d9
[I]      3006  0x5555555640c9    mov rdx, rbx                             48 89 da
[I]      3007  0x5555555640cc    mov rsi, r12                             4c 89 e6
[I]      3008  0x5555555640cf    pop rbx                                  5b
[I]      3009  0x5555555640d0    mov rdi, rax                             48 89 c7
[I]      3010  0x5555555640d3    pop r12                                  41 5c
[I]      3011  0x5555555640d5    pop rbp                                  5d
[I]      3012  0x5555555640d6    jmp qword ptr [rip+0x12d6c]              ff 25 6c 2d 01 00
[B]      3013  0x555555564e04 loc_555555564e04: // size=30 thread=0x100000000
[I]      3013  0x555555564e04    add qword ptr [rip+0x127fc], 0x1         48 83 05 fc 27 01 00 01
[I]      3014  0x555555564e0c    mov qword ptr [r15], rax                 49 89 07
[I]      3015  0x555555564e0f    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      3016  0x555555564e13    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      3017  0x555555564e1c    jnz 0x555555566123                       0f 85 01 13 00 00
[B]      3018  0x555555564e22 loc_555555564e22: // size=18 thread=0x100000000
[I]      3018  0x555555564e22    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      3019  0x555555564e26    mov rax, rbx                             48 89 d8
[I]      3020  0x555555564e29    pop rbx                                  5b
[I]      3021  0x555555564e2a    pop r12                                  41 5c
[I]      3022  0x555555564e2c    pop r13                                  41 5d
[I]      3023  0x555555564e2e    pop r14                                  41 5e
[I]      3024  0x555555564e30    pop r15                                  41 5f
[I]      3025  0x555555564e32    pop rbp                                  5d
[I]      3026  0x555555564e33    ret                                      c3
[B]      3027  0x55555556670a loc_55555556670a: // size=20 thread=0x100000000
[I]      3027  0x55555556670a    add qword ptr [rbp-0x2f0], rax           48 01 85 10 fd ff ff
[I]      3028  0x555555566711    cmp dword ptr [rip+0x10c0c], 0x1         83 3d 0c 0c 01 00 01
[I]      3029  0x555555566718    jnz 0x555555566510                       0f 85 f2 fd ff ff
[C]      3030 Calling function 0x55555555f4f0(error_at_line)
[B]      3030  0x555555566510 loc_555555566510: // size=5 thread=0x100000000
[I]      3030  0x555555566510    call 0x55555555f4f0                      e8 db 8f ff ff
[B]      3031  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      3031  0x55555555f4f0    push rbp                                 55
[I]      3032  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      3033  0x55555555f4f4    push r15                                 41 57
[I]      3034  0x55555555f4f6    push r14                                 41 56
[I]      3035  0x55555555f4f8    push r13                                 41 55
[I]      3036  0x55555555f4fa    push r12                                 41 54
[I]      3037  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      3038  0x55555555f503    push rbx                                 53
[I]      3039  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      3040  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      3041  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      3042  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      3043  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      3044  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      3045  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      3046  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      3046  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      3047  0x55555555f58d    test eax, eax                            85 c0
[I]      3048  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      3049  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      3049  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      3050  0x55555555f597    test eax, eax                            85 c0
[I]      3051  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      3052  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      3052  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      3053  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      3054  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      3055  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      3055  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      3056  0x55555555f5e6    pop rbx                                  5b
[I]      3057  0x55555555f5e7    pop r12                                  41 5c
[I]      3058  0x55555555f5e9    pop r13                                  41 5d
[I]      3059  0x55555555f5eb    pop r14                                  41 5e
[I]      3060  0x55555555f5ed    pop r15                                  41 5f
[I]      3061  0x55555555f5ef    pop rbp                                  5d
[I]      3062  0x55555555f5f0    ret                                      c3
[B]      3063  0x555555566515 loc_555555566515: // size=5 thread=0x100000000
[I]      3063  0x555555566515    jmp 0x555555566490                       e9 76 ff ff ff
[B]      3064  0x555555566490 loc_555555566490: // size=17 thread=0x100000000
[I]      3064  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]      3065  0x555555566498    mov rdi, r14                             4c 89 f7
[C]      3066 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]      3066  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]      3067  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]      3067  0x5555555664a1    mov r12, rax                             49 89 c4
[I]      3068  0x5555555664a4    test rax, rax                            48 85 c0
[I]      3069  0x5555555664a7    jz 0x555555566520                        74 77
[B]      3070  0x5555555664a9 loc_5555555664a9: // size=19 thread=0x100000000
[I]      3070  0x5555555664a9    lea rbx, ptr [rax+0x13]                  48 8d 58 13
[I]      3071  0x5555555664ad    mov eax, dword ptr [rip+0x11021]         8b 05 21 10 01 00
[I]      3072  0x5555555664b3    cmp eax, 0x2                             83 f8 02
[I]      3073  0x5555555664b6    jz 0x5555555666b0                        0f 84 f4 01 00 00
[B]      3074  0x5555555664bc loc_5555555664bc: // size=12 thread=0x100000000
[I]      3074  0x5555555664bc    cmp byte ptr [r12+0x13], 0x2e            41 80 7c 24 13 2e
[I]      3075  0x5555555664c2    jz 0x555555566688                        0f 84 c0 01 00 00
[B]      3076  0x5555555664c8 loc_5555555664c8: // size=8 thread=0x100000000
[I]      3076  0x5555555664c8    test eax, eax                            85 c0
[I]      3077  0x5555555664ca    jnz 0x5555555666b0                       0f 85 e0 01 00 00
[B]      3078  0x5555555664d0 loc_5555555664d0: // size=12 thread=0x100000000
[I]      3078  0x5555555664d0    mov r15, qword ptr [rip+0x10fe9]         4c 8b 3d e9 0f 01 00
[I]      3079  0x5555555664d7    test r15, r15                            4d 85 ff
[I]      3080  0x5555555664da    jnz 0x5555555664f5                       75 19
[B]      3081  0x5555555664dc loc_5555555664dc: // size=5 thread=0x100000000
[I]      3081  0x5555555664dc    jmp 0x5555555666b0                       e9 cf 01 00 00
[B]      3082  0x5555555666b0 loc_5555555666b0: // size=12 thread=0x100000000
[I]      3082  0x5555555666b0    mov r15, qword ptr [rip+0x10de1]         4c 8b 3d e1 0d 01 00
[I]      3083  0x5555555666b7    test r15, r15                            4d 85 ff
[I]      3084  0x5555555666ba    jnz 0x5555555666c9                       75 0d
[B]      3085  0x5555555666bc loc_5555555666bc: // size=2 thread=0x100000000
[I]      3085  0x5555555666bc    jmp 0x5555555666e8                       eb 2a
[B]      3086  0x5555555666e8 loc_5555555666e8: // size=34 thread=0x100000000
[I]      3086  0x5555555666e8    movzx eax, byte ptr [r12+0x12]           41 0f b6 44 24 12
[I]      3087  0x5555555666ee    lea rcx, ptr [rip+0x704b]                48 8d 0d 4b 70 00 00
[I]      3088  0x5555555666f5    xor edx, edx                             31 d2
[I]      3089  0x5555555666f7    mov rdi, rbx                             48 89 df
[I]      3090  0x5555555666fa    movsx esi, byte ptr [rcx+rax*1]          0f be 34 01
[I]      3091  0x5555555666fe    mov rcx, qword ptr [rbp-0x2e8]           48 8b 8d 18 fd ff ff
[C]      3092 Calling function 0x555555564590(error_at_line)
[I]      3092  0x555555566705    call 0x555555564590                      e8 86 de ff ff
[B]      3093  0x555555564590 loc_555555564590: // size=82 thread=0x100000000
[I]      3093  0x555555564590    push rbp                                 55
[I]      3094  0x555555564591    mov rbp, rsp                             48 89 e5
[I]      3095  0x555555564594    push r15                                 41 57
[I]      3096  0x555555564596    push r14                                 41 56
[I]      3097  0x555555564598    push r13                                 41 55
[I]      3098  0x55555556459a    push r12                                 41 54
[I]      3099  0x55555556459c    push rbx                                 53
[I]      3100  0x55555556459d    sub rsp, 0x388                           48 81 ec 88 03 00 00
[I]      3101  0x5555555645a4    mov qword ptr [rbp-0x390], rdi           48 89 bd 70 fc ff ff
[I]      3102  0x5555555645ab    mov rdi, qword ptr [rip+0x1305e]         48 8b 3d 5e 30 01 00
[I]      3103  0x5555555645b2    mov dword ptr [rbp-0x378], edx           89 95 88 fc ff ff
[I]      3104  0x5555555645b8    mov rdx, qword ptr [rip+0x13049]         48 8b 15 49 30 01 00
[I]      3105  0x5555555645bf    mov dword ptr [rbp-0x374], esi           89 b5 8c fc ff ff
[I]      3106  0x5555555645c5    cmp rdx, qword ptr [rip+0x1304c]         48 3b 15 4c 30 01 00
[I]      3107  0x5555555645cc    mov rbx, qword ptr fs:[0x28]             64 48 8b 1c 25 28 00 00 00
[I]      3108  0x5555555645d5    mov qword ptr [rbp-0x38], rbx            48 89 5d c8
[I]      3109  0x5555555645d9    mov rbx, rcx                             48 89 cb
[I]      3110  0x5555555645dc    jz 0x555555564c40                        0f 84 5e 06 00 00
[B]      3111  0x5555555645e2 loc_5555555645e2: // size=59 thread=0x100000000
[I]      3111  0x5555555645e2    lea rax, ptr [rdx+rdx*2]                 48 8d 04 52
[I]      3112  0x5555555645e6    lea rdx, ptr [rdx+rax*4]                 48 8d 14 82
[I]      3113  0x5555555645ea    xor eax, eax                             31 c0
[I]      3114  0x5555555645ec    shl rdx, 0x4                             48 c1 e2 04
[I]      3115  0x5555555645f0    lea r15, ptr [rdi+rdx*1]                 4c 8d 3c 17
[I]      3116  0x5555555645f4    lea rdi, ptr [r15+0x8]                   49 8d 7f 08
[I]      3117  0x5555555645f8    mov rcx, r15                             4c 89 f9
[I]      3118  0x5555555645fb    mov qword ptr [r15], 0x0                 49 c7 07 00 00 00 00
[I]      3119  0x555555564602    mov qword ptr [r15+0xc8], 0x0            49 c7 87 c8 00 00 00 00 00 00 00
[I]      3120  0x55555556460d    and rdi, 0xfffffffffffffff8              48 83 e7 f8
[I]      3121  0x555555564611    sub rcx, rdi                             48 29 f9
[I]      3122  0x555555564614    add ecx, 0xd0                            81 c1 d0 00 00 00
[I]      3123  0x55555556461a    shr ecx, 0x3                             c1 e9 03
[B]      3124  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3124  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3125  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3125  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3126  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3126  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3127  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3127  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3128  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3128  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3129  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3129  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3130  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3130  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3131  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3131  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3132  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3132  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3133  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3133  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3134  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3134  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3135  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3135  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3136  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3136  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3137  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3137  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3138  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3138  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3139  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3139  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3140  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3140  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3141  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3141  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3142  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3142  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3143  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3143  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3144  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3144  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3145  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3145  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3146  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3146  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3147  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3147  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3148  0x55555556461d loc_55555556461d: // size=3 thread=0x100000000
[I]      3148  0x55555556461d    rep stosq qword ptr [rdi]                f3 48 ab
[B]      3149  0x555555564620 loc_555555564620: // size=47 thread=0x100000000
[I]      3149  0x555555564620    mov dword ptr [r15+0xc4], 0xffffffff     41 c7 87 c4 00 00 00 ff ff ff ff
[I]      3150  0x55555556462b    mov eax, dword ptr [rbp-0x374]           8b 85 8c fc ff ff
[I]      3151  0x555555564631    cmp byte ptr [rip+0x12c84], 0x0          80 3d 84 2c 01 00 00
[I]      3152  0x555555564638    mov dword ptr [r15+0xa8], eax            41 89 87 a8 00 00 00
[I]      3153  0x55555556463f    lea rax, ptr [rip+0x129da]               48 8d 05 da 29 01 00
[I]      3154  0x555555564646    mov qword ptr [r15+0xb0], rax            49 89 87 b0 00 00 00
[I]      3155  0x55555556464d    jnz 0x55555556465c                       75 0d
[B]      3156  0x55555556464f loc_55555556464f: // size=13 thread=0x100000000
[I]      3156  0x55555556464f    cmp byte ptr [rip+0x12c67], 0x0          80 3d 67 2c 01 00 00
[I]      3157  0x555555564656    jnz 0x555555564c78                       0f 85 1c 06 00 00
[B]      3158  0x555555564c78 loc_555555564c78: // size=12 thread=0x100000000
[I]      3158  0x555555564c78    mov rdi, qword ptr [rbp-0x390]           48 8b bd 70 fc ff ff
[C]      3159 Calling function 0x55555555cec0(error_at_line)
[I]      3159  0x555555564c7f    call 0x55555555cec0                      e8 3c 82 ff ff
[B]      3160  0x55555555cec0 loc_55555555cec0: // size=58 thread=0x100000000
[I]      3160  0x55555555cec0    push rbp                                 55
[I]      3161  0x55555555cec1    lea rax, ptr [rip+0x1a418]               48 8d 05 18 a4 01 00
[I]      3162  0x55555555cec8    mov rbp, rsp                             48 89 e5
[I]      3163  0x55555555cecb    push r14                                 41 56
[I]      3164  0x55555555cecd    push r13                                 41 55
[I]      3165  0x55555555cecf    push r12                                 41 54
[I]      3166  0x55555555ced1    push rbx                                 53
[I]      3167  0x55555555ced2    sub rsp, 0x10                            48 83 ec 10
[I]      3168  0x55555555ced6    mov rbx, qword ptr [rip+0x1a723]         48 8b 1d 23 a7 01 00
[I]      3169  0x55555555cedd    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      3170  0x55555555cee6    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      3171  0x55555555ceea    mov r12, rdi                             49 89 fc
[I]      3172  0x55555555ceed    test rbx, rbx                            48 85 db
[I]      3173  0x55555555cef0    cmovz rbx, rax                           48 0f 44 d8
[C]      3174 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]      3174  0x55555555cef4    call qword ptr [rip+0x19d96]             ff 15 96 9d 01 00
[B]      3175  0x55555555cefa loc_55555555cefa: // size=39 thread=0x100000000
[I]      3175  0x55555555cefa    mov esi, 0x2                             be 02 00 00 00
[I]      3176  0x55555555ceff    lea rdi, ptr [rbp-0x2a]                  48 8d 7d d6
[I]      3177  0x55555555cf03    mov r14d, dword ptr [rax]                44 8b 30
[I]      3178  0x55555555cf06    mov ecx, dword ptr [rbx]                 8b 0b
[I]      3179  0x55555555cf08    mov r13, rax                             49 89 c5
[I]      3180  0x55555555cf0b    lea r9, ptr [rbx+0x8]                    4c 8d 4b 08
[I]      3181  0x55555555cf0f    mov r8d, dword ptr [rbx+0x4]             44 8b 43 04
[I]      3182  0x55555555cf13    push qword ptr [rbx+0x30]                ff 73 30
[I]      3183  0x55555555cf16    push qword ptr [rbx+0x28]                ff 73 28
[I]      3184  0x55555555cf19    mov rdx, r12                             4c 89 e2
[C]      3185 Calling function 0x5555555671b0(error_at_line)
[I]      3185  0x55555555cf1c    call 0x5555555671b0                      e8 8f a2 00 00
[B]      3186  0x5555555671b0 loc_5555555671b0: // size=106 thread=0x100000000
[I]      3186  0x5555555671b0    nop edx, edi                             f3 0f 1e fa
[I]      3187  0x5555555671b4    push rbp                                 55
[I]      3188  0x5555555671b5    mov r11, rsi                             49 89 f3
[I]      3189  0x5555555671b8    mov rbp, rsp                             48 89 e5
[I]      3190  0x5555555671bb    push r15                                 41 57
[I]      3191  0x5555555671bd    push r14                                 41 56
[I]      3192  0x5555555671bf    push r13                                 41 55
[I]      3193  0x5555555671c1    push r12                                 41 54
[I]      3194  0x5555555671c3    push rbx                                 53
[I]      3195  0x5555555671c4    sub rsp, 0xb8                            48 81 ec b8 00 00 00
[I]      3196  0x5555555671cb    mov qword ptr [rbp-0x58], rdx            48 89 55 a8
[I]      3197  0x5555555671cf    mov r13, qword ptr [rbp+0x10]            4c 8b 6d 10
[I]      3198  0x5555555671d3    mov dword ptr [rbp-0x9c], r8d            44 89 85 64 ff ff ff
[I]      3199  0x5555555671da    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3200  0x5555555671e1    mov dword ptr [rbp-0x7c], ecx            89 4d 84
[I]      3201  0x5555555671e4    mov r15, r8                              4d 89 c7
[I]      3202  0x5555555671e7    mov qword ptr [rbp-0x70], r9             4c 89 4d 90
[I]      3203  0x5555555671eb    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      3204  0x5555555671f4    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      3205  0x5555555671f8    mov r14, qword ptr [rbp+0x18]            4c 8b 75 18
[I]      3206  0x5555555671fc    mov qword ptr [rbp-0xd8], r13            4c 89 ad 28 ff ff ff
[I]      3207  0x555555567203    mov qword ptr [rbp-0xd0], r14            4c 89 b5 30 ff ff ff
[I]      3208  0x55555556720a    mov r14, rdi                             49 89 fe
[I]      3209  0x55555556720d    nop dword ptr [rax]                      0f 1f 00
[I]      3210  0x555555567210    mov qword ptr [rbp-0x60], r11            4c 89 5d a0
[C]      3211 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[I]      3211  0x555555567214    call qword ptr [rip+0xfb36]              ff 15 36 fb 00 00
[B]      3212  0x55555556721a loc_55555556721a: // size=85 thread=0x100000000
[I]      3212  0x55555556721a    mov byte ptr [rbp-0x63], 0x1             c6 45 9d 01
[I]      3213  0x55555556721e    mov r8, r15                              4d 89 f8
[I]      3214  0x555555567221    mov r15, r14                             4d 89 f7
[I]      3215  0x555555567224    mov qword ptr [rbp-0xb0], rax            48 89 85 50 ff ff ff
[I]      3216  0x55555556722b    mov eax, dword ptr [rbp-0x9c]            8b 85 64 ff ff ff
[I]      3217  0x555555567231    mov byte ptr [rbp-0x7e], 0x0             c6 45 82 00
[I]      3218  0x555555567235    mov r14, qword ptr [rbp-0x60]            4c 8b 75 a0
[I]      3219  0x555555567239    shr eax, 0x1                             d1 e8
[I]      3220  0x55555556723b    mov byte ptr [rbp-0x65], 0x0             c6 45 9b 00
[I]      3221  0x55555556723f    and eax, 0x1                             83 e0 01
[I]      3222  0x555555567242    mov qword ptr [rbp-0x78], 0x0            48 c7 45 88 00 00 00 00
[I]      3223  0x55555556724a    mov byte ptr [rbp-0x61], al              88 45 9f
[I]      3224  0x55555556724d    mov qword ptr [rbp-0x98], 0x0            48 c7 85 68 ff ff ff 00 00 00 00
[I]      3225  0x555555567258    mov qword ptr [rbp-0xa8], 0x0            48 c7 85 58 ff ff ff 00 00 00 00
[I]      3226  0x555555567263    mov eax, dword ptr [rbp-0x7c]            8b 45 84
[I]      3227  0x555555567266    cmp eax, 0xa                             83 f8 0a
[I]      3228  0x555555567269    jnbe 0x55555555749c                      0f 87 2d 02 ff ff
[B]      3229  0x55555556726f loc_55555556726f: // size=17 thread=0x100000000
[I]      3229  0x55555556726f    lea rsi, ptr [rip+0xaae2]                48 8d 35 e2 aa 00 00
[I]      3230  0x555555567276    movsxd rax, dword ptr [rsi+rax*4]        48 63 04 86
[I]      3231  0x55555556727a    add rax, rsi                             48 01 f0
[I]      3232  0x55555556727d    notrack jmp rax                          3e ff e0
[B]      3233  0x555555567a7f loc_555555567a7f: // size=71 thread=0x100000000
[I]      3233  0x555555567a7f    mov byte ptr [rbp-0x62], 0x0             c6 45 9e 00
[I]      3234  0x555555567a83    mov byte ptr [rbp-0x66], 0x1             c6 45 9a 01
[I]      3235  0x555555567a87    mov byte ptr [rbp-0x67], 0x1             c6 45 99 01
[I]      3236  0x555555567a8b    mov byte ptr [rbp-0x64], 0x1             c6 45 9c 01
[I]      3237  0x555555567a8f    mov byte ptr [rbp-0x7d], 0x0             c6 45 83 00
[I]      3238  0x555555567a93    mov byte ptr [rbp-0x9d], 0x0             c6 85 63 ff ff ff 00
[I]      3239  0x555555567a9a    mov byte ptr [rbp-0x61], 0x1             c6 45 9f 01
[I]      3240  0x555555567a9e    mov byte ptr [rbp-0x65], 0x1             c6 45 9b 01
[I]      3241  0x555555567aa2    lea rax, ptr [rip+0x78e7]                48 8d 05 e7 78 00 00
[I]      3242  0x555555567aa9    mov qword ptr [rbp-0x78], 0x1            48 c7 45 88 01 00 00 00
[I]      3243  0x555555567ab1    xor ebx, ebx                             31 db
[I]      3244  0x555555567ab3    mov qword ptr [rbp-0x98], rax            48 89 85 68 ff ff ff
[I]      3245  0x555555567aba    mov dword ptr [rbp-0x7c], 0x2            c7 45 84 02 00 00 00
[I]      3246  0x555555567ac1    jmp 0x555555567350                       e9 8a f8 ff ff
[B]      3247  0x555555567350 loc_555555567350: // size=26 thread=0x100000000
[I]      3247  0x555555567350    xor r12d, r12d                           45 31 e4
[I]      3248  0x555555567353    xor r13d, r13d                           45 31 ed
[I]      3249  0x555555567356    mov r11d, r12d                           45 89 e3
[I]      3250  0x555555567359    cmp r13, r8                              4d 39 c5
[I]      3251  0x55555556735c    setnz r12b                               41 0f 95 c4
[I]      3252  0x555555567360    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3253  0x555555567364    jz 0x555555567484                        0f 84 1a 01 00 00
[B]      3254  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3254  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3255  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3256  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3257  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3258  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3259  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3260  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3260  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3261  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3262  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3263  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3264  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3264  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3265  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3266  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3267  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3267  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3268  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3269  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3269  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3270  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3271  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3271  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3272  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3273  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3274  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3275  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3276  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3277  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3277  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3278  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3279  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3279  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3280  0x555555568194    test sil, sil                            40 84 f6
[I]      3281  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3282  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3282  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3283  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3284  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3284  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3285  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3286  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3287  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3287  0x55555556764d    mov eax, edx                             89 d0
[I]      3288  0x55555556764f    mov ecx, edx                             89 d1
[I]      3289  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3290  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3291  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3292  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3293  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3294  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3295  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3295  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3296  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3297  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3298  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3299  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3299  0x555555567585    xor eax, eax                             31 c0
[I]      3300  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3301  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3302  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3302  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3303  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3304  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3305  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3306  0x55555556759f    test al, al                              84 c0
[I]      3307  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3308  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3308  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3309  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3310  0x55555556746b loc_55555556746b: // size=25 thread=0x100000000
[I]      3310  0x55555556746b    mov byte ptr [r15+rbx*1], r9b            45 88 0c 1f
[I]      3311  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3312  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3313  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3314  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3315  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3316  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3316  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3317  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3318  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3319  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3320  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3321  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3322  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3322  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3323  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3324  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3325  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3326  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3326  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3327  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3328  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3329  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3329  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3330  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3331  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3331  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3332  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3333  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3333  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3334  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3335  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3336  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3337  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3338  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3339  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3339  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3340  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3341  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3341  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3342  0x555555568194    test sil, sil                            40 84 f6
[I]      3343  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3344  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3344  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3345  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3346  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3346  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3347  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3348  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3349  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3349  0x55555556764d    mov eax, edx                             89 d0
[I]      3350  0x55555556764f    mov ecx, edx                             89 d1
[I]      3351  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3352  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3353  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3354  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3355  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3356  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3357  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3357  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3358  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3359  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3360  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3361  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3361  0x555555567585    xor eax, eax                             31 c0
[I]      3362  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3363  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3364  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3364  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3365  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3366  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3367  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3368  0x55555556759f    test al, al                              84 c0
[I]      3369  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3370  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3370  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3371  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3372  0x55555556746b loc_55555556746b: // size=25 thread=0x100000000
[I]      3372  0x55555556746b    mov byte ptr [r15+rbx*1], r9b            45 88 0c 1f
[I]      3373  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3374  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3375  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3376  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3377  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3378  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3378  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3379  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3380  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3381  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3382  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3383  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3384  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3384  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3385  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3386  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3387  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3388  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3388  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3389  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3390  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3391  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3391  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3392  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3393  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3393  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3394  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3395  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3395  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3396  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3397  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3398  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3399  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3400  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3401  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3401  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3402  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3403  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3403  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3404  0x555555568194    test sil, sil                            40 84 f6
[I]      3405  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3406  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3406  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3407  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3408  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3408  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3409  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3410  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3411  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3411  0x55555556764d    mov eax, edx                             89 d0
[I]      3412  0x55555556764f    mov ecx, edx                             89 d1
[I]      3413  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3414  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3415  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3416  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3417  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3418  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3419  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3419  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3420  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3421  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3422  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3423  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3423  0x555555567585    xor eax, eax                             31 c0
[I]      3424  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3425  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3426  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3426  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3427  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3428  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3429  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3430  0x55555556759f    test al, al                              84 c0
[I]      3431  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3432  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3432  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3433  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3434  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3434  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3435  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3436  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3437  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3438  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3439  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3439  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3440  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3441  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3442  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3443  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3444  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3445  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3445  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3446  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3447  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3448  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3449  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3449  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3450  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3451  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3452  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3452  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3453  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3454  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3454  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3455  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3456  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3456  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3457  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3458  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3459  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3460  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3461  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3462  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3462  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3463  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3464  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3464  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3465  0x555555568194    test sil, sil                            40 84 f6
[I]      3466  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3467  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3467  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3468  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3469  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3469  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3470  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3471  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3472  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3472  0x55555556764d    mov eax, edx                             89 d0
[I]      3473  0x55555556764f    mov ecx, edx                             89 d1
[I]      3474  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3475  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3476  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3477  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3478  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3479  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3480  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3480  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3481  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3482  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3483  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3484  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3484  0x555555567585    xor eax, eax                             31 c0
[I]      3485  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3486  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3487  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3487  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3488  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3489  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3490  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3491  0x55555556759f    test al, al                              84 c0
[I]      3492  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3493  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3493  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3494  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3495  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3495  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3496  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3497  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3498  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3499  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3500  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3500  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3501  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3502  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3503  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3504  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3505  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3506  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3506  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3507  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3508  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3509  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3510  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3510  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3511  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3512  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3513  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3513  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3514  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3515  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3515  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3516  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3517  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3517  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3518  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3519  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3520  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3521  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3522  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3523  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3523  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3524  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3525  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3525  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3526  0x555555568194    test sil, sil                            40 84 f6
[I]      3527  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3528  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3528  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3529  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3530  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3530  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3531  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3532  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3533  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3533  0x55555556764d    mov eax, edx                             89 d0
[I]      3534  0x55555556764f    mov ecx, edx                             89 d1
[I]      3535  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3536  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3537  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3538  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3539  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3540  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3541  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3541  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3542  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3543  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3544  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3545  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3545  0x555555567585    xor eax, eax                             31 c0
[I]      3546  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3547  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3548  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3548  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3549  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3550  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3551  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3552  0x55555556759f    test al, al                              84 c0
[I]      3553  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3554  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3554  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3555  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3556  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3556  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3557  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3558  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3559  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3560  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3561  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3561  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3562  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3563  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3564  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3565  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3566  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3567  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3567  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3568  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3569  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3570  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3571  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3571  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3572  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3573  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3574  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3574  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3575  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3576  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3576  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3577  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3578  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3578  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3579  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3580  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3581  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3582  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3583  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3584  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3584  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3585  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3586  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3586  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3587  0x555555568194    test sil, sil                            40 84 f6
[I]      3588  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3589  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3589  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3590  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3591  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3591  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3592  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3593  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3594  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3594  0x55555556764d    mov eax, edx                             89 d0
[I]      3595  0x55555556764f    mov ecx, edx                             89 d1
[I]      3596  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3597  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3598  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3599  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3600  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3601  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3602  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3602  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3603  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3604  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3605  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3606  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3606  0x555555567585    xor eax, eax                             31 c0
[I]      3607  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3608  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3609  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3609  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3610  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3611  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3612  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3613  0x55555556759f    test al, al                              84 c0
[I]      3614  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3615  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3615  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3616  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3617  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3617  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3618  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3619  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3620  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3621  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3622  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3622  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3623  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3624  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3625  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3626  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3627  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3628  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3628  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3629  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3630  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3631  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3632  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3632  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3633  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3634  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3635  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3635  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3636  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3637  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3637  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3638  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3639  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3639  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3640  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3641  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3642  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3643  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3644  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3645  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3645  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3646  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3647  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3647  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3648  0x555555568194    test sil, sil                            40 84 f6
[I]      3649  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3650  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3650  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3651  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3652  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3652  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3653  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3654  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3655  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3655  0x55555556764d    mov eax, edx                             89 d0
[I]      3656  0x55555556764f    mov ecx, edx                             89 d1
[I]      3657  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3658  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3659  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3660  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3661  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3662  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3663  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3663  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3664  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3665  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3666  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3667  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3667  0x555555567585    xor eax, eax                             31 c0
[I]      3668  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3669  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3670  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3670  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3671  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3672  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3673  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3674  0x55555556759f    test al, al                              84 c0
[I]      3675  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3676  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3676  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3677  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3678  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3678  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3679  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3680  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3681  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3682  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3683  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3683  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3684  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3685  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3686  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3687  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3688  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3689  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3689  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3690  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3691  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3692  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3693  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3693  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3694  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3695  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3696  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3696  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3697  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3698  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3698  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3699  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3700  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3700  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3701  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3702  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3703  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3704  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3705  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3706  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3706  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3707  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3708  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3708  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3709  0x555555568194    test sil, sil                            40 84 f6
[I]      3710  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3711  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3711  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3712  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3713  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3713  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3714  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3715  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3716  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3716  0x55555556764d    mov eax, edx                             89 d0
[I]      3717  0x55555556764f    mov ecx, edx                             89 d1
[I]      3718  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3719  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3720  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3721  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3722  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3723  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3724  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3724  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3725  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3726  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3727  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3728  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3728  0x555555567585    xor eax, eax                             31 c0
[I]      3729  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3730  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3731  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3731  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3732  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3733  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3734  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3735  0x55555556759f    test al, al                              84 c0
[I]      3736  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3737  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3737  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3738  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3739  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3739  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3740  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3741  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3742  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3743  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3744  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3744  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3745  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3746  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3747  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3748  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3749  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3750  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3750  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3751  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3752  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3753  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3754  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3754  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3755  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3756  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3757  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3757  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3758  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3759  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3759  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3760  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3761  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3761  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3762  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3763  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3764  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3765  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3766  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3767  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3767  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3768  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3769  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3769  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3770  0x555555568194    test sil, sil                            40 84 f6
[I]      3771  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3772  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3772  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3773  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3774  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3774  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3775  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3776  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3777  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3777  0x55555556764d    mov eax, edx                             89 d0
[I]      3778  0x55555556764f    mov ecx, edx                             89 d1
[I]      3779  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3780  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3781  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3782  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3783  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3784  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3785  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3785  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3786  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3787  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3788  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3789  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3789  0x555555567585    xor eax, eax                             31 c0
[I]      3790  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3791  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3792  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3792  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3793  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3794  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3795  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3796  0x55555556759f    test al, al                              84 c0
[I]      3797  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3798  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3798  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3799  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3800  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3800  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3801  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3802  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3803  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3804  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3805  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3805  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3806  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3807  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3808  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3809  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3810  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3811  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3811  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3812  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3813  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3814  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3815  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3815  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3816  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3817  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3818  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3818  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3819  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3820  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3820  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3821  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3822  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3822  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3823  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3824  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3825  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3826  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3827  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3828  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3828  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3829  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3830  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3830  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3831  0x555555568194    test sil, sil                            40 84 f6
[I]      3832  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3833  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3833  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3834  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3835  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3835  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3836  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3837  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3838  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3838  0x55555556764d    mov eax, edx                             89 d0
[I]      3839  0x55555556764f    mov ecx, edx                             89 d1
[I]      3840  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3841  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3842  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3843  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3844  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3845  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3846  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3846  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3847  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3848  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3849  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3850  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3850  0x555555567585    xor eax, eax                             31 c0
[I]      3851  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3852  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3853  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3853  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3854  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3855  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3856  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3857  0x55555556759f    test al, al                              84 c0
[I]      3858  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3859  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3859  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3860  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3861  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3861  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3862  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3863  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3864  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3865  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3866  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3866  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3867  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3868  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3869  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3870  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3871  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3872  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3872  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3873  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3874  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3875  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3876  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3876  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3877  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3878  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3879  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3879  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3880  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3881  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3881  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3882  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3883  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3883  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3884  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3885  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3886  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3887  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3888  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3889  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3889  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3890  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3891  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3891  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3892  0x555555568194    test sil, sil                            40 84 f6
[I]      3893  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3894  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3894  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3895  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3896  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3896  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3897  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3898  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3899  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3899  0x55555556764d    mov eax, edx                             89 d0
[I]      3900  0x55555556764f    mov ecx, edx                             89 d1
[I]      3901  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3902  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3903  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3904  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3905  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3906  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3907  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3907  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3908  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3909  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3910  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3911  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3911  0x555555567585    xor eax, eax                             31 c0
[I]      3912  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3913  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3914  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3914  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3915  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3916  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3917  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3918  0x55555556759f    test al, al                              84 c0
[I]      3919  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3920  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3920  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3921  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3922  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3922  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3923  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3924  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3925  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3926  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3927  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3927  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3928  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3929  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3930  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3931  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3932  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3933  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3933  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3934  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3935  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3936  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3937  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3937  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3938  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      3939  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      3940  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      3940  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      3941  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      3942  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      3942  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      3943  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      3944  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      3944  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      3945  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      3946  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      3947  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      3948  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      3949  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      3950  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      3950  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      3951  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      3952  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      3952  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      3953  0x555555568194    test sil, sil                            40 84 f6
[I]      3954  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      3955  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      3955  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      3956  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      3957  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      3957  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      3958  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      3959  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      3960  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      3960  0x55555556764d    mov eax, edx                             89 d0
[I]      3961  0x55555556764f    mov ecx, edx                             89 d1
[I]      3962  0x555555567651    mov r9d, edx                             41 89 d1
[I]      3963  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      3964  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      3965  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      3966  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      3967  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      3968  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      3968  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      3969  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      3970  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      3971  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      3972  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      3972  0x555555567585    xor eax, eax                             31 c0
[I]      3973  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      3974  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      3975  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      3975  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      3976  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      3977  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      3978  0x55555556759c    and eax, r11d                            44 21 d8
[I]      3979  0x55555556759f    test al, al                              84 c0
[I]      3980  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      3981  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      3981  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      3982  0x555555567469    jnb 0x55555556746f                       73 04
[B]      3983  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      3983  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      3984  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      3985  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      3986  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      3987  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      3988  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      3988  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3989  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      3990  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      3991  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      3992  0x555555567498    test r12b, r12b                          45 84 e4
[I]      3993  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      3994  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      3994  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      3995  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      3996  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      3997  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      3998  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      3998  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      3999  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      4000  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      4001  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      4001  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      4002  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      4003  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      4003  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      4004  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      4005  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      4005  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      4006  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      4007  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      4008  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      4009  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      4010  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      4011  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      4011  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      4012  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      4013  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      4013  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      4014  0x555555568194    test sil, sil                            40 84 f6
[I]      4015  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      4016  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      4016  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      4017  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      4018  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      4018  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      4019  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      4020  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      4021  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      4021  0x55555556764d    mov eax, edx                             89 d0
[I]      4022  0x55555556764f    mov ecx, edx                             89 d1
[I]      4023  0x555555567651    mov r9d, edx                             41 89 d1
[I]      4024  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      4025  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      4026  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      4027  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      4028  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      4029  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      4029  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      4030  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      4031  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      4032  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      4033  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      4033  0x555555567585    xor eax, eax                             31 c0
[I]      4034  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      4035  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      4036  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      4036  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      4037  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      4038  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      4039  0x55555556759c    and eax, r11d                            44 21 d8
[I]      4040  0x55555556759f    test al, al                              84 c0
[I]      4041  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      4042  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      4042  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      4043  0x555555567469    jnb 0x55555556746f                       73 04
[B]      4044  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      4044  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      4045  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      4046  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      4047  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      4048  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      4049  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      4049  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4050  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      4051  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      4052  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      4053  0x555555567498    test r12b, r12b                          45 84 e4
[I]      4054  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      4055  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      4055  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4056  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      4057  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      4058  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      4059  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      4059  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      4060  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      4061  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      4062  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      4062  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      4063  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      4064  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      4064  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      4065  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      4066  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      4066  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      4067  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      4068  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      4069  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      4070  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      4071  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      4072  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      4072  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      4073  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      4074  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      4074  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      4075  0x555555568194    test sil, sil                            40 84 f6
[I]      4076  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      4077  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      4077  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      4078  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      4079  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      4079  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      4080  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      4081  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      4082  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      4082  0x55555556764d    mov eax, edx                             89 d0
[I]      4083  0x55555556764f    mov ecx, edx                             89 d1
[I]      4084  0x555555567651    mov r9d, edx                             41 89 d1
[I]      4085  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      4086  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      4087  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      4088  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      4089  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      4090  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      4090  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      4091  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      4092  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      4093  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      4094  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      4094  0x555555567585    xor eax, eax                             31 c0
[I]      4095  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      4096  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      4097  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      4097  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      4098  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      4099  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      4100  0x55555556759c    and eax, r11d                            44 21 d8
[I]      4101  0x55555556759f    test al, al                              84 c0
[I]      4102  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      4103  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      4103  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      4104  0x555555567469    jnb 0x55555556746f                       73 04
[B]      4105  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      4105  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      4106  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      4107  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      4108  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      4109  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      4110  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      4110  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4111  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      4112  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      4113  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      4114  0x555555567498    test r12b, r12b                          45 84 e4
[I]      4115  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      4116  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      4116  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4117  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      4118  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      4119  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      4120  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      4120  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      4121  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      4122  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      4123  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      4123  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      4124  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      4125  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      4125  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      4126  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      4127  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      4127  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      4128  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      4129  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      4130  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      4131  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      4132  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      4133  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      4133  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      4134  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      4135  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      4135  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      4136  0x555555568194    test sil, sil                            40 84 f6
[I]      4137  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      4138  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      4138  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      4139  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      4140  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      4140  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      4141  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      4142  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      4143  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      4143  0x55555556764d    mov eax, edx                             89 d0
[I]      4144  0x55555556764f    mov ecx, edx                             89 d1
[I]      4145  0x555555567651    mov r9d, edx                             41 89 d1
[I]      4146  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      4147  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      4148  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      4149  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      4150  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      4151  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      4151  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      4152  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      4153  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      4154  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      4155  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      4155  0x555555567585    xor eax, eax                             31 c0
[I]      4156  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      4157  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      4158  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      4158  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      4159  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      4160  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      4161  0x55555556759c    and eax, r11d                            44 21 d8
[I]      4162  0x55555556759f    test al, al                              84 c0
[I]      4163  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      4164  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      4164  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      4165  0x555555567469    jnb 0x55555556746f                       73 04
[B]      4166  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      4166  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      4167  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      4168  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      4169  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      4170  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      4171  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      4171  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4172  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      4173  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      4174  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      4175  0x555555567498    test r12b, r12b                          45 84 e4
[I]      4176  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      4177  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      4177  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4178  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      4179  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      4180  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      4181  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      4181  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      4182  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      4183  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      4184  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      4184  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      4185  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      4186  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      4186  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      4187  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      4188  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      4188  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      4189  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      4190  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      4191  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      4192  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      4193  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      4194  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      4194  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      4195  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      4196  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      4196  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      4197  0x555555568194    test sil, sil                            40 84 f6
[I]      4198  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      4199  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      4199  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      4200  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      4201  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      4201  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      4202  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      4203  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      4204  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      4204  0x55555556764d    mov eax, edx                             89 d0
[I]      4205  0x55555556764f    mov ecx, edx                             89 d1
[I]      4206  0x555555567651    mov r9d, edx                             41 89 d1
[I]      4207  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      4208  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      4209  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      4210  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      4211  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      4212  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      4212  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      4213  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      4214  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      4215  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      4216  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      4216  0x555555567585    xor eax, eax                             31 c0
[I]      4217  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      4218  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      4219  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      4219  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      4220  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      4221  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      4222  0x55555556759c    and eax, r11d                            44 21 d8
[I]      4223  0x55555556759f    test al, al                              84 c0
[I]      4224  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      4225  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      4225  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      4226  0x555555567469    jnb 0x55555556746f                       73 04
[B]      4227  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      4227  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      4228  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      4229  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      4230  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      4231  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      4232  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      4232  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4233  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      4234  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      4235  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      4236  0x555555567498    test r12b, r12b                          45 84 e4
[I]      4237  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      4238  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      4238  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4239  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      4240  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      4241  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      4242  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      4242  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      4243  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      4244  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      4245  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      4245  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      4246  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      4247  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      4247  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      4248  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      4249  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      4249  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      4250  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      4251  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      4252  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      4253  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      4254  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      4255  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      4255  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      4256  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      4257  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      4257  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      4258  0x555555568194    test sil, sil                            40 84 f6
[I]      4259  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      4260  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      4260  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      4261  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      4262  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      4262  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      4263  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      4264  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      4265  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      4265  0x55555556764d    mov eax, edx                             89 d0
[I]      4266  0x55555556764f    mov ecx, edx                             89 d1
[I]      4267  0x555555567651    mov r9d, edx                             41 89 d1
[I]      4268  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      4269  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      4270  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      4271  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      4272  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      4273  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      4273  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      4274  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      4275  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      4276  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      4277  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      4277  0x555555567585    xor eax, eax                             31 c0
[I]      4278  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      4279  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      4280  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      4280  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      4281  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      4282  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      4283  0x55555556759c    and eax, r11d                            44 21 d8
[I]      4284  0x55555556759f    test al, al                              84 c0
[I]      4285  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      4286  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      4286  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      4287  0x555555567469    jnb 0x55555556746f                       73 04
[B]      4288  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      4288  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      4289  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      4290  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      4291  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      4292  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      4293  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      4293  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4294  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      4295  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      4296  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      4297  0x555555567498    test r12b, r12b                          45 84 e4
[I]      4298  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      4299  0x555555567379 loc_555555567379: // size=18 thread=0x100000000
[I]      4299  0x555555567379    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4300  0x55555556737d    cmp byte ptr [rbp-0x62], 0x0             80 7d 9e 00
[I]      4301  0x555555567381    lea r10, ptr [rax+r13*1]                 4e 8d 14 28
[I]      4302  0x555555567385    jnz 0x555555567af0                       0f 85 65 07 00 00
[B]      4303  0x55555556738b loc_55555556738b: // size=14 thread=0x100000000
[I]      4303  0x55555556738b    movzx r9d, byte ptr [r10]                45 0f b6 0a
[I]      4304  0x55555556738f    cmp r9b, 0x3f                            41 80 f9 3f
[I]      4305  0x555555567393    jnle 0x555555567e60                      0f 8f c7 0a 00 00
[B]      4306  0x555555567e60 loc_555555567e60: // size=10 thread=0x100000000
[I]      4306  0x555555567e60    cmp r9b, 0x7a                            41 80 f9 7a
[I]      4307  0x555555567e64    jnle 0x555555568028                      0f 8f be 01 00 00
[B]      4308  0x555555567e6a loc_555555567e6a: // size=10 thread=0x100000000
[I]      4308  0x555555567e6a    cmp r9b, 0x40                            41 80 f9 40
[I]      4309  0x555555567e6e    jz 0x555555567500                        0f 84 8c f6 ff ff
[B]      4310  0x555555567e74 loc_555555567e74: // size=31 thread=0x100000000
[I]      4310  0x555555567e74    lea ecx, ptr [r9-0x41]                   41 8d 49 bf
[I]      4311  0x555555567e78    mov eax, 0x1                             b8 01 00 00 00
[I]      4312  0x555555567e7d    mov rsi, 0x3ffffff53ffffff               48 be ff ff ff 53 ff ff ff 03
[I]      4313  0x555555567e87    shl rax, cl                              48 d3 e0
[I]      4314  0x555555567e8a    test rax, rsi                            48 85 f0
[I]      4315  0x555555567e8d    jnz 0x5555555673c8                       0f 85 35 f5 ff ff
[B]      4316  0x5555555673c8 loc_5555555673c8: // size=10 thread=0x100000000
[I]      4316  0x5555555673c8    cmp byte ptr [rbp-0x66], 0x0             80 7d 9a 00
[I]      4317  0x5555555673cc    jnz 0x555555568190                       0f 85 be 0d 00 00
[B]      4318  0x555555568190 loc_555555568190: // size=13 thread=0x100000000
[I]      4318  0x555555568190    movzx esi, byte ptr [rbp-0x61]           0f b6 75 9f
[I]      4319  0x555555568194    test sil, sil                            40 84 f6
[I]      4320  0x555555568197    jz 0x5555555684b8                        0f 84 1b 03 00 00
[B]      4321  0x55555556819d loc_55555556819d: // size=7 thread=0x100000000
[I]      4321  0x55555556819d    cmp qword ptr [rbp-0x70], 0x0            48 83 7d 90 00
[I]      4322  0x5555555681a2    jz 0x55555556816e                        74 ca
[B]      4323  0x5555555681a4 loc_5555555681a4: // size=12 thread=0x100000000
[I]      4323  0x5555555681a4    mov byte ptr [rbp-0x60], 0x0             c6 45 a0 00
[I]      4324  0x5555555681a8    mov edx, r9d                             44 89 ca
[I]      4325  0x5555555681ab    jmp 0x55555556764d                       e9 9d f4 ff ff
[B]      4326  0x55555556764d loc_55555556764d: // size=25 thread=0x100000000
[I]      4326  0x55555556764d    mov eax, edx                             89 d0
[I]      4327  0x55555556764f    mov ecx, edx                             89 d1
[I]      4328  0x555555567651    mov r9d, edx                             41 89 d1
[I]      4329  0x555555567654    shr al, 0x5                              c0 e8 05
[I]      4330  0x555555567657    and ecx, 0x1f                            83 e1 1f
[I]      4331  0x55555556765a    movzx eax, al                            0f b6 c0
[I]      4332  0x55555556765d    shl rax, 0x2                             48 c1 e0 02
[I]      4333  0x555555567661    jmp 0x5555555673f7                       e9 91 fd ff ff
[B]      4334  0x5555555673f7 loc_5555555673f7: // size=16 thread=0x100000000
[I]      4334  0x5555555673f7    mov rdi, qword ptr [rbp-0x70]            48 8b 7d 90
[I]      4335  0x5555555673fb    mov eax, dword ptr [rdi+rax*1]           8b 04 07
[I]      4336  0x5555555673fe    bt eax, ecx                              0f a3 c8
[I]      4337  0x555555567401    jnb 0x555555567585                       0f 83 7e 01 00 00
[B]      4338  0x555555567585 loc_555555567585: // size=12 thread=0x100000000
[I]      4338  0x555555567585    xor eax, eax                             31 c0
[I]      4339  0x555555567587    cmp byte ptr [rbp-0x60], 0x0             80 7d a0 00
[I]      4340  0x55555556758b    jnz 0x555555567407                       0f 85 76 fe ff ff
[B]      4341  0x555555567591 loc_555555567591: // size=22 thread=0x100000000
[I]      4341  0x555555567591    and byte ptr [rbp-0x63], sil             40 20 75 9d
[I]      4342  0x555555567595    xor eax, 0x1                             83 f0 01
[I]      4343  0x555555567598    add r13, 0x1                             49 83 c5 01
[I]      4344  0x55555556759c    and eax, r11d                            44 21 d8
[I]      4345  0x55555556759f    test al, al                              84 c0
[I]      4346  0x5555555675a1    jz 0x555555567466                        0f 84 bf fe ff ff
[B]      4347  0x555555567466 loc_555555567466: // size=5 thread=0x100000000
[I]      4347  0x555555567466    cmp rbx, r14                             4c 39 f3
[I]      4348  0x555555567469    jnb 0x55555556746f                       73 04
[B]      4349  0x55555556746f loc_55555556746f: // size=21 thread=0x100000000
[I]      4349  0x55555556746f    add rbx, 0x1                             48 83 c3 01
[I]      4350  0x555555567473    cmp r13, r8                              4d 39 c5
[I]      4351  0x555555567476    setnz r12b                               41 0f 95 c4
[I]      4352  0x55555556747a    cmp r8, 0xffffffffffffffff               49 83 f8 ff
[I]      4353  0x55555556747e    jnz 0x555555567370                       0f 85 ec fe ff ff
[B]      4354  0x555555567484 loc_555555567484: // size=29 thread=0x100000000
[I]      4354  0x555555567484    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      4355  0x555555567488    mov r8, 0xffffffffffffffff               49 c7 c0 ff ff ff ff
[I]      4356  0x55555556748f    cmp byte ptr [rax+r13*1], 0x0            42 80 3c 28 00
[I]      4357  0x555555567494    setnz r12b                               41 0f 95 c4
[I]      4358  0x555555567498    test r12b, r12b                          45 84 e4
[I]      4359  0x55555556749b    jnz 0x555555567379                       0f 85 d8 fe ff ff
[B]      4360  0x5555555674a1 loc_5555555674a1: // size=9 thread=0x100000000
[I]      4360  0x5555555674a1    test rbx, rbx                            48 85 db
[I]      4361  0x5555555674a4    jnz 0x5555555684d0                       0f 85 26 10 00 00
[B]      4362  0x5555555684d0 loc_5555555684d0: // size=8 thread=0x100000000
[I]      4362  0x5555555684d0    movzx eax, byte ptr [rbp-0x61]           0f b6 45 9f
[I]      4363  0x5555555684d4    xor al, 0x1                              34 01
[I]      4364  0x5555555684d6    jz 0x5555555684e2                        74 0a
[B]      4365  0x5555555684e2 loc_5555555684e2: // size=21 thread=0x100000000
[I]      4365  0x5555555684e2    mov r10, r15                             4d 89 fa
[I]      4366  0x5555555684e5    mov r11, rbx                             49 89 db
[I]      4367  0x5555555684e8    mov r15, r14                             4d 89 f7
[I]      4368  0x5555555684eb    mov rdi, qword ptr [rbp-0x98]            48 8b bd 68 ff ff ff
[I]      4369  0x5555555684f2    test rdi, rdi                            48 85 ff
[I]      4370  0x5555555684f5    jz 0x555555568523                        74 2c
[B]      4371  0x5555555684f7 loc_5555555684f7: // size=4 thread=0x100000000
[I]      4371  0x5555555684f7    test al, al                              84 c0
[I]      4372  0x5555555684f9    jz 0x555555568523                        74 28
[B]      4373  0x555555568523 loc_555555568523: // size=5 thread=0x100000000
[I]      4373  0x555555568523    cmp r11, r15                             4d 39 fb
[I]      4374  0x555555568526    jnb 0x55555556852d                       73 05
[B]      4375  0x55555556852d loc_55555556852d: // size=19 thread=0x100000000
[I]      4375  0x55555556852d    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      4376  0x555555568531    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      4377  0x55555556853a    jnz 0x555555568ac2                       0f 85 82 05 00 00
[B]      4378  0x555555568540 loc_555555568540: // size=21 thread=0x100000000
[I]      4378  0x555555568540    add rsp, 0xb8                            48 81 c4 b8 00 00 00
[I]      4379  0x555555568547    mov rax, r11                             4c 89 d8
[I]      4380  0x55555556854a    pop rbx                                  5b
[I]      4381  0x55555556854b    pop r12                                  41 5c
[I]      4382  0x55555556854d    pop r13                                  41 5d
[I]      4383  0x55555556854f    pop r14                                  41 5e
[I]      4384  0x555555568551    pop r15                                  41 5f
[I]      4385  0x555555568553    pop rbp                                  5d
[I]      4386  0x555555568554    ret                                      c3
[B]      4387  0x55555555cf21 loc_55555555cf21: // size=16 thread=0x100000000
[I]      4387  0x55555555cf21    mov dword ptr [r13], r14d                45 89 75 00
[I]      4388  0x55555555cf25    movzx esi, byte ptr [rbp-0x2a]           0f b6 75 d6
[I]      4389  0x55555555cf29    pop rdx                                  5a
[I]      4390  0x55555555cf2a    pop rcx                                  59
[I]      4391  0x55555555cf2b    cmp byte ptr [r12], sil                  41 38 34 24
[I]      4392  0x55555555cf2f    jz 0x55555555cf58                        74 27
[B]      4393  0x55555555cf58 loc_55555555cf58: // size=12 thread=0x100000000
[I]      4393  0x55555555cf58    mov rbx, rax                             48 89 c3
[I]      4394  0x55555555cf5b    mov rdi, r12                             4c 89 e7
[C]      4395 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      4395  0x55555555cf5e    call qword ptr [rip+0x19df4]             ff 15 f4 9d 01 00
[B]      4396  0x55555555cf64 loc_55555555cf64: // size=8 thread=0x100000000
[I]      4396  0x55555555cf64    cmp rax, rbx                             48 39 d8
[I]      4397  0x55555555cf67    setnz al                                 0f 95 c0
[I]      4398  0x55555555cf6a    jmp 0x55555555cf36                       eb ca
[B]      4399  0x55555555cf36 loc_55555555cf36: // size=15 thread=0x100000000
[I]      4399  0x55555555cf36    mov rdx, qword ptr [rbp-0x28]            48 8b 55 d8
[I]      4400  0x55555555cf3a    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      4401  0x55555555cf43    jnz 0x55555555cf6c                       75 27
[B]      4402  0x55555555cf45 loc_55555555cf45: // size=13 thread=0x100000000
[I]      4402  0x55555555cf45    lea rsp, ptr [rbp-0x20]                  48 8d 65 e0
[I]      4403  0x55555555cf49    pop rbx                                  5b
[I]      4404  0x55555555cf4a    pop r12                                  41 5c
[I]      4405  0x55555555cf4c    pop r13                                  41 5d
[I]      4406  0x55555555cf4e    pop r14                                  41 5e
[I]      4407  0x55555555cf50    pop rbp                                  5d
[I]      4408  0x55555555cf51    ret                                      c3
[B]      4409  0x555555564c84 loc_555555564c84: // size=18 thread=0x100000000
[I]      4409  0x555555564c84    movzx edx, al                            0f b6 d0
[I]      4410  0x555555564c87    mov dword ptr [r15+0xc4], edx            41 89 97 c4 00 00 00
[I]      4411  0x555555564c8e    test al, al                              84 c0
[I]      4412  0x555555564c90    jz 0x55555556465c                        0f 84 c6 f9 ff ff
[B]      4413  0x55555556465c loc_55555556465c: // size=13 thread=0x100000000
[I]      4413  0x55555556465c    cmp byte ptr [rbp-0x378], 0x0            80 bd 88 fc ff ff 00
[I]      4414  0x555555564663    jz 0x5555555647d0                        0f 84 67 01 00 00
[B]      4415  0x5555555647d0 loc_5555555647d0: // size=13 thread=0x100000000
[I]      4415  0x5555555647d0    cmp byte ptr [rip+0x12f25], 0x0          80 3d 25 2f 01 00 00
[I]      4416  0x5555555647d7    jz 0x555555564898                        0f 84 bb 00 00 00
[B]      4417  0x555555564898 loc_555555564898: // size=13 thread=0x100000000
[I]      4417  0x555555564898    cmp byte ptr [rip+0x12e5c], 0x0          80 3d 5c 2e 01 00 00
[I]      4418  0x55555556489f    jnz 0x555555564970                       0f 85 cb 00 00 00
[B]      4419  0x5555555648a5 loc_5555555648a5: // size=24 thread=0x100000000
[I]      4419  0x5555555648a5    mov r9d, dword ptr [rbp-0x374]           44 8b 8d 8c fc ff ff
[I]      4420  0x5555555648ac    movzx edx, byte ptr [rip+0x12e47]        0f b6 15 47 2e 01 00
[I]      4421  0x5555555648b3    test r9d, r9d                            45 85 c9
[I]      4422  0x5555555648b6    setz al                                  0f 94 c0
[I]      4423  0x5555555648b9    test dl, dl                              84 d2
[I]      4424  0x5555555648bb    jz 0x5555555648c5                        74 08
[B]      4425  0x5555555648c5 loc_5555555648c5: // size=13 thread=0x100000000
[I]      4425  0x5555555648c5    cmp dword ptr [rbp-0x374], 0x3           83 bd 8c fc ff ff 03
[I]      4426  0x5555555648cc    jz 0x555555565818                        0f 84 46 0f 00 00
[B]      4427  0x555555565818 loc_555555565818: // size=13 thread=0x100000000
[I]      4427  0x555555565818    cmp byte ptr [rip+0x11b01], 0x0          80 3d 01 1b 01 00 00
[I]      4428  0x55555556581f    jz 0x5555555648da                        0f 84 b5 f0 ff ff
[B]      4429  0x5555555648da loc_5555555648da: // size=11 thread=0x100000000
[I]      4429  0x5555555648da    movzx ecx, byte ptr [rip+0x12a48]        0f b6 0d 48 2a 01 00
[I]      4430  0x5555555648e1    test cl, cl                              84 c9
[I]      4431  0x5555555648e3    jnz 0x555555564956                       75 71
[B]      4432  0x5555555648e5 loc_5555555648e5: // size=8 thread=0x100000000
[I]      4432  0x5555555648e5    test dl, dl                              84 d2
[I]      4433  0x5555555648e7    jz 0x555555565de9                        0f 84 fc 14 00 00
[B]      4434  0x555555565de9 loc_555555565de9: // size=13 thread=0x100000000
[I]      4434  0x555555565de9    cmp dword ptr [rbp-0x374], 0x5           83 bd 8c fc ff ff 05
[I]      4435  0x555555565df0    jz 0x555555565eae                        0f 84 b8 00 00 00
[B]      4436  0x555555565df6 loc_555555565df6: // size=8 thread=0x100000000
[I]      4436  0x555555565df6    test al, al                              84 c0
[I]      4437  0x555555565df8    jnz 0x555555565eae                       0f 85 b0 00 00 00
[B]      4438  0x555555565dfe loc_555555565dfe: // size=25 thread=0x100000000
[I]      4438  0x555555565dfe    movzx ecx, byte ptr [rip+0x11513]        0f b6 0d 13 15 01 00
[I]      4439  0x555555565e05    movzx eax, byte ptr [rip+0x118ed]        0f b6 05 ed 18 01 00
[I]      4440  0x555555565e0c    mov esi, ecx                             89 ce
[I]      4441  0x555555565e0e    or sil, al                               40 08 c6
[I]      4442  0x555555565e11    jnz 0x5555555660a2                       0f 85 8b 02 00 00
[B]      4443  0x555555565e17 loc_555555565e17: // size=24 thread=0x100000000
[I]      4443  0x555555565e17    cmp dword ptr [rip+0x11966], 0x4         83 3d 66 19 01 00 04
[I]      4444  0x555555565e1e    mov r12, qword ptr [rbp-0x390]           4c 8b a5 70 fc ff ff
[I]      4445  0x555555565e25    setz dl                                  0f 94 c2
[I]      4446  0x555555565e28    xor ecx, ecx                             31 c9
[I]      4447  0x555555565e2a    jmp 0x5555555647ac                       e9 7d e9 ff ff
[B]      4448  0x5555555647ac loc_5555555647ac: // size=35 thread=0x100000000
[I]      4448  0x5555555647ac    mov ebx, dword ptr [rbp-0x374]           8b 9d 8c fc ff ff
[I]      4449  0x5555555647b2    cmp ebx, 0x5                             83 fb 05
[I]      4450  0x5555555647b5    setz al                                  0f 94 c0
[I]      4451  0x5555555647b8    and eax, esi                             21 f0
[I]      4452  0x5555555647ba    cmp ebx, 0x6                             83 fb 06
[I]      4453  0x5555555647bd    mov byte ptr [rbp-0x391], al             88 85 6f fc ff ff
[I]      4454  0x5555555647c3    setz byte ptr [rbp-0x393]                0f 94 85 6d fc ff ff
[I]      4455  0x5555555647ca    jmp 0x555555564a59                       e9 8a 02 00 00
[B]      4456  0x555555564a59 loc_555555564a59: // size=36 thread=0x100000000
[I]      4456  0x555555564a59    mov r8d, dword ptr [rip+0x128c4]         44 8b 05 c4 28 01 00
[I]      4457  0x555555564a60    movzx ebx, byte ptr [rbp-0x391]          0f b6 9d 6f fc ff ff
[I]      4458  0x555555564a67    test r8d, r8d                            45 85 c0
[I]      4459  0x555555564a6a    setz al                                  0f 94 c0
[I]      4460  0x555555564a6d    or eax, ecx                              09 c8
[I]      4461  0x555555564a6f    or bl, al                                08 c3
[I]      4462  0x555555564a71    mov byte ptr [rbp-0x392], bl             88 9d 6e fc ff ff
[I]      4463  0x555555564a77    jz 0x555555564ca8                        0f 84 2b 02 00 00
[B]      4464  0x555555564ca8 loc_555555564ca8: // size=13 thread=0x100000000
[I]      4464  0x555555564ca8    cmp byte ptr [rip+0x12ada], 0x0          80 3d da 2a 01 00 00
[I]      4465  0x555555564caf    jz 0x555555564da8                        0f 84 f3 00 00 00
[B]      4466  0x555555564da8 loc_555555564da8: // size=17 thread=0x100000000
[I]      4466  0x555555564da8    mov rbx, qword ptr [r15+0x58]            49 8b 5f 58
[I]      4467  0x555555564dac    cmp byte ptr [rip+0x12575], 0x0          80 3d 75 25 01 00 00
[I]      4468  0x555555564db3    jnz 0x555555564ee7                       0f 85 2e 01 00 00
[B]      4469  0x555555564db9 loc_555555564db9: // size=9 thread=0x100000000
[I]      4469  0x555555564db9    cmp byte ptr [rip+0x12558], 0x0          80 3d 58 25 01 00 00
[I]      4470  0x555555564dc0    jz 0x555555564deb                        74 29
[B]      4471  0x555555564deb loc_555555564deb: // size=13 thread=0x100000000
[I]      4471  0x555555564deb    cmp byte ptr [rip+0x12537], 0x0          80 3d 37 25 01 00 00
[I]      4472  0x555555564df2    jnz 0x555555565170                       0f 85 78 03 00 00
[B]      4473  0x555555564df8 loc_555555564df8: // size=12 thread=0x100000000
[I]      4473  0x555555564df8    mov rdi, qword ptr [rbp-0x390]           48 8b bd 70 fc ff ff
[C]      4474 Calling function 0x5555555640a0(error_at_line)
[I]      4474  0x555555564dff    call 0x5555555640a0                      e8 9c f2 ff ff
[B]      4475  0x5555555640a0 loc_5555555640a0: // size=20 thread=0x100000000
[I]      4475  0x5555555640a0    nop edx, edi                             f3 0f 1e fa
[I]      4476  0x5555555640a4    push rbp                                 55
[I]      4477  0x5555555640a5    mov rbp, rsp                             48 89 e5
[I]      4478  0x5555555640a8    push r12                                 41 54
[I]      4479  0x5555555640aa    mov r12, rdi                             49 89 fc
[I]      4480  0x5555555640ad    push rbx                                 53
[C]      4481 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      4481  0x5555555640ae    call qword ptr [rip+0x12ca4]             ff 15 a4 2c 01 00
[B]      4482  0x5555555640b4 loc_5555555640b4: // size=13 thread=0x100000000
[I]      4482  0x5555555640b4    lea rbx, ptr [rax+0x1]                   48 8d 58 01
[I]      4483  0x5555555640b8    mov rdi, rbx                             48 89 df
[C]      4484 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]      4484  0x5555555640bb    call qword ptr [rip+0x12def]             ff 15 ef 2d 01 00
[B]      4485  0x5555555640c1 loc_5555555640c1: // size=5 thread=0x100000000
[I]      4485  0x5555555640c1    test rax, rax                            48 85 c0
[I]      4486  0x5555555640c4    jz 0x5555555640dc                        74 16
[B]      4487  0x5555555640c6 loc_5555555640c6: // size=22 thread=0x100000000
[I]      4487  0x5555555640c6    mov rcx, rbx                             48 89 d9
[I]      4488  0x5555555640c9    mov rdx, rbx                             48 89 da
[I]      4489  0x5555555640cc    mov rsi, r12                             4c 89 e6
[I]      4490  0x5555555640cf    pop rbx                                  5b
[I]      4491  0x5555555640d0    mov rdi, rax                             48 89 c7
[I]      4492  0x5555555640d3    pop r12                                  41 5c
[I]      4493  0x5555555640d5    pop rbp                                  5d
[I]      4494  0x5555555640d6    jmp qword ptr [rip+0x12d6c]              ff 25 6c 2d 01 00
[B]      4495  0x555555564e04 loc_555555564e04: // size=30 thread=0x100000000
[I]      4495  0x555555564e04    add qword ptr [rip+0x127fc], 0x1         48 83 05 fc 27 01 00 01
[I]      4496  0x555555564e0c    mov qword ptr [r15], rax                 49 89 07
[I]      4497  0x555555564e0f    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      4498  0x555555564e13    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      4499  0x555555564e1c    jnz 0x555555566123                       0f 85 01 13 00 00
[B]      4500  0x555555564e22 loc_555555564e22: // size=18 thread=0x100000000
[I]      4500  0x555555564e22    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      4501  0x555555564e26    mov rax, rbx                             48 89 d8
[I]      4502  0x555555564e29    pop rbx                                  5b
[I]      4503  0x555555564e2a    pop r12                                  41 5c
[I]      4504  0x555555564e2c    pop r13                                  41 5d
[I]      4505  0x555555564e2e    pop r14                                  41 5e
[I]      4506  0x555555564e30    pop r15                                  41 5f
[I]      4507  0x555555564e32    pop rbp                                  5d
[I]      4508  0x555555564e33    ret                                      c3
[B]      4509  0x55555556670a loc_55555556670a: // size=20 thread=0x100000000
[I]      4509  0x55555556670a    add qword ptr [rbp-0x2f0], rax           48 01 85 10 fd ff ff
[I]      4510  0x555555566711    cmp dword ptr [rip+0x10c0c], 0x1         83 3d 0c 0c 01 00 01
[I]      4511  0x555555566718    jnz 0x555555566510                       0f 85 f2 fd ff ff
[C]      4512 Calling function 0x55555555f4f0(error_at_line)
[B]      4512  0x555555566510 loc_555555566510: // size=5 thread=0x100000000
[I]      4512  0x555555566510    call 0x55555555f4f0                      e8 db 8f ff ff
[B]      4513  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      4513  0x55555555f4f0    push rbp                                 55
[I]      4514  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      4515  0x55555555f4f4    push r15                                 41 57
[I]      4516  0x55555555f4f6    push r14                                 41 56
[I]      4517  0x55555555f4f8    push r13                                 41 55
[I]      4518  0x55555555f4fa    push r12                                 41 54
[I]      4519  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      4520  0x55555555f503    push rbx                                 53
[I]      4521  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      4522  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      4523  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      4524  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      4525  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      4526  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      4527  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      4528  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      4528  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      4529  0x55555555f58d    test eax, eax                            85 c0
[I]      4530  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      4531  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      4531  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      4532  0x55555555f597    test eax, eax                            85 c0
[I]      4533  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      4534  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      4534  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      4535  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      4536  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      4537  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      4537  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      4538  0x55555555f5e6    pop rbx                                  5b
[I]      4539  0x55555555f5e7    pop r12                                  41 5c
[I]      4540  0x55555555f5e9    pop r13                                  41 5d
[I]      4541  0x55555555f5eb    pop r14                                  41 5e
[I]      4542  0x55555555f5ed    pop r15                                  41 5f
[I]      4543  0x55555555f5ef    pop rbp                                  5d
[I]      4544  0x55555555f5f0    ret                                      c3
[B]      4545  0x555555566515 loc_555555566515: // size=5 thread=0x100000000
[I]      4545  0x555555566515    jmp 0x555555566490                       e9 76 ff ff ff
[B]      4546  0x555555566490 loc_555555566490: // size=17 thread=0x100000000
[I]      4546  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]      4547  0x555555566498    mov rdi, r14                             4c 89 f7
[C]      4548 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]      4548  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]      4549  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]      4549  0x5555555664a1    mov r12, rax                             49 89 c4
[I]      4550  0x5555555664a4    test rax, rax                            48 85 c0
[I]      4551  0x5555555664a7    jz 0x555555566520                        74 77
[B]      4552  0x5555555664a9 loc_5555555664a9: // size=19 thread=0x100000000
[I]      4552  0x5555555664a9    lea rbx, ptr [rax+0x13]                  48 8d 58 13
[I]      4553  0x5555555664ad    mov eax, dword ptr [rip+0x11021]         8b 05 21 10 01 00
[I]      4554  0x5555555664b3    cmp eax, 0x2                             83 f8 02
[I]      4555  0x5555555664b6    jz 0x5555555666b0                        0f 84 f4 01 00 00
[B]      4556  0x5555555664bc loc_5555555664bc: // size=12 thread=0x100000000
[I]      4556  0x5555555664bc    cmp byte ptr [r12+0x13], 0x2e            41 80 7c 24 13 2e
[I]      4557  0x5555555664c2    jz 0x555555566688                        0f 84 c0 01 00 00
[B]      4558  0x555555566688 loc_555555566688: // size=8 thread=0x100000000
[I]      4558  0x555555566688    test eax, eax                            85 c0
[I]      4559  0x55555556668a    jz 0x555555566510                        0f 84 80 fe ff ff
[C]      4560 Calling function 0x55555555f4f0(error_at_line)
[B]      4560  0x555555566510 loc_555555566510: // size=5 thread=0x100000000
[I]      4560  0x555555566510    call 0x55555555f4f0                      e8 db 8f ff ff
[B]      4561  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      4561  0x55555555f4f0    push rbp                                 55
[I]      4562  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      4563  0x55555555f4f4    push r15                                 41 57
[I]      4564  0x55555555f4f6    push r14                                 41 56
[I]      4565  0x55555555f4f8    push r13                                 41 55
[I]      4566  0x55555555f4fa    push r12                                 41 54
[I]      4567  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      4568  0x55555555f503    push rbx                                 53
[I]      4569  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      4570  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      4571  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      4572  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      4573  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      4574  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      4575  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      4576  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      4576  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      4577  0x55555555f58d    test eax, eax                            85 c0
[I]      4578  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      4579  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      4579  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      4580  0x55555555f597    test eax, eax                            85 c0
[I]      4581  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      4582  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      4582  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      4583  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      4584  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      4585  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      4585  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      4586  0x55555555f5e6    pop rbx                                  5b
[I]      4587  0x55555555f5e7    pop r12                                  41 5c
[I]      4588  0x55555555f5e9    pop r13                                  41 5d
[I]      4589  0x55555555f5eb    pop r14                                  41 5e
[I]      4590  0x55555555f5ed    pop r15                                  41 5f
[I]      4591  0x55555555f5ef    pop rbp                                  5d
[I]      4592  0x55555555f5f0    ret                                      c3
[B]      4593  0x555555566515 loc_555555566515: // size=5 thread=0x100000000
[I]      4593  0x555555566515    jmp 0x555555566490                       e9 76 ff ff ff
[B]      4594  0x555555566490 loc_555555566490: // size=17 thread=0x100000000
[I]      4594  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]      4595  0x555555566498    mov rdi, r14                             4c 89 f7
[C]      4596 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]      4596  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]      4597  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]      4597  0x5555555664a1    mov r12, rax                             49 89 c4
[I]      4598  0x5555555664a4    test rax, rax                            48 85 c0
[I]      4599  0x5555555664a7    jz 0x555555566520                        74 77
[B]      4600  0x5555555664a9 loc_5555555664a9: // size=19 thread=0x100000000
[I]      4600  0x5555555664a9    lea rbx, ptr [rax+0x13]                  48 8d 58 13
[I]      4601  0x5555555664ad    mov eax, dword ptr [rip+0x11021]         8b 05 21 10 01 00
[I]      4602  0x5555555664b3    cmp eax, 0x2                             83 f8 02
[I]      4603  0x5555555664b6    jz 0x5555555666b0                        0f 84 f4 01 00 00
[B]      4604  0x5555555664bc loc_5555555664bc: // size=12 thread=0x100000000
[I]      4604  0x5555555664bc    cmp byte ptr [r12+0x13], 0x2e            41 80 7c 24 13 2e
[I]      4605  0x5555555664c2    jz 0x555555566688                        0f 84 c0 01 00 00
[B]      4606  0x555555566688 loc_555555566688: // size=8 thread=0x100000000
[I]      4606  0x555555566688    test eax, eax                            85 c0
[I]      4607  0x55555556668a    jz 0x555555566510                        0f 84 80 fe ff ff
[C]      4608 Calling function 0x55555555f4f0(error_at_line)
[B]      4608  0x555555566510 loc_555555566510: // size=5 thread=0x100000000
[I]      4608  0x555555566510    call 0x55555555f4f0                      e8 db 8f ff ff
[B]      4609  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      4609  0x55555555f4f0    push rbp                                 55
[I]      4610  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      4611  0x55555555f4f4    push r15                                 41 57
[I]      4612  0x55555555f4f6    push r14                                 41 56
[I]      4613  0x55555555f4f8    push r13                                 41 55
[I]      4614  0x55555555f4fa    push r12                                 41 54
[I]      4615  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      4616  0x55555555f503    push rbx                                 53
[I]      4617  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      4618  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      4619  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      4620  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      4621  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      4622  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      4623  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      4624  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      4624  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      4625  0x55555555f58d    test eax, eax                            85 c0
[I]      4626  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      4627  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      4627  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      4628  0x55555555f597    test eax, eax                            85 c0
[I]      4629  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      4630  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      4630  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      4631  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      4632  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      4633  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      4633  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      4634  0x55555555f5e6    pop rbx                                  5b
[I]      4635  0x55555555f5e7    pop r12                                  41 5c
[I]      4636  0x55555555f5e9    pop r13                                  41 5d
[I]      4637  0x55555555f5eb    pop r14                                  41 5e
[I]      4638  0x55555555f5ed    pop r15                                  41 5f
[I]      4639  0x55555555f5ef    pop rbp                                  5d
[I]      4640  0x55555555f5f0    ret                                      c3
[B]      4641  0x555555566515 loc_555555566515: // size=5 thread=0x100000000
[I]      4641  0x555555566515    jmp 0x555555566490                       e9 76 ff ff ff
[B]      4642  0x555555566490 loc_555555566490: // size=17 thread=0x100000000
[I]      4642  0x555555566490    mov dword ptr [r13], 0x0                 41 c7 45 00 00 00 00 00
[I]      4643  0x555555566498    mov rdi, r14                             4c 89 f7
[C]      4644 Calling function 0x7fffc2ee4840(readdir)
[!] Function 0x7fffc2ee4840 is filtered, no tracing
[I]      4644  0x55555556649b    call qword ptr [rip+0x109f7]             ff 15 f7 09 01 00
[B]      4645  0x5555555664a1 loc_5555555664a1: // size=8 thread=0x100000000
[I]      4645  0x5555555664a1    mov r12, rax                             49 89 c4
[I]      4646  0x5555555664a4    test rax, rax                            48 85 c0
[I]      4647  0x5555555664a7    jz 0x555555566520                        74 77
[B]      4648  0x555555566520 loc_555555566520: // size=8 thread=0x100000000
[I]      4648  0x555555566520    mov ebx, dword ptr [r13]                 41 8b 5d 00
[I]      4649  0x555555566524    test ebx, ebx                            85 db
[I]      4650  0x555555566526    jz 0x555555566556                        74 2e
[B]      4651  0x555555566556 loc_555555566556: // size=9 thread=0x100000000
[I]      4651  0x555555566556    mov rdi, r14                             4c 89 f7
[C]      4652 Calling function 0x7fffc2ee44d0(closedir)
[!] Function 0x7fffc2ee44d0 is filtered, no tracing
[I]      4652  0x555555566559    call qword ptr [rip+0x10881]             ff 15 81 08 01 00
[B]      4653  0x55555556655f loc_55555556655f: // size=8 thread=0x100000000
[I]      4653  0x55555556655f    test eax, eax                            85 c0
[I]      4654  0x555555566561    jnz 0x5555555667e7                       0f 85 80 02 00 00
[C]      4655 Calling function 0x5555555617a0(error_at_line)
[B]      4655  0x555555566567 loc_555555566567: // size=5 thread=0x100000000
[I]      4655  0x555555566567    call 0x5555555617a0                      e8 34 b2 ff ff
[B]      4656  0x5555555617a0 loc_5555555617a0: // size=38 thread=0x100000000
[I]      4656  0x5555555617a0    push rbp                                 55
[I]      4657  0x5555555617a1    mov rbp, rsp                             48 89 e5
[I]      4658  0x5555555617a4    push r13                                 41 55
[I]      4659  0x5555555617a6    push r12                                 41 54
[I]      4660  0x5555555617a8    push rbx                                 53
[I]      4661  0x5555555617a9    sub rsp, 0x8                             48 83 ec 08
[I]      4662  0x5555555617ad    mov rbx, qword ptr [rip+0x15e54]         48 8b 1d 54 5e 01 00
[I]      4663  0x5555555617b4    mov rax, rbx                             48 89 d8
[I]      4664  0x5555555617b7    sar rax, 0x1                             48 d1 f8
[I]      4665  0x5555555617ba    add rax, rbx                             48 01 d8
[I]      4666  0x5555555617bd    cmp qword ptr [rip+0x15ca4], rax         48 39 05 a4 5c 01 00
[I]      4667  0x5555555617c4    jnb 0x55555556180e                       73 48
[B]      4668  0x5555555617c6 loc_5555555617c6: // size=13 thread=0x100000000
[I]      4668  0x5555555617c6    mov rdi, qword ptr [rip+0x15cc3]         48 8b 3d c3 5c 01 00
[C]      4669 Calling function 0x7fffc2ea7f30(cfree)
[!] Function 0x7fffc2ea7f30 is filtered, no tracing
[I]      4669  0x5555555617cd    call qword ptr [rip+0x15495]             ff 15 95 54 01 00
[B]      4670  0x5555555617d3 loc_5555555617d3: // size=14 thread=0x100000000
[I]      4670  0x5555555617d3    mov eax, 0x18                            b8 18 00 00 00
[I]      4671  0x5555555617d8    mul rbx                                  48 f7 e3
[I]      4672  0x5555555617db    jo 0x555555561a98                        0f 80 b7 02 00 00
[B]      4673  0x5555555617e1 loc_5555555617e1: // size=18 thread=0x100000000
[I]      4673  0x5555555617e1    test rax, rax                            48 85 c0
[I]      4674  0x5555555617e4    mov edi, 0x1                             bf 01 00 00 00
[I]      4675  0x5555555617e9    cmovnz rdi, rax                          48 0f 45 f8
[C]      4676 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]      4676  0x5555555617ed    call qword ptr [rip+0x156bd]             ff 15 bd 56 01 00
[B]      4677  0x5555555617f3 loc_5555555617f3: // size=9 thread=0x100000000
[I]      4677  0x5555555617f3    test rax, rax                            48 85 c0
[I]      4678  0x5555555617f6    jz 0x555555561aa4                        0f 84 a8 02 00 00
[B]      4679  0x5555555617fc loc_5555555617fc: // size=27 thread=0x100000000
[I]      4679  0x5555555617fc    mov qword ptr [rip+0x15c8d], rax         48 89 05 8d 5c 01 00
[I]      4680  0x555555561803    lea rax, ptr [rbx+rbx*2]                 48 8d 04 5b
[I]      4681  0x555555561807    mov qword ptr [rip+0x15c5a], rax         48 89 05 5a 5c 01 00
[I]      4682  0x55555556180e    test rbx, rbx                            48 85 db
[I]      4683  0x555555561811    jle 0x555555561ab0                       0f 8e 99 02 00 00
[B]      4684  0x555555561817 loc_555555561817: // size=60 thread=0x100000000
[I]      4684  0x555555561817    mov rax, qword ptr [rip+0x15c72]         48 8b 05 72 5c 01 00
[I]      4685  0x55555556181e    mov rdx, qword ptr [rip+0x15deb]         48 8b 15 eb 5d 01 00
[I]      4686  0x555555561825    lea rcx, ptr [rax+rbx*8]                 48 8d 0c d8
[I]      4687  0x555555561829    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      4688  0x555555561834    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      4689  0x55555556183f    nop                                      90
[I]      4690  0x555555561840    mov qword ptr [rax], rdx                 48 89 10
[I]      4691  0x555555561843    add rax, 0x8                             48 83 c0 08
[I]      4692  0x555555561847    add rdx, 0xd0                            48 81 c2 d0 00 00 00
[I]      4693  0x55555556184e    cmp rax, rcx                             48 39 c8
[I]      4694  0x555555561851    jnz 0x555555561840                       75 ed
[B]      4695  0x555555561840 loc_555555561840: // size=19 thread=0x100000000
[I]      4695  0x555555561840    mov qword ptr [rax], rdx                 48 89 10
[I]      4696  0x555555561843    add rax, 0x8                             48 83 c0 08
[I]      4697  0x555555561847    add rdx, 0xd0                            48 81 c2 d0 00 00 00
[I]      4698  0x55555556184e    cmp rax, rcx                             48 39 c8
[I]      4699  0x555555561851    jnz 0x555555561840                       75 ed
[B]      4700  0x555555561840 loc_555555561840: // size=19 thread=0x100000000
[I]      4700  0x555555561840    mov qword ptr [rax], rdx                 48 89 10
[I]      4701  0x555555561843    add rax, 0x8                             48 83 c0 08
[I]      4702  0x555555561847    add rdx, 0xd0                            48 81 c2 d0 00 00 00
[I]      4703  0x55555556184e    cmp rax, rcx                             48 39 c8
[I]      4704  0x555555561851    jnz 0x555555561840                       75 ed
[B]      4705  0x555555561853 loc_555555561853: // size=15 thread=0x100000000
[I]      4705  0x555555561853    mov eax, dword ptr [rip+0x16c07]         8b 05 07 6c 01 00
[I]      4706  0x555555561859    cmp eax, 0x2                             83 f8 02
[I]      4707  0x55555556185c    jz 0x5555555619c2                        0f 84 60 01 00 00
[B]      4708  0x555555561862 loc_555555561862: // size=14 thread=0x100000000
[I]      4708  0x555555561862    cmp qword ptr [rip+0x15c4e], 0x0         48 83 3d 4e 5c 01 00 00
[I]      4709  0x55555556186a    jnz 0x5555555619b0                       0f 85 40 01 00 00
[B]      4710  0x5555555619b0 loc_5555555619b0: // size=18 thread=0x100000000
[I]      4710  0x5555555619b0    mov esi, dword ptr [rip+0x1596e]         8b 35 6e 59 01 00
[I]      4711  0x5555555619b6    lea edx, ptr [rsi-0x2]                   8d 56 fe
[I]      4712  0x5555555619b9    cmp edx, 0x1                             83 fa 01
[I]      4713  0x5555555619bc    jnbe 0x555555561870                      0f 87 ae fe ff ff
[B]      4714  0x5555555619c2 loc_5555555619c2: // size=4 thread=0x100000000
[I]      4714  0x5555555619c2    xor ebx, ebx                             31 db
[I]      4715  0x5555555619c4    jmp 0x555555561a15                       eb 4f
[B]      4716  0x555555561a15 loc_555555561a15: // size=24 thread=0x100000000
[I]      4716  0x555555561a15    mov rax, qword ptr [rip+0x15a74]         48 8b 05 74 5a 01 00
[I]      4717  0x555555561a1c    mov r12, qword ptr [rax+rbx*8]           4c 8b 24 d8
[I]      4718  0x555555561a20    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      4719  0x555555561a28    test rax, rax                            48 85 c0
[I]      4720  0x555555561a2b    jnz 0x555555561a00                       75 d3
[B]      4721  0x555555561a2d loc_555555561a2d: // size=24 thread=0x100000000
[I]      4721  0x555555561a2d    mov edx, dword ptr [r12+0xc4]            41 8b 94 24 c4 00 00 00
[I]      4722  0x555555561a35    mov rdi, qword ptr [r12]                 49 8b 3c 24
[I]      4723  0x555555561a39    mov rsi, qword ptr [rip+0x15bc0]         48 8b 35 c0 5b 01 00
[C]      4724 Calling function 0x55555555dfe0(error_at_line)
[I]      4724  0x555555561a40    call 0x55555555dfe0                      e8 9b c5 ff ff
[B]      4725  0x55555555dfe0 loc_55555555dfe0: // size=99 thread=0x100000000
[I]      4725  0x55555555dfe0    push rbp                                 55
[I]      4726  0x55555555dfe1    mov rbp, rsp                             48 89 e5
[I]      4727  0x55555555dfe4    push r12                                 41 54
[I]      4728  0x55555555dfe6    push rbx                                 53
[I]      4729  0x55555555dfe7    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      4730  0x55555555dfee    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      4731  0x55555555dff3    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      4732  0x55555555dffa    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      4733  0x55555555dfff    sub rsp, 0x30                            48 83 ec 30
[I]      4734  0x55555555e003    mov rcx, qword ptr fs:[0x28]             64 48 8b 0c 25 28 00 00 00
[I]      4735  0x55555555e00c    mov qword ptr [rbp-0x18], rcx            48 89 4d e8
[I]      4736  0x55555555e010    mov ecx, edx                             89 d1
[I]      4737  0x55555555e012    mov rbx, rdi                             48 89 fb
[I]      4738  0x55555555e015    mov rdx, rsi                             48 89 f2
[I]      4739  0x55555555e018    lea rdi, ptr [rbp-0x2028]                48 8d bd d8 df ff ff
[I]      4740  0x55555555e01f    lea r12, ptr [rbp-0x2020]                4c 8d a5 e0 df ff ff
[I]      4741  0x55555555e026    lea r9, ptr [rbp-0x2031]                 4c 8d 8d cf df ff ff
[I]      4742  0x55555555e02d    mov rsi, rbx                             48 89 de
[I]      4743  0x55555555e030    lea r8, ptr [rbp-0x2030]                 4c 8d 85 d0 df ff ff
[I]      4744  0x55555555e037    mov qword ptr [rbp-0x2028], r12          4c 89 a5 d8 df ff ff
[C]      4745 Calling function 0x555555568e70(error_at_line)
[I]      4745  0x55555555e03e    call 0x555555568e70                      e8 2d ae 00 00
[B]      4746  0x555555568e70 loc_555555568e70: // size=99 thread=0x100000000
[I]      4746  0x555555568e70    nop edx, edi                             f3 0f 1e fa
[I]      4747  0x555555568e74    push rbp                                 55
[I]      4748  0x555555568e75    mov rbp, rsp                             48 89 e5
[I]      4749  0x555555568e78    push r15                                 41 57
[I]      4750  0x555555568e7a    mov r15, rdx                             49 89 d7
[I]      4751  0x555555568e7d    push r14                                 41 56
[I]      4752  0x555555568e7f    mov r14, rsi                             49 89 f6
[I]      4753  0x555555568e82    push r13                                 41 55
[I]      4754  0x555555568e84    push r12                                 41 54
[I]      4755  0x555555568e86    push rbx                                 53
[I]      4756  0x555555568e87    sub rsp, 0x68                            48 83 ec 68
[I]      4757  0x555555568e8b    test rdx, rdx                            48 85 d2
[I]      4758  0x555555568e8e    mov qword ptr [rbp-0x80], rdi            48 89 7d 80
[I]      4759  0x555555568e92    lea rdx, ptr [rip+0xe447]                48 8d 15 47 e4 00 00
[I]      4760  0x555555568e99    cmovz r15, rdx                           4c 0f 44 fa
[I]      4761  0x555555568e9d    mov qword ptr [rbp-0x60], r8             4c 89 45 a0
[I]      4762  0x555555568ea1    mov qword ptr [rbp-0x88], r9             4c 89 8d 78 ff ff ff
[I]      4763  0x555555568ea8    mov ebx, dword ptr [r15]                 41 8b 1f
[I]      4764  0x555555568eab    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      4765  0x555555568eb4    mov qword ptr [rbp-0x38], r12            4c 89 65 c8
[I]      4766  0x555555568eb8    mov r12, qword ptr [rdi]                 4c 8b 27
[I]      4767  0x555555568ebb    cmp ebx, 0x2                             83 fb 02
[I]      4768  0x555555568ebe    setbe r13b                               41 0f 96 c5
[I]      4769  0x555555568ec2    and r13b, byte ptr [rip+0xe3f5]          44 22 2d f5 e3 00 00
[I]      4770  0x555555568ec9    mov byte ptr [rbp-0x71], r13b            44 88 6d 8f
[I]      4771  0x555555568ecd    jnz 0x555555569000                       0f 85 2d 01 00 00
[B]      4772  0x555555568ed3 loc_555555568ed3: // size=8 thread=0x100000000
[I]      4772  0x555555568ed3    test ecx, ecx                            85 c9
[I]      4773  0x555555568ed5    jnz 0x555555569168                       0f 85 8d 02 00 00
[B]      4774  0x555555568edb loc_555555568edb: // size=12 thread=0x100000000
[I]      4774  0x555555568edb    mov rdi, rsi                             48 89 f7
[I]      4775  0x555555568ede    mov r12, r14                             4d 89 f4
[C]      4776 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      4776  0x555555568ee1    call qword ptr [rip+0xde71]              ff 15 71 de 00 00
[B]      4777  0x555555568ee7 loc_555555568ee7: // size=14 thread=0x100000000
[I]      4777  0x555555568ee7    cmp qword ptr [rbp-0x60], 0x0            48 83 7d a0 00
[I]      4778  0x555555568eec    mov rbx, rax                             48 89 c3
[I]      4779  0x555555568eef    jz 0x555555568f98                        0f 84 a3 00 00 00
[C]      4780 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[B]      4780  0x555555568ef5 loc_555555568ef5: // size=6 thread=0x100000000
[I]      4780  0x555555568ef5    call qword ptr [rip+0xde55]              ff 15 55 de 00 00
[B]      4781  0x555555568efb loc_555555568efb: // size=10 thread=0x100000000
[I]      4781  0x555555568efb    cmp rax, 0x1                             48 83 f8 01
[I]      4782  0x555555568eff    jnbe 0x555555569270                      0f 87 6b 03 00 00
[B]      4783  0x555555569270 loc_555555569270: // size=11 thread=0x100000000
[I]      4783  0x555555569270    mov rsi, rbx                             48 89 de
[I]      4784  0x555555569273    mov rdi, r12                             4c 89 e7
[C]      4785 Calling function 0x555555568d30(error_at_line)
[I]      4785  0x555555569276    call 0x555555568d30                      e8 b5 fa ff ff
[B]      4786  0x555555568d30 loc_555555568d30: // size=47 thread=0x100000000
[I]      4786  0x555555568d30    nop edx, edi                             f3 0f 1e fa
[I]      4787  0x555555568d34    push rbp                                 55
[I]      4788  0x555555568d35    mov rbp, rsp                             48 89 e5
[I]      4789  0x555555568d38    push r15                                 41 57
[I]      4790  0x555555568d3a    push r14                                 41 56
[I]      4791  0x555555568d3c    push r13                                 41 55
[I]      4792  0x555555568d3e    push r12                                 41 54
[I]      4793  0x555555568d40    lea r12, ptr [rdi+rsi*1]                 4c 8d 24 37
[I]      4794  0x555555568d44    push rbx                                 53
[I]      4795  0x555555568d45    sub rsp, 0x28                            48 83 ec 28
[I]      4796  0x555555568d49    mov rbx, qword ptr fs:[0x28]             64 48 8b 1c 25 28 00 00 00
[I]      4797  0x555555568d52    mov qword ptr [rbp-0x38], rbx            48 89 5d c8
[I]      4798  0x555555568d56    mov rbx, rdi                             48 89 fb
[C]      4799 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[I]      4799  0x555555568d59    call qword ptr [rip+0xdff1]              ff 15 f1 df 00 00
[B]      4800  0x555555568d5f loc_555555568d5f: // size=10 thread=0x100000000
[I]      4800  0x555555568d5f    cmp rax, 0x1                             48 83 f8 01
[I]      4801  0x555555568d63    jbe 0x555555568e20                       0f 86 b7 00 00 00
[B]      4802  0x555555568d69 loc_555555568d69: // size=8 thread=0x100000000
[I]      4802  0x555555568d69    xor r14d, r14d                           45 31 f6
[I]      4803  0x555555568d6c    cmp rbx, r12                             4c 39 e3
[I]      4804  0x555555568d6f    jnb 0x555555568d90                       73 1f
[B]      4805  0x555555568d71 loc_555555568d71: // size=15 thread=0x100000000
[I]      4805  0x555555568d71    lea r13, ptr [rbp-0x40]                  4c 8d 6d c0
[I]      4806  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      4807  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      4808  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      4809  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      4810  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      4810  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      4811  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      4812  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      4813  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      4814  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      4814  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      4815  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      4816  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      4817  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      4818  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      4818  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      4819  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      4820  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      4821  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      4822  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      4822  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      4823  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      4824  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      4825  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      4826  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      4826  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      4827  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      4828  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      4829  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      4830  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      4830  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      4831  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      4832  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      4833  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      4834  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      4834  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      4835  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      4836  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      4837  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      4838  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      4838  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      4839  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      4840  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      4841  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      4842  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      4842  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      4843  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      4844  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      4845  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      4846  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      4846  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      4847  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      4848  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      4849  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      4850  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      4850  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      4851  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      4852  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      4853  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      4854  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      4854  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      4855  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      4856  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      4857  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      4858  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      4858  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      4859  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      4860  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      4861  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      4862  0x555555568d8d loc_555555568d8d: // size=22 thread=0x100000000
[I]      4862  0x555555568d8d    nop dword ptr [rax]                      0f 1f 00
[I]      4863  0x555555568d90    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      4864  0x555555568d94    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      4865  0x555555568d9d    jnz 0x555555568e68                       0f 85 c5 00 00 00
[B]      4866  0x555555568da3 loc_555555568da3: // size=18 thread=0x100000000
[I]      4866  0x555555568da3    add rsp, 0x28                            48 83 c4 28
[I]      4867  0x555555568da7    mov eax, r14d                            44 89 f0
[I]      4868  0x555555568daa    pop rbx                                  5b
[I]      4869  0x555555568dab    pop r12                                  41 5c
[I]      4870  0x555555568dad    pop r13                                  41 5d
[I]      4871  0x555555568daf    pop r14                                  41 5e
[I]      4872  0x555555568db1    pop r15                                  41 5f
[I]      4873  0x555555568db3    pop rbp                                  5d
[I]      4874  0x555555568db4    ret                                      c3
[B]      4875  0x55555556927b loc_55555556927b: // size=12 thread=0x100000000
[I]      4875  0x55555556927b    cmp byte ptr [rip+0xe03b], 0x0           80 3d 3b e0 00 00 00
[I]      4876  0x555555569282    movsxd r13, eax                          4c 63 e8
[I]      4877  0x555555569285    jz 0x5555555692a0                        74 19
[B]      4878  0x555555569287 loc_555555569287: // size=13 thread=0x100000000
[I]      4878  0x555555569287    cmp byte ptr [rip+0xe02e], 0x0           80 3d 2e e0 00 00 00
[I]      4879  0x55555556928e    jnz 0x5555555693e5                       0f 85 51 01 00 00
[B]      4880  0x555555569294 loc_555555569294: // size=34 thread=0x100000000
[I]      4880  0x555555569294    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      4881  0x55555556929f    nop                                      90
[I]      4882  0x5555555692a0    mov rax, qword ptr [rbp-0x88]            48 8b 85 78 ff ff ff
[I]      4883  0x5555555692a7    mov byte ptr [rax], 0x0                  c6 00 00
[I]      4884  0x5555555692aa    mov rax, qword ptr [rbp-0x60]            48 8b 45 a0
[I]      4885  0x5555555692ae    mov qword ptr [rax], r13                 4c 89 28
[I]      4886  0x5555555692b1    jmp 0x555555568fd0                       e9 1a fd ff ff
[B]      4887  0x555555568fd0 loc_555555568fd0: // size=26 thread=0x100000000
[I]      4887  0x555555568fd0    mov rax, qword ptr [rbp-0x80]            48 8b 45 80
[I]      4888  0x555555568fd4    mov qword ptr [rax], r12                 4c 89 20
[I]      4889  0x555555568fd7    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      4890  0x555555568fdb    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      4891  0x555555568fe4    jnz 0x555555569443                       0f 85 59 04 00 00
[B]      4892  0x555555568fea loc_555555568fea: // size=18 thread=0x100000000
[I]      4892  0x555555568fea    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      4893  0x555555568fee    mov rax, rbx                             48 89 d8
[I]      4894  0x555555568ff1    pop rbx                                  5b
[I]      4895  0x555555568ff2    pop r12                                  41 5c
[I]      4896  0x555555568ff4    pop r13                                  41 5d
[I]      4897  0x555555568ff6    pop r14                                  41 5e
[I]      4898  0x555555568ff8    pop r15                                  41 5f
[I]      4899  0x555555568ffa    pop rbp                                  5d
[I]      4900  0x555555568ffb    ret                                      c3
[B]      4901  0x55555555e043 loc_55555555e043: // size=12 thread=0x100000000
[I]      4901  0x55555555e043    mov rdi, qword ptr [rbp-0x2028]          48 8b bd d8 df ff ff
[I]      4902  0x55555555e04a    cmp rdi, rbx                             48 39 df
[I]      4903  0x55555555e04d    jz 0x55555555e05a                        74 0b
[B]      4904  0x55555555e05a loc_55555555e05a: // size=29 thread=0x100000000
[I]      4904  0x55555555e05a    movzx eax, byte ptr [rbp-0x2031]         0f b6 85 cf df ff ff
[I]      4905  0x55555555e061    add rax, qword ptr [rbp-0x2030]          48 03 85 d0 df ff ff
[I]      4906  0x55555555e068    mov rdx, qword ptr [rbp-0x18]            48 8b 55 e8
[I]      4907  0x55555555e06c    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      4908  0x55555555e075    jnz 0x55555555e083                       75 0c
[B]      4909  0x55555555e077 loc_55555555e077: // size=12 thread=0x100000000
[I]      4909  0x55555555e077    add rsp, 0x2030                          48 81 c4 30 20 00 00
[I]      4910  0x55555555e07e    pop rbx                                  5b
[I]      4911  0x55555555e07f    pop r12                                  41 5c
[I]      4912  0x55555555e081    pop rbp                                  5d
[I]      4913  0x55555555e082    ret                                      c3
[B]      4914  0x555555561a45 loc_555555561a45: // size=2 thread=0x100000000
[I]      4914  0x555555561a45    jmp 0x555555561a00                       eb b9
[B]      4915  0x555555561a00 loc_555555561a00: // size=21 thread=0x100000000
[I]      4915  0x555555561a00    add rbx, 0x1                             48 83 c3 01
[I]      4916  0x555555561a04    cmp rbx, qword ptr [rip+0x15bfd]         48 3b 1d fd 5b 01 00
[I]      4917  0x555555561a0b    mov qword ptr [r12+0xc8], rax            49 89 84 24 c8 00 00 00
[I]      4918  0x555555561a13    jnl 0x555555561a88                       7d 73
[B]      4919  0x555555561a15 loc_555555561a15: // size=24 thread=0x100000000
[I]      4919  0x555555561a15    mov rax, qword ptr [rip+0x15a74]         48 8b 05 74 5a 01 00
[I]      4920  0x555555561a1c    mov r12, qword ptr [rax+rbx*8]           4c 8b 24 d8
[I]      4921  0x555555561a20    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      4922  0x555555561a28    test rax, rax                            48 85 c0
[I]      4923  0x555555561a2b    jnz 0x555555561a00                       75 d3
[B]      4924  0x555555561a2d loc_555555561a2d: // size=24 thread=0x100000000
[I]      4924  0x555555561a2d    mov edx, dword ptr [r12+0xc4]            41 8b 94 24 c4 00 00 00
[I]      4925  0x555555561a35    mov rdi, qword ptr [r12]                 49 8b 3c 24
[I]      4926  0x555555561a39    mov rsi, qword ptr [rip+0x15bc0]         48 8b 35 c0 5b 01 00
[C]      4927 Calling function 0x55555555dfe0(error_at_line)
[I]      4927  0x555555561a40    call 0x55555555dfe0                      e8 9b c5 ff ff
[B]      4928  0x55555555dfe0 loc_55555555dfe0: // size=99 thread=0x100000000
[I]      4928  0x55555555dfe0    push rbp                                 55
[I]      4929  0x55555555dfe1    mov rbp, rsp                             48 89 e5
[I]      4930  0x55555555dfe4    push r12                                 41 54
[I]      4931  0x55555555dfe6    push rbx                                 53
[I]      4932  0x55555555dfe7    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      4933  0x55555555dfee    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      4934  0x55555555dff3    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      4935  0x55555555dffa    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      4936  0x55555555dfff    sub rsp, 0x30                            48 83 ec 30
[I]      4937  0x55555555e003    mov rcx, qword ptr fs:[0x28]             64 48 8b 0c 25 28 00 00 00
[I]      4938  0x55555555e00c    mov qword ptr [rbp-0x18], rcx            48 89 4d e8
[I]      4939  0x55555555e010    mov ecx, edx                             89 d1
[I]      4940  0x55555555e012    mov rbx, rdi                             48 89 fb
[I]      4941  0x55555555e015    mov rdx, rsi                             48 89 f2
[I]      4942  0x55555555e018    lea rdi, ptr [rbp-0x2028]                48 8d bd d8 df ff ff
[I]      4943  0x55555555e01f    lea r12, ptr [rbp-0x2020]                4c 8d a5 e0 df ff ff
[I]      4944  0x55555555e026    lea r9, ptr [rbp-0x2031]                 4c 8d 8d cf df ff ff
[I]      4945  0x55555555e02d    mov rsi, rbx                             48 89 de
[I]      4946  0x55555555e030    lea r8, ptr [rbp-0x2030]                 4c 8d 85 d0 df ff ff
[I]      4947  0x55555555e037    mov qword ptr [rbp-0x2028], r12          4c 89 a5 d8 df ff ff
[C]      4948 Calling function 0x555555568e70(error_at_line)
[I]      4948  0x55555555e03e    call 0x555555568e70                      e8 2d ae 00 00
[B]      4949  0x555555568e70 loc_555555568e70: // size=99 thread=0x100000000
[I]      4949  0x555555568e70    nop edx, edi                             f3 0f 1e fa
[I]      4950  0x555555568e74    push rbp                                 55
[I]      4951  0x555555568e75    mov rbp, rsp                             48 89 e5
[I]      4952  0x555555568e78    push r15                                 41 57
[I]      4953  0x555555568e7a    mov r15, rdx                             49 89 d7
[I]      4954  0x555555568e7d    push r14                                 41 56
[I]      4955  0x555555568e7f    mov r14, rsi                             49 89 f6
[I]      4956  0x555555568e82    push r13                                 41 55
[I]      4957  0x555555568e84    push r12                                 41 54
[I]      4958  0x555555568e86    push rbx                                 53
[I]      4959  0x555555568e87    sub rsp, 0x68                            48 83 ec 68
[I]      4960  0x555555568e8b    test rdx, rdx                            48 85 d2
[I]      4961  0x555555568e8e    mov qword ptr [rbp-0x80], rdi            48 89 7d 80
[I]      4962  0x555555568e92    lea rdx, ptr [rip+0xe447]                48 8d 15 47 e4 00 00
[I]      4963  0x555555568e99    cmovz r15, rdx                           4c 0f 44 fa
[I]      4964  0x555555568e9d    mov qword ptr [rbp-0x60], r8             4c 89 45 a0
[I]      4965  0x555555568ea1    mov qword ptr [rbp-0x88], r9             4c 89 8d 78 ff ff ff
[I]      4966  0x555555568ea8    mov ebx, dword ptr [r15]                 41 8b 1f
[I]      4967  0x555555568eab    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      4968  0x555555568eb4    mov qword ptr [rbp-0x38], r12            4c 89 65 c8
[I]      4969  0x555555568eb8    mov r12, qword ptr [rdi]                 4c 8b 27
[I]      4970  0x555555568ebb    cmp ebx, 0x2                             83 fb 02
[I]      4971  0x555555568ebe    setbe r13b                               41 0f 96 c5
[I]      4972  0x555555568ec2    and r13b, byte ptr [rip+0xe3f5]          44 22 2d f5 e3 00 00
[I]      4973  0x555555568ec9    mov byte ptr [rbp-0x71], r13b            44 88 6d 8f
[I]      4974  0x555555568ecd    jnz 0x555555569000                       0f 85 2d 01 00 00
[B]      4975  0x555555568ed3 loc_555555568ed3: // size=8 thread=0x100000000
[I]      4975  0x555555568ed3    test ecx, ecx                            85 c9
[I]      4976  0x555555568ed5    jnz 0x555555569168                       0f 85 8d 02 00 00
[B]      4977  0x555555568edb loc_555555568edb: // size=12 thread=0x100000000
[I]      4977  0x555555568edb    mov rdi, rsi                             48 89 f7
[I]      4978  0x555555568ede    mov r12, r14                             4d 89 f4
[C]      4979 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      4979  0x555555568ee1    call qword ptr [rip+0xde71]              ff 15 71 de 00 00
[B]      4980  0x555555568ee7 loc_555555568ee7: // size=14 thread=0x100000000
[I]      4980  0x555555568ee7    cmp qword ptr [rbp-0x60], 0x0            48 83 7d a0 00
[I]      4981  0x555555568eec    mov rbx, rax                             48 89 c3
[I]      4982  0x555555568eef    jz 0x555555568f98                        0f 84 a3 00 00 00
[C]      4983 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[B]      4983  0x555555568ef5 loc_555555568ef5: // size=6 thread=0x100000000
[I]      4983  0x555555568ef5    call qword ptr [rip+0xde55]              ff 15 55 de 00 00
[B]      4984  0x555555568efb loc_555555568efb: // size=10 thread=0x100000000
[I]      4984  0x555555568efb    cmp rax, 0x1                             48 83 f8 01
[I]      4985  0x555555568eff    jnbe 0x555555569270                      0f 87 6b 03 00 00
[B]      4986  0x555555569270 loc_555555569270: // size=11 thread=0x100000000
[I]      4986  0x555555569270    mov rsi, rbx                             48 89 de
[I]      4987  0x555555569273    mov rdi, r12                             4c 89 e7
[C]      4988 Calling function 0x555555568d30(error_at_line)
[I]      4988  0x555555569276    call 0x555555568d30                      e8 b5 fa ff ff
[B]      4989  0x555555568d30 loc_555555568d30: // size=47 thread=0x100000000
[I]      4989  0x555555568d30    nop edx, edi                             f3 0f 1e fa
[I]      4990  0x555555568d34    push rbp                                 55
[I]      4991  0x555555568d35    mov rbp, rsp                             48 89 e5
[I]      4992  0x555555568d38    push r15                                 41 57
[I]      4993  0x555555568d3a    push r14                                 41 56
[I]      4994  0x555555568d3c    push r13                                 41 55
[I]      4995  0x555555568d3e    push r12                                 41 54
[I]      4996  0x555555568d40    lea r12, ptr [rdi+rsi*1]                 4c 8d 24 37
[I]      4997  0x555555568d44    push rbx                                 53
[I]      4998  0x555555568d45    sub rsp, 0x28                            48 83 ec 28
[I]      4999  0x555555568d49    mov rbx, qword ptr fs:[0x28]             64 48 8b 1c 25 28 00 00 00
[I]      5000  0x555555568d52    mov qword ptr [rbp-0x38], rbx            48 89 5d c8
[I]      5001  0x555555568d56    mov rbx, rdi                             48 89 fb
[C]      5002 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[I]      5002  0x555555568d59    call qword ptr [rip+0xdff1]              ff 15 f1 df 00 00
[B]      5003  0x555555568d5f loc_555555568d5f: // size=10 thread=0x100000000
[I]      5003  0x555555568d5f    cmp rax, 0x1                             48 83 f8 01
[I]      5004  0x555555568d63    jbe 0x555555568e20                       0f 86 b7 00 00 00
[B]      5005  0x555555568d69 loc_555555568d69: // size=8 thread=0x100000000
[I]      5005  0x555555568d69    xor r14d, r14d                           45 31 f6
[I]      5006  0x555555568d6c    cmp rbx, r12                             4c 39 e3
[I]      5007  0x555555568d6f    jnb 0x555555568d90                       73 1f
[B]      5008  0x555555568d71 loc_555555568d71: // size=15 thread=0x100000000
[I]      5008  0x555555568d71    lea r13, ptr [rbp-0x40]                  4c 8d 6d c0
[I]      5009  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5010  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5011  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5012  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5013  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5013  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5014  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5015  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5016  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5017  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5017  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5018  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5019  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5020  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5021  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5021  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5022  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5023  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5024  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5025  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5025  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5026  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5027  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5028  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5029  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5029  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5030  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5031  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5032  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5033  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5033  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5034  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5035  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5036  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5037  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5037  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5038  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5039  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5040  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5041  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5041  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5042  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5043  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5044  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5045  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5045  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5046  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5047  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5048  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5049  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5049  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5050  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5051  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5052  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5053  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5053  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5054  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5055  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5056  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5057  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5057  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5058  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5059  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5060  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5061  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5061  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5062  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5063  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5064  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5065  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5065  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5066  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5067  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5068  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5069  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5069  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5070  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5071  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5072  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5073  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5073  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5074  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5075  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5076  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5077  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5077  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5078  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5079  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5080  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5081  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5081  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5082  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5083  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5084  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5085  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5085  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5086  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5087  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5088  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5089  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5089  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5090  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5091  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5092  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5093  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5093  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5094  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5095  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5096  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5097  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5097  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5098  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5099  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5100  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5101  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5101  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5102  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5103  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5104  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5105  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5105  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5106  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5107  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5108  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5109  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5109  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5110  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5111  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5112  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5113  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5113  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5114  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5115  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5116  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5117  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5117  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5118  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5119  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5120  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5121  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5121  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5122  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5123  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5124  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5125  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5125  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5126  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5127  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5128  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5129  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5129  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5130  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5131  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5132  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5133  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5133  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5134  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5135  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5136  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5137  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5137  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5138  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5139  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5140  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5141  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5141  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5142  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5143  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5144  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5145  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5145  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5146  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5147  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5148  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5149  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5149  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5150  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5151  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5152  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5153  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5153  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5154  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5155  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5156  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5157  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5157  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5158  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5159  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5160  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5161  0x555555568d8d loc_555555568d8d: // size=22 thread=0x100000000
[I]      5161  0x555555568d8d    nop dword ptr [rax]                      0f 1f 00
[I]      5162  0x555555568d90    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      5163  0x555555568d94    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      5164  0x555555568d9d    jnz 0x555555568e68                       0f 85 c5 00 00 00
[B]      5165  0x555555568da3 loc_555555568da3: // size=18 thread=0x100000000
[I]      5165  0x555555568da3    add rsp, 0x28                            48 83 c4 28
[I]      5166  0x555555568da7    mov eax, r14d                            44 89 f0
[I]      5167  0x555555568daa    pop rbx                                  5b
[I]      5168  0x555555568dab    pop r12                                  41 5c
[I]      5169  0x555555568dad    pop r13                                  41 5d
[I]      5170  0x555555568daf    pop r14                                  41 5e
[I]      5171  0x555555568db1    pop r15                                  41 5f
[I]      5172  0x555555568db3    pop rbp                                  5d
[I]      5173  0x555555568db4    ret                                      c3
[B]      5174  0x55555556927b loc_55555556927b: // size=12 thread=0x100000000
[I]      5174  0x55555556927b    cmp byte ptr [rip+0xe03b], 0x0           80 3d 3b e0 00 00 00
[I]      5175  0x555555569282    movsxd r13, eax                          4c 63 e8
[I]      5176  0x555555569285    jz 0x5555555692a0                        74 19
[B]      5177  0x555555569287 loc_555555569287: // size=13 thread=0x100000000
[I]      5177  0x555555569287    cmp byte ptr [rip+0xe02e], 0x0           80 3d 2e e0 00 00 00
[I]      5178  0x55555556928e    jnz 0x5555555693e5                       0f 85 51 01 00 00
[B]      5179  0x555555569294 loc_555555569294: // size=34 thread=0x100000000
[I]      5179  0x555555569294    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      5180  0x55555556929f    nop                                      90
[I]      5181  0x5555555692a0    mov rax, qword ptr [rbp-0x88]            48 8b 85 78 ff ff ff
[I]      5182  0x5555555692a7    mov byte ptr [rax], 0x0                  c6 00 00
[I]      5183  0x5555555692aa    mov rax, qword ptr [rbp-0x60]            48 8b 45 a0
[I]      5184  0x5555555692ae    mov qword ptr [rax], r13                 4c 89 28
[I]      5185  0x5555555692b1    jmp 0x555555568fd0                       e9 1a fd ff ff
[B]      5186  0x555555568fd0 loc_555555568fd0: // size=26 thread=0x100000000
[I]      5186  0x555555568fd0    mov rax, qword ptr [rbp-0x80]            48 8b 45 80
[I]      5187  0x555555568fd4    mov qword ptr [rax], r12                 4c 89 20
[I]      5188  0x555555568fd7    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      5189  0x555555568fdb    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      5190  0x555555568fe4    jnz 0x555555569443                       0f 85 59 04 00 00
[B]      5191  0x555555568fea loc_555555568fea: // size=18 thread=0x100000000
[I]      5191  0x555555568fea    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      5192  0x555555568fee    mov rax, rbx                             48 89 d8
[I]      5193  0x555555568ff1    pop rbx                                  5b
[I]      5194  0x555555568ff2    pop r12                                  41 5c
[I]      5195  0x555555568ff4    pop r13                                  41 5d
[I]      5196  0x555555568ff6    pop r14                                  41 5e
[I]      5197  0x555555568ff8    pop r15                                  41 5f
[I]      5198  0x555555568ffa    pop rbp                                  5d
[I]      5199  0x555555568ffb    ret                                      c3
[B]      5200  0x55555555e043 loc_55555555e043: // size=12 thread=0x100000000
[I]      5200  0x55555555e043    mov rdi, qword ptr [rbp-0x2028]          48 8b bd d8 df ff ff
[I]      5201  0x55555555e04a    cmp rdi, rbx                             48 39 df
[I]      5202  0x55555555e04d    jz 0x55555555e05a                        74 0b
[B]      5203  0x55555555e05a loc_55555555e05a: // size=29 thread=0x100000000
[I]      5203  0x55555555e05a    movzx eax, byte ptr [rbp-0x2031]         0f b6 85 cf df ff ff
[I]      5204  0x55555555e061    add rax, qword ptr [rbp-0x2030]          48 03 85 d0 df ff ff
[I]      5205  0x55555555e068    mov rdx, qword ptr [rbp-0x18]            48 8b 55 e8
[I]      5206  0x55555555e06c    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      5207  0x55555555e075    jnz 0x55555555e083                       75 0c
[B]      5208  0x55555555e077 loc_55555555e077: // size=12 thread=0x100000000
[I]      5208  0x55555555e077    add rsp, 0x2030                          48 81 c4 30 20 00 00
[I]      5209  0x55555555e07e    pop rbx                                  5b
[I]      5210  0x55555555e07f    pop r12                                  41 5c
[I]      5211  0x55555555e081    pop rbp                                  5d
[I]      5212  0x55555555e082    ret                                      c3
[B]      5213  0x555555561a45 loc_555555561a45: // size=2 thread=0x100000000
[I]      5213  0x555555561a45    jmp 0x555555561a00                       eb b9
[B]      5214  0x555555561a00 loc_555555561a00: // size=21 thread=0x100000000
[I]      5214  0x555555561a00    add rbx, 0x1                             48 83 c3 01
[I]      5215  0x555555561a04    cmp rbx, qword ptr [rip+0x15bfd]         48 3b 1d fd 5b 01 00
[I]      5216  0x555555561a0b    mov qword ptr [r12+0xc8], rax            49 89 84 24 c8 00 00 00
[I]      5217  0x555555561a13    jnl 0x555555561a88                       7d 73
[B]      5218  0x555555561a15 loc_555555561a15: // size=24 thread=0x100000000
[I]      5218  0x555555561a15    mov rax, qword ptr [rip+0x15a74]         48 8b 05 74 5a 01 00
[I]      5219  0x555555561a1c    mov r12, qword ptr [rax+rbx*8]           4c 8b 24 d8
[I]      5220  0x555555561a20    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      5221  0x555555561a28    test rax, rax                            48 85 c0
[I]      5222  0x555555561a2b    jnz 0x555555561a00                       75 d3
[B]      5223  0x555555561a2d loc_555555561a2d: // size=24 thread=0x100000000
[I]      5223  0x555555561a2d    mov edx, dword ptr [r12+0xc4]            41 8b 94 24 c4 00 00 00
[I]      5224  0x555555561a35    mov rdi, qword ptr [r12]                 49 8b 3c 24
[I]      5225  0x555555561a39    mov rsi, qword ptr [rip+0x15bc0]         48 8b 35 c0 5b 01 00
[C]      5226 Calling function 0x55555555dfe0(error_at_line)
[I]      5226  0x555555561a40    call 0x55555555dfe0                      e8 9b c5 ff ff
[B]      5227  0x55555555dfe0 loc_55555555dfe0: // size=99 thread=0x100000000
[I]      5227  0x55555555dfe0    push rbp                                 55
[I]      5228  0x55555555dfe1    mov rbp, rsp                             48 89 e5
[I]      5229  0x55555555dfe4    push r12                                 41 54
[I]      5230  0x55555555dfe6    push rbx                                 53
[I]      5231  0x55555555dfe7    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      5232  0x55555555dfee    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      5233  0x55555555dff3    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      5234  0x55555555dffa    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      5235  0x55555555dfff    sub rsp, 0x30                            48 83 ec 30
[I]      5236  0x55555555e003    mov rcx, qword ptr fs:[0x28]             64 48 8b 0c 25 28 00 00 00
[I]      5237  0x55555555e00c    mov qword ptr [rbp-0x18], rcx            48 89 4d e8
[I]      5238  0x55555555e010    mov ecx, edx                             89 d1
[I]      5239  0x55555555e012    mov rbx, rdi                             48 89 fb
[I]      5240  0x55555555e015    mov rdx, rsi                             48 89 f2
[I]      5241  0x55555555e018    lea rdi, ptr [rbp-0x2028]                48 8d bd d8 df ff ff
[I]      5242  0x55555555e01f    lea r12, ptr [rbp-0x2020]                4c 8d a5 e0 df ff ff
[I]      5243  0x55555555e026    lea r9, ptr [rbp-0x2031]                 4c 8d 8d cf df ff ff
[I]      5244  0x55555555e02d    mov rsi, rbx                             48 89 de
[I]      5245  0x55555555e030    lea r8, ptr [rbp-0x2030]                 4c 8d 85 d0 df ff ff
[I]      5246  0x55555555e037    mov qword ptr [rbp-0x2028], r12          4c 89 a5 d8 df ff ff
[C]      5247 Calling function 0x555555568e70(error_at_line)
[I]      5247  0x55555555e03e    call 0x555555568e70                      e8 2d ae 00 00
[B]      5248  0x555555568e70 loc_555555568e70: // size=99 thread=0x100000000
[I]      5248  0x555555568e70    nop edx, edi                             f3 0f 1e fa
[I]      5249  0x555555568e74    push rbp                                 55
[I]      5250  0x555555568e75    mov rbp, rsp                             48 89 e5
[I]      5251  0x555555568e78    push r15                                 41 57
[I]      5252  0x555555568e7a    mov r15, rdx                             49 89 d7
[I]      5253  0x555555568e7d    push r14                                 41 56
[I]      5254  0x555555568e7f    mov r14, rsi                             49 89 f6
[I]      5255  0x555555568e82    push r13                                 41 55
[I]      5256  0x555555568e84    push r12                                 41 54
[I]      5257  0x555555568e86    push rbx                                 53
[I]      5258  0x555555568e87    sub rsp, 0x68                            48 83 ec 68
[I]      5259  0x555555568e8b    test rdx, rdx                            48 85 d2
[I]      5260  0x555555568e8e    mov qword ptr [rbp-0x80], rdi            48 89 7d 80
[I]      5261  0x555555568e92    lea rdx, ptr [rip+0xe447]                48 8d 15 47 e4 00 00
[I]      5262  0x555555568e99    cmovz r15, rdx                           4c 0f 44 fa
[I]      5263  0x555555568e9d    mov qword ptr [rbp-0x60], r8             4c 89 45 a0
[I]      5264  0x555555568ea1    mov qword ptr [rbp-0x88], r9             4c 89 8d 78 ff ff ff
[I]      5265  0x555555568ea8    mov ebx, dword ptr [r15]                 41 8b 1f
[I]      5266  0x555555568eab    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      5267  0x555555568eb4    mov qword ptr [rbp-0x38], r12            4c 89 65 c8
[I]      5268  0x555555568eb8    mov r12, qword ptr [rdi]                 4c 8b 27
[I]      5269  0x555555568ebb    cmp ebx, 0x2                             83 fb 02
[I]      5270  0x555555568ebe    setbe r13b                               41 0f 96 c5
[I]      5271  0x555555568ec2    and r13b, byte ptr [rip+0xe3f5]          44 22 2d f5 e3 00 00
[I]      5272  0x555555568ec9    mov byte ptr [rbp-0x71], r13b            44 88 6d 8f
[I]      5273  0x555555568ecd    jnz 0x555555569000                       0f 85 2d 01 00 00
[B]      5274  0x555555568ed3 loc_555555568ed3: // size=8 thread=0x100000000
[I]      5274  0x555555568ed3    test ecx, ecx                            85 c9
[I]      5275  0x555555568ed5    jnz 0x555555569168                       0f 85 8d 02 00 00
[B]      5276  0x555555568edb loc_555555568edb: // size=12 thread=0x100000000
[I]      5276  0x555555568edb    mov rdi, rsi                             48 89 f7
[I]      5277  0x555555568ede    mov r12, r14                             4d 89 f4
[C]      5278 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      5278  0x555555568ee1    call qword ptr [rip+0xde71]              ff 15 71 de 00 00
[B]      5279  0x555555568ee7 loc_555555568ee7: // size=14 thread=0x100000000
[I]      5279  0x555555568ee7    cmp qword ptr [rbp-0x60], 0x0            48 83 7d a0 00
[I]      5280  0x555555568eec    mov rbx, rax                             48 89 c3
[I]      5281  0x555555568eef    jz 0x555555568f98                        0f 84 a3 00 00 00
[C]      5282 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[B]      5282  0x555555568ef5 loc_555555568ef5: // size=6 thread=0x100000000
[I]      5282  0x555555568ef5    call qword ptr [rip+0xde55]              ff 15 55 de 00 00
[B]      5283  0x555555568efb loc_555555568efb: // size=10 thread=0x100000000
[I]      5283  0x555555568efb    cmp rax, 0x1                             48 83 f8 01
[I]      5284  0x555555568eff    jnbe 0x555555569270                      0f 87 6b 03 00 00
[B]      5285  0x555555569270 loc_555555569270: // size=11 thread=0x100000000
[I]      5285  0x555555569270    mov rsi, rbx                             48 89 de
[I]      5286  0x555555569273    mov rdi, r12                             4c 89 e7
[C]      5287 Calling function 0x555555568d30(error_at_line)
[I]      5287  0x555555569276    call 0x555555568d30                      e8 b5 fa ff ff
[B]      5288  0x555555568d30 loc_555555568d30: // size=47 thread=0x100000000
[I]      5288  0x555555568d30    nop edx, edi                             f3 0f 1e fa
[I]      5289  0x555555568d34    push rbp                                 55
[I]      5290  0x555555568d35    mov rbp, rsp                             48 89 e5
[I]      5291  0x555555568d38    push r15                                 41 57
[I]      5292  0x555555568d3a    push r14                                 41 56
[I]      5293  0x555555568d3c    push r13                                 41 55
[I]      5294  0x555555568d3e    push r12                                 41 54
[I]      5295  0x555555568d40    lea r12, ptr [rdi+rsi*1]                 4c 8d 24 37
[I]      5296  0x555555568d44    push rbx                                 53
[I]      5297  0x555555568d45    sub rsp, 0x28                            48 83 ec 28
[I]      5298  0x555555568d49    mov rbx, qword ptr fs:[0x28]             64 48 8b 1c 25 28 00 00 00
[I]      5299  0x555555568d52    mov qword ptr [rbp-0x38], rbx            48 89 5d c8
[I]      5300  0x555555568d56    mov rbx, rdi                             48 89 fb
[C]      5301 Calling function 0x7fffc2e34620(__ctype_get_mb_cur_max)
[!] Function 0x7fffc2e34620 is filtered, no tracing
[I]      5301  0x555555568d59    call qword ptr [rip+0xdff1]              ff 15 f1 df 00 00
[B]      5302  0x555555568d5f loc_555555568d5f: // size=10 thread=0x100000000
[I]      5302  0x555555568d5f    cmp rax, 0x1                             48 83 f8 01
[I]      5303  0x555555568d63    jbe 0x555555568e20                       0f 86 b7 00 00 00
[B]      5304  0x555555568d69 loc_555555568d69: // size=8 thread=0x100000000
[I]      5304  0x555555568d69    xor r14d, r14d                           45 31 f6
[I]      5305  0x555555568d6c    cmp rbx, r12                             4c 39 e3
[I]      5306  0x555555568d6f    jnb 0x555555568d90                       73 1f
[B]      5307  0x555555568d71 loc_555555568d71: // size=15 thread=0x100000000
[I]      5307  0x555555568d71    lea r13, ptr [rbp-0x40]                  4c 8d 6d c0
[I]      5308  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5309  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5310  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5311  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5312  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5312  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5313  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5314  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5315  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5316  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5316  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5317  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5318  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5319  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5320  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5320  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5321  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5322  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5323  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5324  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5324  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5325  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5326  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5327  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5328  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5328  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5329  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5330  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5331  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5332  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5332  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5333  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5334  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5335  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5336  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5336  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5337  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5338  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5339  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5340  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5340  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5341  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5342  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5343  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5344  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5344  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5345  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5346  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5347  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5348  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5348  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5349  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5350  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5351  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5352  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5352  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5353  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5354  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5355  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5356  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5356  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5357  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5358  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5359  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5360  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5360  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5361  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5362  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5363  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5364  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5364  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5365  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5366  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5367  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5368  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5368  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5369  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5370  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5371  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5372  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5372  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5373  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5374  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5375  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5376  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5376  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5377  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5378  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5379  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5380  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5380  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5381  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5382  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5383  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5384  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5384  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5385  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5386  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5387  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5388  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5388  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5389  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5390  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5391  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5392  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5392  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5393  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5394  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5395  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5396  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5396  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5397  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5398  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5399  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5400  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5400  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5401  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5402  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5403  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5404  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5404  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5405  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5406  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5407  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5408  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5408  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5409  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5410  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5411  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5412  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5412  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5413  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5414  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5415  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5416  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5416  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5417  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5418  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5419  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5420  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5420  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5421  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5422  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5423  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5424  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5424  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5425  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5426  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5427  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5428  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5428  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5429  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5430  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5431  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5432  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5432  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5433  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5434  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5435  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5436  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5436  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5437  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5438  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5439  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5440  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5440  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5441  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5442  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5443  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5444  0x555555568d75 loc_555555568d75: // size=11 thread=0x100000000
[I]      5444  0x555555568d75    movsx eax, byte ptr [rbx]                0f be 03
[I]      5445  0x555555568d78    sub eax, 0x20                            83 e8 20
[I]      5446  0x555555568d7b    cmp eax, 0x5e                            83 f8 5e
[I]      5447  0x555555568d7e    jnbe 0x555555568db8                      77 38
[B]      5448  0x555555568d80 loc_555555568d80: // size=13 thread=0x100000000
[I]      5448  0x555555568d80    add rbx, 0x1                             48 83 c3 01
[I]      5449  0x555555568d84    add r14d, 0x1                            41 83 c6 01
[I]      5450  0x555555568d88    cmp rbx, r12                             4c 39 e3
[I]      5451  0x555555568d8b    jb 0x555555568d75                        72 e8
[B]      5452  0x555555568d8d loc_555555568d8d: // size=22 thread=0x100000000
[I]      5452  0x555555568d8d    nop dword ptr [rax]                      0f 1f 00
[I]      5453  0x555555568d90    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      5454  0x555555568d94    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      5455  0x555555568d9d    jnz 0x555555568e68                       0f 85 c5 00 00 00
[B]      5456  0x555555568da3 loc_555555568da3: // size=18 thread=0x100000000
[I]      5456  0x555555568da3    add rsp, 0x28                            48 83 c4 28
[I]      5457  0x555555568da7    mov eax, r14d                            44 89 f0
[I]      5458  0x555555568daa    pop rbx                                  5b
[I]      5459  0x555555568dab    pop r12                                  41 5c
[I]      5460  0x555555568dad    pop r13                                  41 5d
[I]      5461  0x555555568daf    pop r14                                  41 5e
[I]      5462  0x555555568db1    pop r15                                  41 5f
[I]      5463  0x555555568db3    pop rbp                                  5d
[I]      5464  0x555555568db4    ret                                      c3
[B]      5465  0x55555556927b loc_55555556927b: // size=12 thread=0x100000000
[I]      5465  0x55555556927b    cmp byte ptr [rip+0xe03b], 0x0           80 3d 3b e0 00 00 00
[I]      5466  0x555555569282    movsxd r13, eax                          4c 63 e8
[I]      5467  0x555555569285    jz 0x5555555692a0                        74 19
[B]      5468  0x555555569287 loc_555555569287: // size=13 thread=0x100000000
[I]      5468  0x555555569287    cmp byte ptr [rip+0xe02e], 0x0           80 3d 2e e0 00 00 00
[I]      5469  0x55555556928e    jnz 0x5555555693e5                       0f 85 51 01 00 00
[B]      5470  0x555555569294 loc_555555569294: // size=34 thread=0x100000000
[I]      5470  0x555555569294    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      5471  0x55555556929f    nop                                      90
[I]      5472  0x5555555692a0    mov rax, qword ptr [rbp-0x88]            48 8b 85 78 ff ff ff
[I]      5473  0x5555555692a7    mov byte ptr [rax], 0x0                  c6 00 00
[I]      5474  0x5555555692aa    mov rax, qword ptr [rbp-0x60]            48 8b 45 a0
[I]      5475  0x5555555692ae    mov qword ptr [rax], r13                 4c 89 28
[I]      5476  0x5555555692b1    jmp 0x555555568fd0                       e9 1a fd ff ff
[B]      5477  0x555555568fd0 loc_555555568fd0: // size=26 thread=0x100000000
[I]      5477  0x555555568fd0    mov rax, qword ptr [rbp-0x80]            48 8b 45 80
[I]      5478  0x555555568fd4    mov qword ptr [rax], r12                 4c 89 20
[I]      5479  0x555555568fd7    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      5480  0x555555568fdb    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      5481  0x555555568fe4    jnz 0x555555569443                       0f 85 59 04 00 00
[B]      5482  0x555555568fea loc_555555568fea: // size=18 thread=0x100000000
[I]      5482  0x555555568fea    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      5483  0x555555568fee    mov rax, rbx                             48 89 d8
[I]      5484  0x555555568ff1    pop rbx                                  5b
[I]      5485  0x555555568ff2    pop r12                                  41 5c
[I]      5486  0x555555568ff4    pop r13                                  41 5d
[I]      5487  0x555555568ff6    pop r14                                  41 5e
[I]      5488  0x555555568ff8    pop r15                                  41 5f
[I]      5489  0x555555568ffa    pop rbp                                  5d
[I]      5490  0x555555568ffb    ret                                      c3
[B]      5491  0x55555555e043 loc_55555555e043: // size=12 thread=0x100000000
[I]      5491  0x55555555e043    mov rdi, qword ptr [rbp-0x2028]          48 8b bd d8 df ff ff
[I]      5492  0x55555555e04a    cmp rdi, rbx                             48 39 df
[I]      5493  0x55555555e04d    jz 0x55555555e05a                        74 0b
[B]      5494  0x55555555e05a loc_55555555e05a: // size=29 thread=0x100000000
[I]      5494  0x55555555e05a    movzx eax, byte ptr [rbp-0x2031]         0f b6 85 cf df ff ff
[I]      5495  0x55555555e061    add rax, qword ptr [rbp-0x2030]          48 03 85 d0 df ff ff
[I]      5496  0x55555555e068    mov rdx, qword ptr [rbp-0x18]            48 8b 55 e8
[I]      5497  0x55555555e06c    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      5498  0x55555555e075    jnz 0x55555555e083                       75 0c
[B]      5499  0x55555555e077 loc_55555555e077: // size=12 thread=0x100000000
[I]      5499  0x55555555e077    add rsp, 0x2030                          48 81 c4 30 20 00 00
[I]      5500  0x55555555e07e    pop rbx                                  5b
[I]      5501  0x55555555e07f    pop r12                                  41 5c
[I]      5502  0x55555555e081    pop rbp                                  5d
[I]      5503  0x55555555e082    ret                                      c3
[B]      5504  0x555555561a45 loc_555555561a45: // size=2 thread=0x100000000
[I]      5504  0x555555561a45    jmp 0x555555561a00                       eb b9
[B]      5505  0x555555561a00 loc_555555561a00: // size=21 thread=0x100000000
[I]      5505  0x555555561a00    add rbx, 0x1                             48 83 c3 01
[I]      5506  0x555555561a04    cmp rbx, qword ptr [rip+0x15bfd]         48 3b 1d fd 5b 01 00
[I]      5507  0x555555561a0b    mov qword ptr [r12+0xc8], rax            49 89 84 24 c8 00 00 00
[I]      5508  0x555555561a13    jnl 0x555555561a88                       7d 73
[B]      5509  0x555555561a88 loc_555555561a88: // size=11 thread=0x100000000
[I]      5509  0x555555561a88    mov eax, dword ptr [rip+0x169d2]         8b 05 d2 69 01 00
[I]      5510  0x555555561a8e    jmp 0x555555561870                       e9 dd fd ff ff
[B]      5511  0x555555561870 loc_555555561870: // size=9 thread=0x100000000
[I]      5511  0x555555561870    cmp eax, 0x6                             83 f8 06
[I]      5512  0x555555561873    jz 0x555555561939                        0f 84 c0 00 00 00
[B]      5513  0x555555561879 loc_555555561879: // size=13 thread=0x100000000
[I]      5513  0x555555561879    lea rdi, ptr [rip+0x15b20]               48 8d 3d 20 5b 01 00
[C]      5514 Calling function 0x7fffc2e3e140(_setjmp)
[!] Function 0x7fffc2e3e140 is filtered, no tracing
[I]      5514  0x555555561880    call qword ptr [rip+0x1556a]             ff 15 6a 55 01 00
[B]      5515  0x555555561886 loc_555555561886: // size=18 thread=0x100000000
[I]      5515  0x555555561886    nop edx, edi                             f3 0f 1e fa
[I]      5516  0x55555556188a    mov ecx, dword ptr [rip+0x16bd0]         8b 0d d0 6b 01 00
[I]      5517  0x555555561890    test eax, eax                            85 c0
[I]      5518  0x555555561892    jz 0x555555561948                        0f 84 b0 00 00 00
[B]      5519  0x555555561948 loc_555555561948: // size=16 thread=0x100000000
[I]      5519  0x555555561948    mov rsi, qword ptr [rip+0x15cb9]         48 8b 35 b9 5c 01 00
[I]      5520  0x55555556194f    mov rbx, qword ptr [rip+0x15b3a]         48 8b 1d 3a 5b 01 00
[I]      5521  0x555555561956    jmp 0x5555555618f8                       eb a0
[B]      5522  0x5555555618f8 loc_5555555618f8: // size=5 thread=0x100000000
[I]      5522  0x5555555618f8    cmp ecx, 0x5                             83 f9 05
[I]      5523  0x5555555618fb    jnz 0x555555561906                       75 09
[B]      5524  0x555555561906 loc_555555561906: // size=45 thread=0x100000000
[I]      5524  0x555555561906    cdqe                                     48 98
[I]      5525  0x555555561908    movzx edx, byte ptr [rip+0x15e7b]        0f b6 15 7b 5e 01 00
[I]      5526  0x55555556190f    lea rcx, ptr [rax+rcx*2]                 48 8d 0c 48
[I]      5527  0x555555561913    movzx eax, byte ptr [rip+0x15bae]        0f b6 05 ae 5b 01 00
[I]      5528  0x55555556191a    lea rax, ptr [rax+rcx*2]                 48 8d 04 48
[I]      5529  0x55555556191e    lea rdx, ptr [rdx+rax*2]                 48 8d 14 42
[I]      5530  0x555555561922    lea rax, ptr [rip+0x146d7]               48 8d 05 d7 46 01 00
[I]      5531  0x555555561929    mov rcx, qword ptr [rax+rdx*8]           48 8b 0c d0
[I]      5532  0x55555556192d    cmp rsi, 0x2                             48 83 fe 02
[I]      5533  0x555555561931    jnbe 0x555555561997                      77 64
[B]      5534  0x555555561997 loc_555555561997: // size=12 thread=0x100000000
[I]      5534  0x555555561997    lea rdx, ptr [rbx+rsi*8]                 48 8d 14 f3
[I]      5535  0x55555556199b    mov rdi, rbx                             48 89 df
[C]      5536 Calling function 0x55555555b8b0(error_at_line)
[I]      5536  0x55555556199e    call 0x55555555b8b0                      e8 0d 9f ff ff
[B]      5537  0x55555555b8b0 loc_55555555b8b0: // size=63 thread=0x100000000
[I]      5537  0x55555555b8b0    push rbp                                 55
[I]      5538  0x55555555b8b1    mov rax, rsi                             48 89 f0
[I]      5539  0x55555555b8b4    shr rax, 0x1                             48 d1 e8
[I]      5540  0x55555555b8b7    mov rbp, rsp                             48 89 e5
[I]      5541  0x55555555b8ba    push r15                                 41 57
[I]      5542  0x55555555b8bc    push r14                                 41 56
[I]      5543  0x55555555b8be    push r13                                 41 55
[I]      5544  0x55555555b8c0    push r12                                 41 54
[I]      5545  0x55555555b8c2    push rbx                                 53
[I]      5546  0x55555555b8c3    mov rbx, rdi                             48 89 fb
[I]      5547  0x55555555b8c6    sub rsp, 0x48                            48 83 ec 48
[I]      5548  0x55555555b8ca    mov qword ptr [rbp-0x58], rsi            48 89 75 a8
[I]      5549  0x55555555b8ce    sub rsi, rax                             48 29 c6
[I]      5550  0x55555555b8d1    mov qword ptr [rbp-0x50], rax            48 89 45 b0
[I]      5551  0x55555555b8d5    lea rax, ptr [rdi+rax*8]                 48 8d 04 c7
[I]      5552  0x55555555b8d9    mov qword ptr [rbp-0x60], rdx            48 89 55 a0
[I]      5553  0x55555555b8dd    mov qword ptr [rbp-0x48], rcx            48 89 4d b8
[I]      5554  0x55555555b8e1    mov qword ptr [rbp-0x70], rax            48 89 45 90
[I]      5555  0x55555555b8e5    cmp rsi, 0x2                             48 83 fe 02
[I]      5556  0x55555555b8e9    jnbe 0x55555555bae0                      0f 87 f1 01 00 00
[B]      5557  0x55555555b8ef loc_55555555b8ef: // size=6 thread=0x100000000
[I]      5557  0x55555555b8ef    jz 0x55555555b9a8                        0f 84 b3 00 00 00
[B]      5558  0x55555555b9a8 loc_55555555b9a8: // size=26 thread=0x100000000
[I]      5558  0x55555555b9a8    movdqu xmm0, xmmword ptr [rax]           f3 0f 6f 00
[I]      5559  0x55555555b9ac    mov r14, rax                             49 89 c6
[I]      5560  0x55555555b9af    movhlps xmm1, xmm0                       0f 12 c8
[I]      5561  0x55555555b9b2    movq rdi, xmm0                           66 48 0f 7e c7
[I]      5562  0x55555555b9b7    movaps xmmword ptr [rbp-0x40], xmm0      0f 29 45 c0
[I]      5563  0x55555555b9bb    movq rsi, xmm1                           66 48 0f 7e ce
[C]      5564 Calling function 0x55555555d9e0(error_at_line)
[I]      5564  0x55555555b9c0    call rcx                                 ff d1
[B]      5565  0x55555555d9e0 loc_55555555d9e0: // size=23 thread=0x100000000
[I]      5565  0x55555555d9e0    nop edx, edi                             f3 0f 1e fa
[I]      5566  0x55555555d9e4    push rbp                                 55
[I]      5567  0x55555555d9e5    mov rbp, rsp                             48 89 e5
[I]      5568  0x55555555d9e8    push r12                                 41 54
[I]      5569  0x55555555d9ea    push rbx                                 53
[I]      5570  0x55555555d9eb    mov r12, qword ptr [rsi]                 4c 8b 26
[I]      5571  0x55555555d9ee    mov rbx, qword ptr [rdi]                 48 8b 1f
[C]      5572 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]      5572  0x55555555d9f1    call qword ptr [rip+0x19299]             ff 15 99 92 01 00
[B]      5573  0x55555555d9f7 loc_55555555d9f7: // size=22 thread=0x100000000
[I]      5573  0x55555555d9f7    mov rsi, r12                             4c 89 e6
[I]      5574  0x55555555d9fa    mov dword ptr [rax], 0x0                 c7 00 00 00 00 00
[I]      5575  0x55555555da00    mov rdi, rbx                             48 89 df
[I]      5576  0x55555555da03    pop rbx                                  5b
[I]      5577  0x55555555da04    pop r12                                  41 5c
[I]      5578  0x55555555da06    pop rbp                                  5d
[I]      5579  0x55555555da07    jmp qword ptr [rip+0x194bb]              ff 25 bb 94 01 00
[B]      5580  0x55555555b9c2 loc_55555555b9c2: // size=8 thread=0x100000000
[I]      5580  0x55555555b9c2    test eax, eax                            85 c0
[I]      5581  0x55555555b9c4    jle 0x55555555b8f5                       0f 8e 2b ff ff ff
[B]      5582  0x55555555b8f5 loc_55555555b8f5: // size=11 thread=0x100000000
[I]      5582  0x55555555b8f5    cmp qword ptr [rbp-0x58], 0x3            48 83 7d a8 03
[I]      5583  0x55555555b8fa    jnz 0x55555555b9f0                       0f 85 f0 00 00 00
[B]      5584  0x55555555b900 loc_55555555b900: // size=49 thread=0x100000000
[I]      5584  0x55555555b900    mov rax, qword ptr [rbx]                 48 8b 03
[I]      5585  0x55555555b903    mov rdx, qword ptr [rbp-0x60]            48 8b 55 a0
[I]      5586  0x55555555b907    mov qword ptr [rbp-0x40], rax            48 89 45 c0
[I]      5587  0x55555555b90b    mov qword ptr [rdx], rax                 48 89 02
[I]      5588  0x55555555b90e    mov rax, qword ptr [rbp-0x70]            48 8b 45 90
[I]      5589  0x55555555b912    mov r15, qword ptr [rbp-0x50]            4c 8b 7d b0
[I]      5590  0x55555555b916    xor r14d, r14d                           45 31 f6
[I]      5591  0x55555555b919    xor r13d, r13d                           45 31 ed
[I]      5592  0x55555555b91c    mov r12, qword ptr [rax]                 4c 8b 20
[I]      5593  0x55555555b91f    nop                                      90
[I]      5594  0x55555555b920    mov rdi, qword ptr [rbp-0x40]            48 8b 7d c0
[I]      5595  0x55555555b924    mov rcx, qword ptr [rbp-0x48]            48 8b 4d b8
[I]      5596  0x55555555b928    mov rsi, r12                             4c 89 e6
[I]      5597  0x55555555b92b    add r13, 0x1                             49 83 c5 01
[C]      5598 Calling function 0x55555555d9e0(error_at_line)
[I]      5598  0x55555555b92f    call rcx                                 ff d1
[B]      5599  0x55555555d9e0 loc_55555555d9e0: // size=23 thread=0x100000000
[I]      5599  0x55555555d9e0    nop edx, edi                             f3 0f 1e fa
[I]      5600  0x55555555d9e4    push rbp                                 55
[I]      5601  0x55555555d9e5    mov rbp, rsp                             48 89 e5
[I]      5602  0x55555555d9e8    push r12                                 41 54
[I]      5603  0x55555555d9ea    push rbx                                 53
[I]      5604  0x55555555d9eb    mov r12, qword ptr [rsi]                 4c 8b 26
[I]      5605  0x55555555d9ee    mov rbx, qword ptr [rdi]                 48 8b 1f
[C]      5606 Calling function 0x7fffc2e27990(__errno_location)
[!] Function 0x7fffc2e27990 is filtered, no tracing
[I]      5606  0x55555555d9f1    call qword ptr [rip+0x19299]             ff 15 99 92 01 00
[B]      5607  0x55555555d9f7 loc_55555555d9f7: // size=22 thread=0x100000000
[I]      5607  0x55555555d9f7    mov rsi, r12                             4c 89 e6
[I]      5608  0x55555555d9fa    mov dword ptr [rax], 0x0                 c7 00 00 00 00 00
[I]      5609  0x55555555da00    mov rdi, rbx                             48 89 df
[I]      5610  0x55555555da03    pop rbx                                  5b
[I]      5611  0x55555555da04    pop r12                                  41 5c
[I]      5612  0x55555555da06    pop rbp                                  5d
[I]      5613  0x55555555da07    jmp qword ptr [rip+0x194bb]              ff 25 bb 94 01 00
[B]      5614  0x55555555b931 loc_55555555b931: // size=4 thread=0x100000000
[I]      5614  0x55555555b931    test eax, eax                            85 c0
[I]      5615  0x55555555b933    jle 0x55555555b950                       7e 1b
[B]      5616  0x55555555b950 loc_55555555b950: // size=23 thread=0x100000000
[I]      5616  0x55555555b950    mov rax, qword ptr [rbp-0x40]            48 8b 45 c0
[I]      5617  0x55555555b954    add r14, 0x1                             49 83 c6 01
[I]      5618  0x55555555b958    mov qword ptr [rbx+r13*8-0x8], rax       4a 89 44 eb f8
[I]      5619  0x55555555b95d    cmp qword ptr [rbp-0x50], r14            4c 39 75 b0
[I]      5620  0x55555555b961    jz 0x55555555bac8                        0f 84 61 01 00 00
[B]      5621  0x55555555bac8 loc_55555555bac8: // size=15 thread=0x100000000
[I]      5621  0x55555555bac8    add rsp, 0x48                            48 83 c4 48
[I]      5622  0x55555555bacc    pop rbx                                  5b
[I]      5623  0x55555555bacd    pop r12                                  41 5c
[I]      5624  0x55555555bacf    pop r13                                  41 5d
[I]      5625  0x55555555bad1    pop r14                                  41 5e
[I]      5626  0x55555555bad3    pop r15                                  41 5f
[I]      5627  0x55555555bad5    pop rbp                                  5d
[I]      5628  0x55555555bad6    ret                                      c3
[B]      5629  0x5555555619a3 loc_5555555619a3: // size=11 thread=0x100000000
[I]      5629  0x5555555619a3    add rsp, 0x8                             48 83 c4 08
[I]      5630  0x5555555619a7    pop rbx                                  5b
[I]      5631  0x5555555619a8    pop r12                                  41 5c
[I]      5632  0x5555555619aa    pop r13                                  41 5d
[I]      5633  0x5555555619ac    pop rbp                                  5d
[I]      5634  0x5555555619ad    ret                                      c3
[B]      5635  0x55555556656c loc_55555556656c: // size=13 thread=0x100000000
[I]      5635  0x55555556656c    cmp byte ptr [rip+0x1120d], 0x0          80 3d 0d 12 01 00 00
[I]      5636  0x555555566573    jnz 0x555555566823                       0f 85 aa 02 00 00
[B]      5637  0x555555566579 loc_555555566579: // size=10 thread=0x100000000
[I]      5637  0x555555566579    mov eax, dword ptr [rip+0x10da5]         8b 05 a5 0d 01 00
[I]      5638  0x55555556657f    test eax, eax                            85 c0
[I]      5639  0x555555566581    jz 0x5555555665c0                        74 3d
[B]      5640  0x555555566583 loc_555555566583: // size=9 thread=0x100000000
[I]      5640  0x555555566583    cmp byte ptr [rip+0x10d9e], 0x0          80 3d 9e 0d 01 00 00
[I]      5641  0x55555556658a    jnz 0x5555555665c0                       75 34
[B]      5642  0x55555556658c loc_55555556658c: // size=14 thread=0x100000000
[I]      5642  0x55555556658c    cmp qword ptr [rip+0x11074], 0x0         48 83 3d 74 10 01 00 00
[I]      5643  0x555555566594    jnz 0x55555556665d                       0f 85 c3 00 00 00
[B]      5644  0x55555556665d loc_55555556665d: // size=19 thread=0x100000000
[I]      5644  0x55555556665d    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      5645  0x555555566661    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      5646  0x55555556666a    jnz 0x555555566923                       0f 85 b3 02 00 00
[B]      5647  0x555555566670 loc_555555566670: // size=19 thread=0x100000000
[I]      5647  0x555555566670    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      5648  0x555555566674    pop rbx                                  5b
[I]      5649  0x555555566675    pop r12                                  41 5c
[I]      5650  0x555555566677    pop r13                                  41 5d
[I]      5651  0x555555566679    pop r14                                  41 5e
[I]      5652  0x55555556667b    pop r15                                  41 5f
[I]      5653  0x55555556667d    pop rbp                                  5d
[I]      5654  0x55555556667e    jmp 0x555555563c10                       e9 8d d5 ff ff
[B]      5655  0x555555563c10 loc_555555563c10: // size=13 thread=0x100000000
[I]      5655  0x555555563c10    cmp dword ptr [rip+0x1370d], 0x4         83 3d 0d 37 01 00 04
[I]      5656  0x555555563c17    jnbe 0x555555564093                      0f 87 76 04 00 00
[B]      5657  0x555555563c1d loc_555555563c1d: // size=40 thread=0x100000000
[I]      5657  0x555555563c1d    push rbp                                 55
[I]      5658  0x555555563c1e    lea rdx, ptr [rip+0x9583]                48 8d 15 83 95 00 00
[I]      5659  0x555555563c25    mov rbp, rsp                             48 89 e5
[I]      5660  0x555555563c28    push r15                                 41 57
[I]      5661  0x555555563c2a    push r14                                 41 56
[I]      5662  0x555555563c2c    push r13                                 41 55
[I]      5663  0x555555563c2e    push r12                                 41 54
[I]      5664  0x555555563c30    push rbx                                 53
[I]      5665  0x555555563c31    sub rsp, 0x38                            48 83 ec 38
[I]      5666  0x555555563c35    mov eax, dword ptr [rip+0x136e9]         8b 05 e9 36 01 00
[I]      5667  0x555555563c3b    movsxd rax, dword ptr [rdx+rax*4]        48 63 04 82
[I]      5668  0x555555563c3f    add rax, rdx                             48 01 d0
[I]      5669  0x555555563c42    notrack jmp rax                          3e ff e0
[B]      5670  0x555555563e00 loc_555555563e00: // size=14 thread=0x100000000
[I]      5670  0x555555563e00    cmp qword ptr [rip+0x136b0], 0x0         48 83 3d b0 36 01 00 00
[I]      5671  0x555555563e08    jz 0x555555564020                        0f 84 12 02 00 00
[B]      5672  0x555555563e0e loc_555555563e0e: // size=10 thread=0x100000000
[I]      5672  0x555555563e0e    mov edi, 0x1                             bf 01 00 00 00
[C]      5673 Calling function 0x555555563920(error_at_line)
[I]      5673  0x555555563e13    call 0x555555563920                      e8 08 fb ff ff
[B]      5674  0x555555563920 loc_555555563920: // size=67 thread=0x100000000
[I]      5674  0x555555563920    push rbp                                 55
[I]      5675  0x555555563921    mov rbp, rsp                             48 89 e5
[I]      5676  0x555555563924    push r15                                 41 57
[I]      5677  0x555555563926    push r14                                 41 56
[I]      5678  0x555555563928    push r13                                 41 55
[I]      5679  0x55555556392a    mov r13d, edi                            41 89 fd
[I]      5680  0x55555556392d    push r12                                 41 54
[I]      5681  0x55555556392f    push rbx                                 53
[I]      5682  0x555555563930    sub rsp, 0x18                            48 83 ec 18
[I]      5683  0x555555563934    mov rax, qword ptr [rip+0x13b75]         48 8b 05 75 3b 01 00
[I]      5684  0x55555556393b    mov r9, qword ptr [rip+0x13cc6]          4c 8b 0d c6 3c 01 00
[I]      5685  0x555555563942    mov r15, qword ptr [rip+0x13a47]         4c 8b 3d 47 3a 01 00
[I]      5686  0x555555563949    cmp rax, r9                              4c 39 c8
[I]      5687  0x55555556394c    mov rbx, r9                              4c 89 cb
[I]      5688  0x55555556394f    cmovbe rbx, rax                          48 0f 46 d8
[I]      5689  0x555555563953    test rax, rax                            48 85 c0
[I]      5690  0x555555563956    cmovz rbx, r9                            49 0f 44 d9
[I]      5691  0x55555556395a    cmp rbx, r15                             4c 39 fb
[I]      5692  0x55555556395d    jnle 0x555555563b05                      0f 8f a2 01 00 00
[B]      5693  0x555555563b05 loc_555555563b05: // size=42 thread=0x100000000
[I]      5693  0x555555563b05    mov rdi, qword ptr [rip+0x1388c]         48 8b 3d 8c 38 01 00
[I]      5694  0x555555563b0c    mov rdx, rbx                             48 89 da
[I]      5695  0x555555563b0f    mov rcx, 0xffffffffffffffff              48 c7 c1 ff ff ff ff
[I]      5696  0x555555563b16    mov r8d, 0x18                            41 b8 18 00 00 00
[I]      5697  0x555555563b1c    sub rdx, r15                             4c 29 fa
[I]      5698  0x555555563b1f    lea rsi, ptr [rip+0x1386a]               48 8d 35 6a 38 01 00
[I]      5699  0x555555563b26    lea r12, ptr [r15+0x1]                   4d 8d 67 01
[C]      5700 Calling function 0x555555563820(error_at_line)
[I]      5700  0x555555563b2a    call 0x555555563820                      e8 f1 fc ff ff
[B]      5701  0x555555563820 loc_555555563820: // size=38 thread=0x100000000
[I]      5701  0x555555563820    nop edx, edi                             f3 0f 1e fa
[I]      5702  0x555555563824    push rbp                                 55
[I]      5703  0x555555563825    mov r10, rcx                             49 89 ca
[I]      5704  0x555555563828    mov r9, rdx                              49 89 d1
[I]      5705  0x55555556382b    mov rbp, rsp                             48 89 e5
[I]      5706  0x55555556382e    push r12                                 41 54
[I]      5707  0x555555563830    mov r12, rsi                             49 89 f4
[I]      5708  0x555555563833    push rbx                                 53
[I]      5709  0x555555563834    mov rcx, qword ptr [rsi]                 48 8b 0e
[I]      5710  0x555555563837    mov rbx, rcx                             48 89 cb
[I]      5711  0x55555556383a    sar rbx, 0x1                             48 d1 fb
[I]      5712  0x55555556383d    add rbx, rcx                             48 01 cb
[I]      5713  0x555555563840    jo 0x555555563906                        0f 80 c0 00 00 00
[B]      5714  0x555555563846 loc_555555563846: // size=33 thread=0x100000000
[I]      5714  0x555555563846    mov eax, 0x7fffffff                      b8 ff ff ff 7f
[I]      5715  0x55555556384b    cmp rbx, rax                             48 39 c3
[I]      5716  0x55555556384e    cmovle rax, rbx                          48 0f 4e c3
[I]      5717  0x555555563852    cmp r10, 0xffffffffffffffff              49 83 fa ff
[I]      5718  0x555555563856    cmovnz rbx, rax                          48 0f 45 d8
[I]      5719  0x55555556385a    mov rax, rbx                             48 89 d8
[I]      5720  0x55555556385d    imul rax, r8                             49 0f af c0
[I]      5721  0x555555563861    jo 0x5555555638fa                        0f 80 93 00 00 00
[B]      5722  0x555555563867 loc_555555563867: // size=6 thread=0x100000000
[I]      5722  0x555555563867    cmp rax, 0x7f                            48 83 f8 7f
[I]      5723  0x55555556386b    jle 0x5555555638d0                       7e 63
[B]      5724  0x5555555638d0 loc_5555555638d0: // size=27 thread=0x100000000
[I]      5724  0x5555555638d0    mov esi, 0x80                            be 80 00 00 00
[I]      5725  0x5555555638d5    mov rax, rsi                             48 89 f0
[I]      5726  0x5555555638d8    cqo                                      48 99
[I]      5727  0x5555555638da    idiv r8                                  49 f7 f8
[I]      5728  0x5555555638dd    mov rbx, rax                             48 89 c3
[I]      5729  0x5555555638e0    mov rax, rsi                             48 89 f0
[I]      5730  0x5555555638e3    sub rax, rdx                             48 29 d0
[I]      5731  0x5555555638e6    test rdi, rdi                            48 85 ff
[I]      5732  0x5555555638e9    jnz 0x555555563880                       75 95
[B]      5733  0x5555555638eb loc_5555555638eb: // size=10 thread=0x100000000
[I]      5733  0x5555555638eb    mov qword ptr [r12], 0x0                 49 c7 04 24 00 00 00 00
[I]      5734  0x5555555638f3    jmp 0x555555563880                       eb 8b
[B]      5735  0x555555563880 loc_555555563880: // size=11 thread=0x100000000
[I]      5735  0x555555563880    mov rdx, rbx                             48 89 da
[I]      5736  0x555555563883    sub rdx, rcx                             48 29 ca
[I]      5737  0x555555563886    cmp rdx, r9                              4c 39 ca
[I]      5738  0x555555563889    jnl 0x5555555638ab                       7d 20
[B]      5739  0x5555555638ab loc_5555555638ab: // size=18 thread=0x100000000
[I]      5739  0x5555555638ab    test rax, rax                            48 85 c0
[I]      5740  0x5555555638ae    mov esi, 0x1                             be 01 00 00 00
[I]      5741  0x5555555638b3    cmovnz rsi, rax                          48 0f 45 f0
[C]      5742 Calling function 0x7fffc2ea82f0(__libc_realloc)
[!] Function 0x7fffc2ea82f0 is filtered, no tracing
[I]      5742  0x5555555638b7    call qword ptr [rip+0x1362b]             ff 15 2b 36 01 00
[B]      5743  0x5555555638bd loc_5555555638bd: // size=5 thread=0x100000000
[I]      5743  0x5555555638bd    test rax, rax                            48 85 c0
[I]      5744  0x5555555638c0    jz 0x5555555638f5                        74 33
[B]      5745  0x5555555638c2 loc_5555555638c2: // size=9 thread=0x100000000
[I]      5745  0x5555555638c2    mov qword ptr [r12], rbx                 49 89 1c 24
[I]      5746  0x5555555638c6    pop rbx                                  5b
[I]      5747  0x5555555638c7    pop r12                                  41 5c
[I]      5748  0x5555555638c9    pop rbp                                  5d
[I]      5749  0x5555555638ca    ret                                      c3
[B]      5750  0x555555563b2f loc_555555563b2f: // size=35 thread=0x100000000
[I]      5750  0x555555563b2f    mov rcx, qword ptr [rip+0x1385a]         48 8b 0d 5a 38 01 00
[I]      5751  0x555555563b36    mov qword ptr [rip+0x1385b], rax         48 89 05 5b 38 01 00
[I]      5752  0x555555563b3d    mov r14, rax                             49 89 c6
[I]      5753  0x555555563b40    mov rdx, rcx                             48 89 ca
[I]      5754  0x555555563b43    mov rax, rcx                             48 89 c8
[I]      5755  0x555555563b46    sub rax, r15                             4c 29 f8
[I]      5756  0x555555563b49    add rdx, r12                             4c 01 e2
[I]      5757  0x555555563b4c    jo 0x555555563bff                        0f 80 ad 00 00 00
[B]      5758  0x555555563b52 loc_555555563b52: // size=10 thread=0x100000000
[I]      5758  0x555555563b52    imul rax, rdx                            48 0f af c2
[I]      5759  0x555555563b56    jo 0x555555563bff                        0f 80 a3 00 00 00
[B]      5760  0x555555563b5c loc_555555563b5c: // size=21 thread=0x100000000
[I]      5760  0x555555563b5c    sar rax, 0x1                             48 d1 f8
[I]      5761  0x555555563b5f    lea rdx, ptr [rax*8]                     48 8d 14 c5 00 00 00 00
[I]      5762  0x555555563b67    shr rax, 0x3d                            48 c1 e8 3d
[I]      5763  0x555555563b6b    jnz 0x555555563bf3                       0f 85 82 00 00 00
[B]      5764  0x555555563b71 loc_555555563b71: // size=25 thread=0x100000000
[I]      5764  0x555555563b71    test rdx, rdx                            48 85 d2
[I]      5765  0x555555563b74    mov eax, 0x1                             b8 01 00 00 00
[I]      5766  0x555555563b79    mov qword ptr [rbp-0x38], rcx            48 89 4d c8
[I]      5767  0x555555563b7d    cmovnz rax, rdx                          48 0f 45 c2
[I]      5768  0x555555563b81    mov rdi, rax                             48 89 c7
[C]      5769 Calling function 0x7fffc2ea7970(malloc)
[!] Function 0x7fffc2ea7970 is filtered, no tracing
[I]      5769  0x555555563b84    call qword ptr [rip+0x13326]             ff 15 26 33 01 00
[B]      5770  0x555555563b8a loc_555555563b8a: // size=9 thread=0x100000000
[I]      5770  0x555555563b8a    mov rcx, qword ptr [rbp-0x38]            48 8b 4d c8
[I]      5771  0x555555563b8e    test rax, rax                            48 85 c0
[I]      5772  0x555555563b91    jz 0x555555563bff                        74 6c
[B]      5773  0x555555563b93 loc_555555563b93: // size=5 thread=0x100000000
[I]      5773  0x555555563b93    cmp r15, rcx                             49 39 cf
[I]      5774  0x555555563b96    jnl 0x555555563bd5                       7d 3d
[B]      5775  0x555555563b98 loc_555555563b98: // size=61 thread=0x100000000
[I]      5775  0x555555563b98    lea rdx, ptr [r12*8]                     4a 8d 14 e5 00 00 00 00
[I]      5776  0x555555563ba0    lea rsi, ptr [rcx*8+0x8]                 48 8d 34 cd 08 00 00 00
[I]      5777  0x555555563ba8    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      5778  0x555555563bb3    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      5779  0x555555563bbe    data16 nop                               66 90
[I]      5780  0x555555563bc0    lea rcx, ptr [rdx+rdx*2]                 48 8d 0c 52
[I]      5781  0x555555563bc4    mov qword ptr [r14+rcx*1-0x8], rax       49 89 44 0e f8
[I]      5782  0x555555563bc9    add rax, rdx                             48 01 d0
[I]      5783  0x555555563bcc    add rdx, 0x8                             48 83 c2 08
[I]      5784  0x555555563bd0    cmp rdx, rsi                             48 39 f2
[I]      5785  0x555555563bd3    jnz 0x555555563bc0                       75 eb
[B]      5786  0x555555563bc0 loc_555555563bc0: // size=21 thread=0x100000000
[I]      5786  0x555555563bc0    lea rcx, ptr [rdx+rdx*2]                 48 8d 0c 52
[I]      5787  0x555555563bc4    mov qword ptr [r14+rcx*1-0x8], rax       49 89 44 0e f8
[I]      5788  0x555555563bc9    add rax, rdx                             48 01 d0
[I]      5789  0x555555563bcc    add rdx, 0x8                             48 83 c2 08
[I]      5790  0x555555563bd0    cmp rdx, rsi                             48 39 f2
[I]      5791  0x555555563bd3    jnz 0x555555563bc0                       75 eb
[B]      5792  0x555555563bc0 loc_555555563bc0: // size=21 thread=0x100000000
[I]      5792  0x555555563bc0    lea rcx, ptr [rdx+rdx*2]                 48 8d 0c 52
[I]      5793  0x555555563bc4    mov qword ptr [r14+rcx*1-0x8], rax       49 89 44 0e f8
[I]      5794  0x555555563bc9    add rax, rdx                             48 01 d0
[I]      5795  0x555555563bcc    add rdx, 0x8                             48 83 c2 08
[I]      5796  0x555555563bd0    cmp rdx, rsi                             48 39 f2
[I]      5797  0x555555563bd3    jnz 0x555555563bc0                       75 eb
[B]      5798  0x555555563bc0 loc_555555563bc0: // size=21 thread=0x100000000
[I]      5798  0x555555563bc0    lea rcx, ptr [rdx+rdx*2]                 48 8d 0c 52
[I]      5799  0x555555563bc4    mov qword ptr [r14+rcx*1-0x8], rax       49 89 44 0e f8
[I]      5800  0x555555563bc9    add rax, rdx                             48 01 d0
[I]      5801  0x555555563bcc    add rdx, 0x8                             48 83 c2 08
[I]      5802  0x555555563bd0    cmp rdx, rsi                             48 39 f2
[I]      5803  0x555555563bd3    jnz 0x555555563bc0                       75 eb
[B]      5804  0x555555563bc0 loc_555555563bc0: // size=21 thread=0x100000000
[I]      5804  0x555555563bc0    lea rcx, ptr [rdx+rdx*2]                 48 8d 0c 52
[I]      5805  0x555555563bc4    mov qword ptr [r14+rcx*1-0x8], rax       49 89 44 0e f8
[I]      5806  0x555555563bc9    add rax, rdx                             48 01 d0
[I]      5807  0x555555563bcc    add rdx, 0x8                             48 83 c2 08
[I]      5808  0x555555563bd0    cmp rdx, rsi                             48 39 f2
[I]      5809  0x555555563bd3    jnz 0x555555563bc0                       75 eb
[B]      5810  0x555555563bd5 loc_555555563bd5: // size=16 thread=0x100000000
[I]      5810  0x555555563bd5    mov r9, qword ptr [rip+0x13a2c]          4c 8b 0d 2c 3a 01 00
[I]      5811  0x555555563bdc    test rbx, rbx                            48 85 db
[I]      5812  0x555555563bdf    jnle 0x55555556396c                      0f 8f 87 fd ff ff
[B]      5813  0x55555556396c loc_55555556396c: // size=49 thread=0x100000000
[I]      5813  0x55555556396c    mov rdi, qword ptr [rip+0x13a25]         48 8b 3d 25 3a 01 00
[I]      5814  0x555555563973    lea r8, ptr [rbx+rbx*2+0x3]              4c 8d 44 5b 03
[I]      5815  0x555555563978    xor esi, esi                             31 f6
[I]      5816  0x55555556397a    mov edx, 0x3                             ba 03 00 00 00
[I]      5817  0x55555556397f    nop                                      90
[I]      5818  0x555555563980    mov rax, qword ptr [rdi+rdx*8-0x8]       48 8b 44 d7 f8
[I]      5819  0x555555563985    add rsi, 0x8                             48 83 c6 08
[I]      5820  0x555555563989    mov byte ptr [rdi+rdx*8-0x18], 0x1       c6 44 d7 e8 01
[I]      5821  0x55555556398e    mov qword ptr [rdi+rdx*8-0x10], rdx      48 89 54 d7 f0
[I]      5822  0x555555563993    lea rcx, ptr [rax+rsi*1]                 48 8d 0c 30
[I]      5823  0x555555563997    test sil, 0x8                            40 f6 c6 08
[I]      5824  0x55555556399b    jz 0x5555555639c0                        74 23
[B]      5825  0x55555556399d loc_55555556399d: // size=16 thread=0x100000000
[I]      5825  0x55555556399d    mov qword ptr [rax], 0x3                 48 c7 00 03 00 00 00
[I]      5826  0x5555555639a4    add rax, 0x8                             48 83 c0 08
[I]      5827  0x5555555639a8    cmp rcx, rax                             48 39 c1
[I]      5828  0x5555555639ab    jz 0x5555555639d8                        74 2b
[B]      5829  0x5555555639d8 loc_5555555639d8: // size=9 thread=0x100000000
[I]      5829  0x5555555639d8    add rdx, 0x3                             48 83 c2 03
[I]      5830  0x5555555639dc    cmp rdx, r8                              4c 39 c2
[I]      5831  0x5555555639df    jnz 0x555555563980                       75 9f
[B]      5832  0x555555563980 loc_555555563980: // size=29 thread=0x100000000
[I]      5832  0x555555563980    mov rax, qword ptr [rdi+rdx*8-0x8]       48 8b 44 d7 f8
[I]      5833  0x555555563985    add rsi, 0x8                             48 83 c6 08
[I]      5834  0x555555563989    mov byte ptr [rdi+rdx*8-0x18], 0x1       c6 44 d7 e8 01
[I]      5835  0x55555556398e    mov qword ptr [rdi+rdx*8-0x10], rdx      48 89 54 d7 f0
[I]      5836  0x555555563993    lea rcx, ptr [rax+rsi*1]                 48 8d 0c 30
[I]      5837  0x555555563997    test sil, 0x8                            40 f6 c6 08
[I]      5838  0x55555556399b    jz 0x5555555639c0                        74 23
[B]      5839  0x5555555639c0 loc_5555555639c0: // size=24 thread=0x100000000
[I]      5839  0x5555555639c0    mov qword ptr [rax], 0x3                 48 c7 00 03 00 00 00
[I]      5840  0x5555555639c7    add rax, 0x10                            48 83 c0 10
[I]      5841  0x5555555639cb    mov qword ptr [rax-0x8], 0x3             48 c7 40 f8 03 00 00 00
[I]      5842  0x5555555639d3    cmp rcx, rax                             48 39 c1
[I]      5843  0x5555555639d6    jnz 0x5555555639c0                       75 e8
[B]      5844  0x5555555639d8 loc_5555555639d8: // size=9 thread=0x100000000
[I]      5844  0x5555555639d8    add rdx, 0x3                             48 83 c2 03
[I]      5845  0x5555555639dc    cmp rdx, r8                              4c 39 c2
[I]      5846  0x5555555639df    jnz 0x555555563980                       75 9f
[B]      5847  0x555555563980 loc_555555563980: // size=29 thread=0x100000000
[I]      5847  0x555555563980    mov rax, qword ptr [rdi+rdx*8-0x8]       48 8b 44 d7 f8
[I]      5848  0x555555563985    add rsi, 0x8                             48 83 c6 08
[I]      5849  0x555555563989    mov byte ptr [rdi+rdx*8-0x18], 0x1       c6 44 d7 e8 01
[I]      5850  0x55555556398e    mov qword ptr [rdi+rdx*8-0x10], rdx      48 89 54 d7 f0
[I]      5851  0x555555563993    lea rcx, ptr [rax+rsi*1]                 48 8d 0c 30
[I]      5852  0x555555563997    test sil, 0x8                            40 f6 c6 08
[I]      5853  0x55555556399b    jz 0x5555555639c0                        74 23
[B]      5854  0x55555556399d loc_55555556399d: // size=16 thread=0x100000000
[I]      5854  0x55555556399d    mov qword ptr [rax], 0x3                 48 c7 00 03 00 00 00
[I]      5855  0x5555555639a4    add rax, 0x8                             48 83 c0 08
[I]      5856  0x5555555639a8    cmp rcx, rax                             48 39 c1
[I]      5857  0x5555555639ab    jz 0x5555555639d8                        74 2b
[B]      5858  0x5555555639ad loc_5555555639ad: // size=43 thread=0x100000000
[I]      5858  0x5555555639ad    nop word ptr [rax+rax*1]                 66 66 2e 0f 1f 84 00 00 00 00 00
[I]      5859  0x5555555639b8    nop dword ptr [rax+rax*1]                0f 1f 84 00 00 00 00 00
[I]      5860  0x5555555639c0    mov qword ptr [rax], 0x3                 48 c7 00 03 00 00 00
[I]      5861  0x5555555639c7    add rax, 0x10                            48 83 c0 10
[I]      5862  0x5555555639cb    mov qword ptr [rax-0x8], 0x3             48 c7 40 f8 03 00 00 00
[I]      5863  0x5555555639d3    cmp rcx, rax                             48 39 c1
[I]      5864  0x5555555639d6    jnz 0x5555555639c0                       75 e8
[B]      5865  0x5555555639d8 loc_5555555639d8: // size=9 thread=0x100000000
[I]      5865  0x5555555639d8    add rdx, 0x3                             48 83 c2 03
[I]      5866  0x5555555639dc    cmp rdx, r8                              4c 39 c2
[I]      5867  0x5555555639df    jnz 0x555555563980                       75 9f
[B]      5868  0x5555555639e1 loc_5555555639e1: // size=9 thread=0x100000000
[I]      5868  0x5555555639e1    test r9, r9                              4d 85 c9
[I]      5869  0x5555555639e4    jle 0x555555563aad                       0f 8e c3 00 00 00
[B]      5870  0x5555555639ea loc_5555555639ea: // size=22 thread=0x100000000
[I]      5870  0x5555555639ea    xor r12d, r12d                           45 31 e4
[I]      5871  0x5555555639ed    nop dword ptr [rax]                      0f 1f 00
[I]      5872  0x5555555639f0    mov rax, qword ptr [rip+0x13a99]         48 8b 05 99 3a 01 00
[I]      5873  0x5555555639f7    mov rdi, qword ptr [rax+r12*8]           4a 8b 3c e0
[C]      5874 Calling function 0x555555560db0(error_at_line)
[I]      5874  0x5555555639fb    call 0x555555560db0                      e8 b0 d3 ff ff
[B]      5875  0x555555560db0 loc_555555560db0: // size=53 thread=0x100000000
[I]      5875  0x555555560db0    push rbp                                 55
[I]      5876  0x555555560db1    mov rbp, rsp                             48 89 e5
[I]      5877  0x555555560db4    push r13                                 41 55
[I]      5878  0x555555560db6    push r12                                 41 54
[I]      5879  0x555555560db8    push rbx                                 53
[I]      5880  0x555555560db9    sub rsp, 0x2a8                           48 81 ec a8 02 00 00
[I]      5881  0x555555560dc0    cmp byte ptr [rip+0x16562], 0x0          80 3d 62 65 01 00 00
[I]      5882  0x555555560dc7    movzx r13d, byte ptr [rip+0x16559]       44 0f b6 2d 59 65 01 00
[I]      5883  0x555555560dcf    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      5884  0x555555560dd8    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      5885  0x555555560ddc    mov r12, rdi                             49 89 fc
[I]      5886  0x555555560ddf    jz 0x555555560e88                        0f 84 a3 00 00 00
[B]      5887  0x555555560e88 loc_555555560e88: // size=7 thread=0x100000000
[I]      5887  0x555555560e88    xor ebx, ebx                             31 db
[I]      5888  0x555555560e8a    test r13b, r13b                          45 84 ed
[I]      5889  0x555555560e8d    jz 0x555555560e14                        74 85
[B]      5890  0x555555560e14 loc_555555560e14: // size=13 thread=0x100000000
[I]      5890  0x555555560e14    cmp byte ptr [rip+0x164fd], 0x0          80 3d fd 64 01 00 00
[I]      5891  0x555555560e1b    jnz 0x555555560ee8                       0f 85 c7 00 00 00
[B]      5892  0x555555560e21 loc_555555560e21: // size=17 thread=0x100000000
[I]      5892  0x555555560e21    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      5893  0x555555560e29    test rax, rax                            48 85 c0
[I]      5894  0x555555560e2c    jz 0x555555560f14                        0f 84 e2 00 00 00
[B]      5895  0x555555560e32 loc_555555560e32: // size=13 thread=0x100000000
[I]      5895  0x555555560e32    add rbx, rax                             48 01 c3
[I]      5896  0x555555560e35    mov eax, dword ptr [rip+0x164e1]         8b 05 e1 64 01 00
[I]      5897  0x555555560e3b    test eax, eax                            85 c0
[I]      5898  0x555555560e3d    jz 0x555555560e60                        74 21
[B]      5899  0x555555560e60 loc_555555560e60: // size=19 thread=0x100000000
[I]      5899  0x555555560e60    mov rax, qword ptr [rbp-0x28]            48 8b 45 d8
[I]      5900  0x555555560e64    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      5901  0x555555560e6d    jnz 0x555555560fe7                       0f 85 74 01 00 00
[B]      5902  0x555555560e73 loc_555555560e73: // size=17 thread=0x100000000
[I]      5902  0x555555560e73    add rsp, 0x2a8                           48 81 c4 a8 02 00 00
[I]      5903  0x555555560e7a    mov rax, rbx                             48 89 d8
[I]      5904  0x555555560e7d    pop rbx                                  5b
[I]      5905  0x555555560e7e    pop r12                                  41 5c
[I]      5906  0x555555560e80    pop r13                                  41 5d
[I]      5907  0x555555560e82    pop rbp                                  5d
[I]      5908  0x555555560e83    ret                                      c3
[B]      5909  0x555555563a00 loc_555555563a00: // size=19 thread=0x100000000
[I]      5909  0x555555563a00    mov r10, qword ptr [rip+0x13c01]         4c 8b 15 01 3c 01 00
[I]      5910  0x555555563a07    mov r9, rax                              49 89 c1
[I]      5911  0x555555563a0a    test rbx, rbx                            48 85 db
[I]      5912  0x555555563a0d    jle 0x555555563aa0                       0f 8e 8d 00 00 00
[B]      5913  0x555555563a13 loc_555555563a13: // size=18 thread=0x100000000
[I]      5913  0x555555563a13    mov r11, qword ptr [rip+0x13a9e]         4c 8b 1d 9e 3a 01 00
[I]      5914  0x555555563a1a    mov rsi, qword ptr [rip+0x13977]         48 8b 35 77 39 01 00
[I]      5915  0x555555563a21    xor ecx, ecx                             31 c9
[I]      5916  0x555555563a23    jmp 0x555555563a79                       eb 54
[B]      5917  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      5917  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      5918  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      5919  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      5920  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      5921  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      5921  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      5922  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      5923  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      5923  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      5924  0x555555563a2d    cqo                                      48 99
[I]      5925  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      5926  0x555555563a32    mov r8, rax                              49 89 c0
[I]      5927  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      5928  0x555555563a38    cqo                                      48 99
[I]      5929  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      5930  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      5931  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      5932  0x555555563a44    xor eax, eax                             31 c0
[I]      5933  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      5934  0x555555563a49    setnz al                                 0f 95 c0
[I]      5935  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      5936  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      5937  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      5938  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      5939  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      5940  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      5940  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      5941  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      5942  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      5943  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      5944  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      5945  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      5946  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      5947  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      5948  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      5949  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      5949  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      5950  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      5951  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      5952  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      5953  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      5953  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      5954  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      5955  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      5955  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      5956  0x555555563a2d    cqo                                      48 99
[I]      5957  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      5958  0x555555563a32    mov r8, rax                              49 89 c0
[I]      5959  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      5960  0x555555563a38    cqo                                      48 99
[I]      5961  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      5962  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      5963  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      5964  0x555555563a44    xor eax, eax                             31 c0
[I]      5965  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      5966  0x555555563a49    setnz al                                 0f 95 c0
[I]      5967  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      5968  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      5969  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      5970  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      5971  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      5972  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      5972  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      5973  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      5974  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      5975  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      5976  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      5977  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      5978  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      5979  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      5980  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      5981  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      5981  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      5982  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      5983  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      5984  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      5985  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      5985  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      5986  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      5987  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      5987  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      5988  0x555555563a2d    cqo                                      48 99
[I]      5989  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      5990  0x555555563a32    mov r8, rax                              49 89 c0
[I]      5991  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      5992  0x555555563a38    cqo                                      48 99
[I]      5993  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      5994  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      5995  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      5996  0x555555563a44    xor eax, eax                             31 c0
[I]      5997  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      5998  0x555555563a49    setnz al                                 0f 95 c0
[I]      5999  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      6000  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      6001  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      6002  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      6003  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      6004  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      6004  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      6005  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      6006  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      6007  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      6008  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      6009  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      6010  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      6011  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      6012  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      6013  0x555555563aa0 loc_555555563aa0: // size=13 thread=0x100000000
[I]      6013  0x555555563aa0    add r12, 0x1                             49 83 c4 01
[I]      6014  0x555555563aa4    cmp r12, r10                             4d 39 d4
[I]      6015  0x555555563aa7    jl 0x5555555639f0                        0f 8c 43 ff ff ff
[B]      6016  0x5555555639f0 loc_5555555639f0: // size=16 thread=0x100000000
[I]      6016  0x5555555639f0    mov rax, qword ptr [rip+0x13a99]         48 8b 05 99 3a 01 00
[I]      6017  0x5555555639f7    mov rdi, qword ptr [rax+r12*8]           4a 8b 3c e0
[C]      6018 Calling function 0x555555560db0(error_at_line)
[I]      6018  0x5555555639fb    call 0x555555560db0                      e8 b0 d3 ff ff
[B]      6019  0x555555560db0 loc_555555560db0: // size=53 thread=0x100000000
[I]      6019  0x555555560db0    push rbp                                 55
[I]      6020  0x555555560db1    mov rbp, rsp                             48 89 e5
[I]      6021  0x555555560db4    push r13                                 41 55
[I]      6022  0x555555560db6    push r12                                 41 54
[I]      6023  0x555555560db8    push rbx                                 53
[I]      6024  0x555555560db9    sub rsp, 0x2a8                           48 81 ec a8 02 00 00
[I]      6025  0x555555560dc0    cmp byte ptr [rip+0x16562], 0x0          80 3d 62 65 01 00 00
[I]      6026  0x555555560dc7    movzx r13d, byte ptr [rip+0x16559]       44 0f b6 2d 59 65 01 00
[I]      6027  0x555555560dcf    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6028  0x555555560dd8    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      6029  0x555555560ddc    mov r12, rdi                             49 89 fc
[I]      6030  0x555555560ddf    jz 0x555555560e88                        0f 84 a3 00 00 00
[B]      6031  0x555555560e88 loc_555555560e88: // size=7 thread=0x100000000
[I]      6031  0x555555560e88    xor ebx, ebx                             31 db
[I]      6032  0x555555560e8a    test r13b, r13b                          45 84 ed
[I]      6033  0x555555560e8d    jz 0x555555560e14                        74 85
[B]      6034  0x555555560e14 loc_555555560e14: // size=13 thread=0x100000000
[I]      6034  0x555555560e14    cmp byte ptr [rip+0x164fd], 0x0          80 3d fd 64 01 00 00
[I]      6035  0x555555560e1b    jnz 0x555555560ee8                       0f 85 c7 00 00 00
[B]      6036  0x555555560e21 loc_555555560e21: // size=17 thread=0x100000000
[I]      6036  0x555555560e21    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      6037  0x555555560e29    test rax, rax                            48 85 c0
[I]      6038  0x555555560e2c    jz 0x555555560f14                        0f 84 e2 00 00 00
[B]      6039  0x555555560e32 loc_555555560e32: // size=13 thread=0x100000000
[I]      6039  0x555555560e32    add rbx, rax                             48 01 c3
[I]      6040  0x555555560e35    mov eax, dword ptr [rip+0x164e1]         8b 05 e1 64 01 00
[I]      6041  0x555555560e3b    test eax, eax                            85 c0
[I]      6042  0x555555560e3d    jz 0x555555560e60                        74 21
[B]      6043  0x555555560e60 loc_555555560e60: // size=19 thread=0x100000000
[I]      6043  0x555555560e60    mov rax, qword ptr [rbp-0x28]            48 8b 45 d8
[I]      6044  0x555555560e64    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6045  0x555555560e6d    jnz 0x555555560fe7                       0f 85 74 01 00 00
[B]      6046  0x555555560e73 loc_555555560e73: // size=17 thread=0x100000000
[I]      6046  0x555555560e73    add rsp, 0x2a8                           48 81 c4 a8 02 00 00
[I]      6047  0x555555560e7a    mov rax, rbx                             48 89 d8
[I]      6048  0x555555560e7d    pop rbx                                  5b
[I]      6049  0x555555560e7e    pop r12                                  41 5c
[I]      6050  0x555555560e80    pop r13                                  41 5d
[I]      6051  0x555555560e82    pop rbp                                  5d
[I]      6052  0x555555560e83    ret                                      c3
[B]      6053  0x555555563a00 loc_555555563a00: // size=19 thread=0x100000000
[I]      6053  0x555555563a00    mov r10, qword ptr [rip+0x13c01]         4c 8b 15 01 3c 01 00
[I]      6054  0x555555563a07    mov r9, rax                              49 89 c1
[I]      6055  0x555555563a0a    test rbx, rbx                            48 85 db
[I]      6056  0x555555563a0d    jle 0x555555563aa0                       0f 8e 8d 00 00 00
[B]      6057  0x555555563a13 loc_555555563a13: // size=18 thread=0x100000000
[I]      6057  0x555555563a13    mov r11, qword ptr [rip+0x13a9e]         4c 8b 1d 9e 3a 01 00
[I]      6058  0x555555563a1a    mov rsi, qword ptr [rip+0x13977]         48 8b 35 77 39 01 00
[I]      6059  0x555555563a21    xor ecx, ecx                             31 c9
[I]      6060  0x555555563a23    jmp 0x555555563a79                       eb 54
[B]      6061  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      6061  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      6062  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      6063  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      6064  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      6065  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      6065  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      6066  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      6067  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      6067  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      6068  0x555555563a2d    cqo                                      48 99
[I]      6069  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      6070  0x555555563a32    mov r8, rax                              49 89 c0
[I]      6071  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      6072  0x555555563a38    cqo                                      48 99
[I]      6073  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      6074  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      6075  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      6076  0x555555563a44    xor eax, eax                             31 c0
[I]      6077  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      6078  0x555555563a49    setnz al                                 0f 95 c0
[I]      6079  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      6080  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      6081  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      6082  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      6083  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      6084  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      6084  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      6085  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      6086  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      6087  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      6088  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      6089  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      6090  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      6091  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      6092  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      6093  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      6093  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      6094  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      6095  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      6096  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      6097  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      6097  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      6098  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      6099  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      6099  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      6100  0x555555563a2d    cqo                                      48 99
[I]      6101  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      6102  0x555555563a32    mov r8, rax                              49 89 c0
[I]      6103  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      6104  0x555555563a38    cqo                                      48 99
[I]      6105  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      6106  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      6107  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      6108  0x555555563a44    xor eax, eax                             31 c0
[I]      6109  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      6110  0x555555563a49    setnz al                                 0f 95 c0
[I]      6111  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      6112  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      6113  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      6114  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      6115  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      6116  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      6116  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      6117  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      6118  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      6119  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      6120  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      6121  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      6122  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      6123  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      6124  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      6125  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      6125  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      6126  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      6127  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      6128  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      6129  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      6129  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      6130  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      6131  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      6131  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      6132  0x555555563a2d    cqo                                      48 99
[I]      6133  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      6134  0x555555563a32    mov r8, rax                              49 89 c0
[I]      6135  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      6136  0x555555563a38    cqo                                      48 99
[I]      6137  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      6138  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      6139  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      6140  0x555555563a44    xor eax, eax                             31 c0
[I]      6141  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      6142  0x555555563a49    setnz al                                 0f 95 c0
[I]      6143  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      6144  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      6145  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      6146  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      6147  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      6148  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      6148  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      6149  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      6150  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      6151  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      6152  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      6153  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      6154  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      6155  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      6156  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      6157  0x555555563aa0 loc_555555563aa0: // size=13 thread=0x100000000
[I]      6157  0x555555563aa0    add r12, 0x1                             49 83 c4 01
[I]      6158  0x555555563aa4    cmp r12, r10                             4d 39 d4
[I]      6159  0x555555563aa7    jl 0x5555555639f0                        0f 8c 43 ff ff ff
[B]      6160  0x5555555639f0 loc_5555555639f0: // size=16 thread=0x100000000
[I]      6160  0x5555555639f0    mov rax, qword ptr [rip+0x13a99]         48 8b 05 99 3a 01 00
[I]      6161  0x5555555639f7    mov rdi, qword ptr [rax+r12*8]           4a 8b 3c e0
[C]      6162 Calling function 0x555555560db0(error_at_line)
[I]      6162  0x5555555639fb    call 0x555555560db0                      e8 b0 d3 ff ff
[B]      6163  0x555555560db0 loc_555555560db0: // size=53 thread=0x100000000
[I]      6163  0x555555560db0    push rbp                                 55
[I]      6164  0x555555560db1    mov rbp, rsp                             48 89 e5
[I]      6165  0x555555560db4    push r13                                 41 55
[I]      6166  0x555555560db6    push r12                                 41 54
[I]      6167  0x555555560db8    push rbx                                 53
[I]      6168  0x555555560db9    sub rsp, 0x2a8                           48 81 ec a8 02 00 00
[I]      6169  0x555555560dc0    cmp byte ptr [rip+0x16562], 0x0          80 3d 62 65 01 00 00
[I]      6170  0x555555560dc7    movzx r13d, byte ptr [rip+0x16559]       44 0f b6 2d 59 65 01 00
[I]      6171  0x555555560dcf    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6172  0x555555560dd8    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      6173  0x555555560ddc    mov r12, rdi                             49 89 fc
[I]      6174  0x555555560ddf    jz 0x555555560e88                        0f 84 a3 00 00 00
[B]      6175  0x555555560e88 loc_555555560e88: // size=7 thread=0x100000000
[I]      6175  0x555555560e88    xor ebx, ebx                             31 db
[I]      6176  0x555555560e8a    test r13b, r13b                          45 84 ed
[I]      6177  0x555555560e8d    jz 0x555555560e14                        74 85
[B]      6178  0x555555560e14 loc_555555560e14: // size=13 thread=0x100000000
[I]      6178  0x555555560e14    cmp byte ptr [rip+0x164fd], 0x0          80 3d fd 64 01 00 00
[I]      6179  0x555555560e1b    jnz 0x555555560ee8                       0f 85 c7 00 00 00
[B]      6180  0x555555560e21 loc_555555560e21: // size=17 thread=0x100000000
[I]      6180  0x555555560e21    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      6181  0x555555560e29    test rax, rax                            48 85 c0
[I]      6182  0x555555560e2c    jz 0x555555560f14                        0f 84 e2 00 00 00
[B]      6183  0x555555560e32 loc_555555560e32: // size=13 thread=0x100000000
[I]      6183  0x555555560e32    add rbx, rax                             48 01 c3
[I]      6184  0x555555560e35    mov eax, dword ptr [rip+0x164e1]         8b 05 e1 64 01 00
[I]      6185  0x555555560e3b    test eax, eax                            85 c0
[I]      6186  0x555555560e3d    jz 0x555555560e60                        74 21
[B]      6187  0x555555560e60 loc_555555560e60: // size=19 thread=0x100000000
[I]      6187  0x555555560e60    mov rax, qword ptr [rbp-0x28]            48 8b 45 d8
[I]      6188  0x555555560e64    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6189  0x555555560e6d    jnz 0x555555560fe7                       0f 85 74 01 00 00
[B]      6190  0x555555560e73 loc_555555560e73: // size=17 thread=0x100000000
[I]      6190  0x555555560e73    add rsp, 0x2a8                           48 81 c4 a8 02 00 00
[I]      6191  0x555555560e7a    mov rax, rbx                             48 89 d8
[I]      6192  0x555555560e7d    pop rbx                                  5b
[I]      6193  0x555555560e7e    pop r12                                  41 5c
[I]      6194  0x555555560e80    pop r13                                  41 5d
[I]      6195  0x555555560e82    pop rbp                                  5d
[I]      6196  0x555555560e83    ret                                      c3
[B]      6197  0x555555563a00 loc_555555563a00: // size=19 thread=0x100000000
[I]      6197  0x555555563a00    mov r10, qword ptr [rip+0x13c01]         4c 8b 15 01 3c 01 00
[I]      6198  0x555555563a07    mov r9, rax                              49 89 c1
[I]      6199  0x555555563a0a    test rbx, rbx                            48 85 db
[I]      6200  0x555555563a0d    jle 0x555555563aa0                       0f 8e 8d 00 00 00
[B]      6201  0x555555563a13 loc_555555563a13: // size=18 thread=0x100000000
[I]      6201  0x555555563a13    mov r11, qword ptr [rip+0x13a9e]         4c 8b 1d 9e 3a 01 00
[I]      6202  0x555555563a1a    mov rsi, qword ptr [rip+0x13977]         48 8b 35 77 39 01 00
[I]      6203  0x555555563a21    xor ecx, ecx                             31 c9
[I]      6204  0x555555563a23    jmp 0x555555563a79                       eb 54
[B]      6205  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      6205  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      6206  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      6207  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      6208  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      6209  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      6209  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      6210  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      6211  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      6211  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      6212  0x555555563a2d    cqo                                      48 99
[I]      6213  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      6214  0x555555563a32    mov r8, rax                              49 89 c0
[I]      6215  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      6216  0x555555563a38    cqo                                      48 99
[I]      6217  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      6218  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      6219  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      6220  0x555555563a44    xor eax, eax                             31 c0
[I]      6221  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      6222  0x555555563a49    setnz al                                 0f 95 c0
[I]      6223  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      6224  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      6225  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      6226  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      6227  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      6228  0x555555563a70 loc_555555563a70: // size=9 thread=0x100000000
[I]      6228  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      6229  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      6230  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      6231  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      6231  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      6232  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      6233  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      6234  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      6235  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      6235  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      6236  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      6237  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      6237  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      6238  0x555555563a2d    cqo                                      48 99
[I]      6239  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      6240  0x555555563a32    mov r8, rax                              49 89 c0
[I]      6241  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      6242  0x555555563a38    cqo                                      48 99
[I]      6243  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      6244  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      6245  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      6246  0x555555563a44    xor eax, eax                             31 c0
[I]      6247  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      6248  0x555555563a49    setnz al                                 0f 95 c0
[I]      6249  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      6250  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      6251  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      6252  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      6253  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      6254  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      6254  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      6255  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      6256  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      6257  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      6258  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      6259  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      6260  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      6261  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      6262  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      6263  0x555555563a79 loc_555555563a79: // size=12 thread=0x100000000
[I]      6263  0x555555563a79    mov rdi, rcx                             48 89 cf
[I]      6264  0x555555563a7c    add rcx, 0x1                             48 83 c1 01
[I]      6265  0x555555563a80    cmp byte ptr [rsi], 0x0                  80 3e 00
[I]      6266  0x555555563a83    jz 0x555555563a70                        74 eb
[B]      6267  0x555555563a85 loc_555555563a85: // size=5 thread=0x100000000
[I]      6267  0x555555563a85    test r13b, r13b                          45 84 ed
[I]      6268  0x555555563a88    jnz 0x555555563a28                       75 9e
[B]      6269  0x555555563a28 loc_555555563a28: // size=52 thread=0x100000000
[I]      6269  0x555555563a28    lea rax, ptr [rcx+r10*1-0x1]             4a 8d 44 11 ff
[I]      6270  0x555555563a2d    cqo                                      48 99
[I]      6271  0x555555563a2f    idiv rcx                                 48 f7 f9
[I]      6272  0x555555563a32    mov r8, rax                              49 89 c0
[I]      6273  0x555555563a35    mov rax, r12                             4c 89 e0
[I]      6274  0x555555563a38    cqo                                      48 99
[I]      6275  0x555555563a3a    idiv r8                                  49 f7 f8
[I]      6276  0x555555563a3d    mov r8, rax                              49 89 c0
[I]      6277  0x555555563a40    mov rdx, qword ptr [rsi+0x10]            48 8b 56 10
[I]      6278  0x555555563a44    xor eax, eax                             31 c0
[I]      6279  0x555555563a46    cmp r8, rdi                              49 39 f8
[I]      6280  0x555555563a49    setnz al                                 0f 95 c0
[I]      6281  0x555555563a4c    lea rdx, ptr [rdx+r8*8]                  4a 8d 14 c2
[I]      6282  0x555555563a50    lea rax, ptr [r9+rax*2]                  49 8d 04 41
[I]      6283  0x555555563a54    mov rdi, qword ptr [rdx]                 48 8b 3a
[I]      6284  0x555555563a57    cmp rdi, rax                             48 39 c7
[I]      6285  0x555555563a5a    jnb 0x555555563a70                       73 14
[B]      6286  0x555555563a5c loc_555555563a5c: // size=29 thread=0x100000000
[I]      6286  0x555555563a5c    mov r8, rax                              49 89 c0
[I]      6287  0x555555563a5f    sub r8, rdi                              49 29 f8
[I]      6288  0x555555563a62    add qword ptr [rsi+0x8], r8              4c 01 46 08
[I]      6289  0x555555563a66    mov qword ptr [rdx], rax                 48 89 02
[I]      6290  0x555555563a69    cmp qword ptr [rsi+0x8], r11             4c 39 5e 08
[I]      6291  0x555555563a6d    setb byte ptr [rsi]                      0f 92 06
[I]      6292  0x555555563a70    add rsi, 0x18                            48 83 c6 18
[I]      6293  0x555555563a74    cmp rbx, rcx                             48 39 cb
[I]      6294  0x555555563a77    jz 0x555555563aa0                        74 27
[B]      6295  0x555555563aa0 loc_555555563aa0: // size=13 thread=0x100000000
[I]      6295  0x555555563aa0    add r12, 0x1                             49 83 c4 01
[I]      6296  0x555555563aa4    cmp r12, r10                             4d 39 d4
[I]      6297  0x555555563aa7    jl 0x5555555639f0                        0f 8c 43 ff ff ff
[B]      6298  0x555555563aad loc_555555563aad: // size=6 thread=0x100000000
[I]      6298  0x555555563aad    cmp rbx, 0x1                             48 83 fb 01
[I]      6299  0x555555563ab1    jle 0x555555563af3                       7e 40
[B]      6300  0x555555563ab3 loc_555555563ab3: // size=18 thread=0x100000000
[I]      6300  0x555555563ab3    mov rdx, qword ptr [rip+0x138de]         48 8b 15 de 38 01 00
[I]      6301  0x555555563aba    lea rax, ptr [rbx+rbx*2]                 48 8d 04 5b
[I]      6302  0x555555563abe    lea rax, ptr [rdx+rax*8-0x18]            48 8d 44 c2 e8
[I]      6303  0x555555563ac3    jmp 0x555555563aee                       eb 29
[B]      6304  0x555555563aee loc_555555563aee: // size=5 thread=0x100000000
[I]      6304  0x555555563aee    cmp byte ptr [rax], 0x0                  80 38 00
[I]      6305  0x555555563af1    jz 0x555555563ae0                        74 ed
[B]      6306  0x555555563af3 loc_555555563af3: // size=18 thread=0x100000000
[I]      6306  0x555555563af3    add rsp, 0x18                            48 83 c4 18
[I]      6307  0x555555563af7    mov rax, rbx                             48 89 d8
[I]      6308  0x555555563afa    pop rbx                                  5b
[I]      6309  0x555555563afb    pop r12                                  41 5c
[I]      6310  0x555555563afd    pop r13                                  41 5d
[I]      6311  0x555555563aff    pop r14                                  41 5e
[I]      6312  0x555555563b01    pop r15                                  41 5f
[I]      6313  0x555555563b03    pop rbp                                  5d
[I]      6314  0x555555563b04    ret                                      c3
[B]      6315  0x555555563e18 loc_555555563e18: // size=51 thread=0x100000000
[I]      6315  0x555555563e18    lea rdx, ptr [rax+rax*2]                 48 8d 14 40
[I]      6316  0x555555563e1c    mov rcx, rax                             48 89 c1
[I]      6317  0x555555563e1f    mov rax, qword ptr [rip+0x13572]         48 8b 05 72 35 01 00
[I]      6318  0x555555563e26    lea r15, ptr [rax+rdx*8-0x18]            4c 8d 7c d0 e8
[I]      6319  0x555555563e2b    mov rax, qword ptr [rip+0x137d6]         48 8b 05 d6 37 01 00
[I]      6320  0x555555563e32    cqo                                      48 99
[I]      6321  0x555555563e34    idiv rcx                                 48 f7 f9
[I]      6322  0x555555563e37    cmp rdx, 0x1                             48 83 fa 01
[I]      6323  0x555555563e3b    sbb rax, 0xffffffffffffffff              48 83 d8 ff
[I]      6324  0x555555563e3f    mov r14, rax                             49 89 c6
[I]      6325  0x555555563e42    test rax, rax                            48 85 c0
[I]      6326  0x555555563e45    jle 0x555555563f0c                       0f 8e c1 00 00 00
[B]      6327  0x555555563e4b loc_555555563e4b: // size=33 thread=0x100000000
[I]      6327  0x555555563e4b    mov rax, qword ptr [rip+0x12e56]         48 8b 05 56 2e 01 00
[I]      6328  0x555555563e52    mov qword ptr [rbp-0x58], 0x0            48 c7 45 a8 00 00 00 00
[I]      6329  0x555555563e5a    mov qword ptr [rbp-0x50], rax            48 89 45 b0
[I]      6330  0x555555563e5e    data16 nop                               66 90
[I]      6331  0x555555563e60    mov rbx, qword ptr [rbp-0x58]            48 8b 5d a8
[I]      6332  0x555555563e64    xor r13d, r13d                           45 31 ed
[I]      6333  0x555555563e67    xor r12d, r12d                           45 31 e4
[I]      6334  0x555555563e6a    jmp 0x555555563e91                       eb 25
[B]      6335  0x555555563e91 loc_555555563e91: // size=20 thread=0x100000000
[I]      6335  0x555555563e91    mov rax, qword ptr [rip+0x135f8]         48 8b 05 f8 35 01 00
[I]      6336  0x555555563e98    mov rdi, qword ptr [rax+rbx*8]           48 8b 3c d8
[I]      6337  0x555555563e9c    mov qword ptr [rbp-0x38], rdi            48 89 7d c8
[C]      6338 Calling function 0x555555560db0(error_at_line)
[I]      6338  0x555555563ea0    call 0x555555560db0                      e8 0b cf ff ff
[B]      6339  0x555555560db0 loc_555555560db0: // size=53 thread=0x100000000
[I]      6339  0x555555560db0    push rbp                                 55
[I]      6340  0x555555560db1    mov rbp, rsp                             48 89 e5
[I]      6341  0x555555560db4    push r13                                 41 55
[I]      6342  0x555555560db6    push r12                                 41 54
[I]      6343  0x555555560db8    push rbx                                 53
[I]      6344  0x555555560db9    sub rsp, 0x2a8                           48 81 ec a8 02 00 00
[I]      6345  0x555555560dc0    cmp byte ptr [rip+0x16562], 0x0          80 3d 62 65 01 00 00
[I]      6346  0x555555560dc7    movzx r13d, byte ptr [rip+0x16559]       44 0f b6 2d 59 65 01 00
[I]      6347  0x555555560dcf    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6348  0x555555560dd8    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      6349  0x555555560ddc    mov r12, rdi                             49 89 fc
[I]      6350  0x555555560ddf    jz 0x555555560e88                        0f 84 a3 00 00 00
[B]      6351  0x555555560e88 loc_555555560e88: // size=7 thread=0x100000000
[I]      6351  0x555555560e88    xor ebx, ebx                             31 db
[I]      6352  0x555555560e8a    test r13b, r13b                          45 84 ed
[I]      6353  0x555555560e8d    jz 0x555555560e14                        74 85
[B]      6354  0x555555560e14 loc_555555560e14: // size=13 thread=0x100000000
[I]      6354  0x555555560e14    cmp byte ptr [rip+0x164fd], 0x0          80 3d fd 64 01 00 00
[I]      6355  0x555555560e1b    jnz 0x555555560ee8                       0f 85 c7 00 00 00
[B]      6356  0x555555560e21 loc_555555560e21: // size=17 thread=0x100000000
[I]      6356  0x555555560e21    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      6357  0x555555560e29    test rax, rax                            48 85 c0
[I]      6358  0x555555560e2c    jz 0x555555560f14                        0f 84 e2 00 00 00
[B]      6359  0x555555560e32 loc_555555560e32: // size=13 thread=0x100000000
[I]      6359  0x555555560e32    add rbx, rax                             48 01 c3
[I]      6360  0x555555560e35    mov eax, dword ptr [rip+0x164e1]         8b 05 e1 64 01 00
[I]      6361  0x555555560e3b    test eax, eax                            85 c0
[I]      6362  0x555555560e3d    jz 0x555555560e60                        74 21
[B]      6363  0x555555560e60 loc_555555560e60: // size=19 thread=0x100000000
[I]      6363  0x555555560e60    mov rax, qword ptr [rbp-0x28]            48 8b 45 d8
[I]      6364  0x555555560e64    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6365  0x555555560e6d    jnz 0x555555560fe7                       0f 85 74 01 00 00
[B]      6366  0x555555560e73 loc_555555560e73: // size=17 thread=0x100000000
[I]      6366  0x555555560e73    add rsp, 0x2a8                           48 81 c4 a8 02 00 00
[I]      6367  0x555555560e7a    mov rax, rbx                             48 89 d8
[I]      6368  0x555555560e7d    pop rbx                                  5b
[I]      6369  0x555555560e7e    pop r12                                  41 5c
[I]      6370  0x555555560e80    pop r13                                  41 5d
[I]      6371  0x555555560e82    pop rbp                                  5d
[I]      6372  0x555555560e83    ret                                      c3
[B]      6373  0x555555563ea5 loc_555555563ea5: // size=32 thread=0x100000000
[I]      6373  0x555555563ea5    mov rdi, qword ptr [rbp-0x38]            48 8b 7d c8
[I]      6374  0x555555563ea9    mov rsi, r12                             4c 89 e6
[I]      6375  0x555555563eac    mov qword ptr [rbp-0x40], rax            48 89 45 c0
[I]      6376  0x555555563eb0    mov rax, qword ptr [r15+0x10]            49 8b 47 10
[I]      6377  0x555555563eb4    mov rcx, qword ptr [rax+r13*1]           4a 8b 0c 28
[I]      6378  0x555555563eb8    add r13, 0x8                             49 83 c5 08
[I]      6379  0x555555563ebc    mov qword ptr [rbp-0x48], rcx            48 89 4d b8
[C]      6380 Calling function 0x55555556c610(error_at_line)
[I]      6380  0x555555563ec0    call 0x55555556c610                      e8 4b 87 00 00
[B]      6381  0x55555556c610 loc_55555556c610: // size=46 thread=0x100000000
[I]      6381  0x55555556c610    nop edx, edi                             f3 0f 1e fa
[I]      6382  0x55555556c614    push rbp                                 55
[I]      6383  0x55555556c615    mov rbp, rsp                             48 89 e5
[I]      6384  0x55555556c618    push r12                                 41 54
[I]      6385  0x55555556c61a    push rbx                                 53
[I]      6386  0x55555556c61b    mov rbx, rdi                             48 89 fb
[I]      6387  0x55555556c61e    sub rsp, 0x2a0                           48 81 ec a0 02 00 00
[I]      6388  0x55555556c625    cmp byte ptr [rip+0xacf4], 0x0           80 3d f4 ac 00 00 00
[I]      6389  0x55555556c62c    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6390  0x55555556c635    mov qword ptr [rbp-0x18], r12            4c 89 65 e8
[I]      6391  0x55555556c639    mov r12, rsi                             49 89 f4
[I]      6392  0x55555556c63c    jz 0x55555556c670                        74 32
[B]      6393  0x55555556c670 loc_55555556c670: // size=9 thread=0x100000000
[I]      6393  0x55555556c670    cmp byte ptr [rip+0xacb2], 0x0           80 3d b2 ac 00 00 00
[I]      6394  0x55555556c677    jz 0x55555556c6be                        74 45
[B]      6395  0x55555556c6be loc_55555556c6be: // size=9 thread=0x100000000
[I]      6395  0x55555556c6be    cmp byte ptr [rip+0xac63], 0x0           80 3d 63 ac 00 00 00
[I]      6396  0x55555556c6c5    jz 0x55555556c700                        74 39
[B]      6397  0x55555556c700 loc_55555556c700: // size=9 thread=0x100000000
[I]      6397  0x55555556c700    cmp byte ptr [rip+0xac11], 0x0           80 3d 11 ac 00 00 00
[I]      6398  0x55555556c707    jz 0x55555556c735                        74 2c
[B]      6399  0x55555556c735 loc_55555556c735: // size=15 thread=0x100000000
[I]      6399  0x55555556c735    mov rcx, r12                             4c 89 e1
[I]      6400  0x55555556c738    xor edx, edx                             31 d2
[I]      6401  0x55555556c73a    xor esi, esi                             31 f6
[I]      6402  0x55555556c73c    mov rdi, rbx                             48 89 df
[C]      6403 Calling function 0x555555561fd0(error_at_line)
[I]      6403  0x55555556c73f    call 0x555555561fd0                      e8 8c 58 ff ff
[B]      6404  0x555555561fd0 loc_555555561fd0: // size=45 thread=0x100000000
[I]      6404  0x555555561fd0    nop edx, edi                             f3 0f 1e fa
[I]      6405  0x555555561fd4    push rbp                                 55
[I]      6406  0x555555561fd5    mov r9, rdx                              49 89 d1
[I]      6407  0x555555561fd8    mov rbp, rsp                             48 89 e5
[I]      6408  0x555555561fdb    push r15                                 41 57
[I]      6409  0x555555561fdd    mov r15d, esi                            41 89 f7
[I]      6410  0x555555561fe0    push r14                                 41 56
[I]      6411  0x555555561fe2    push r13                                 41 55
[I]      6412  0x555555561fe4    mov r13, rdi                             49 89 fd
[I]      6413  0x555555561fe7    push r12                                 41 54
[I]      6414  0x555555561fe9    mov r12, rcx                             49 89 cc
[I]      6415  0x555555561fec    push rbx                                 53
[I]      6416  0x555555561fed    sub rsp, 0x18                            48 83 ec 18
[I]      6417  0x555555561ff1    movzx eax, byte ptr [rip+0x15328]        0f b6 05 28 53 01 00
[I]      6418  0x555555561ff8    test sil, sil                            40 84 f6
[I]      6419  0x555555561ffb    jz 0x555555562050                        74 53
[B]      6420  0x555555562050 loc_555555562050: // size=7 thread=0x100000000
[I]      6420  0x555555562050    mov r14, qword ptr [rdi]                 4c 8b 37
[I]      6421  0x555555562053    test al, al                              84 c0
[I]      6422  0x555555562055    jz 0x555555562009                        74 b2
[B]      6423  0x555555562009 loc_555555562009: // size=40 thread=0x100000000
[I]      6423  0x555555562009    mov edx, dword ptr [r13+0xc4]            41 8b 95 c4 00 00 00
[I]      6424  0x555555562010    mov rsi, qword ptr [rip+0x155e9]         48 8b 35 e9 55 01 00
[I]      6425  0x555555562017    sub rsp, 0x8                             48 83 ec 08
[I]      6426  0x55555556201b    push qword ptr [r13+0x10]                41 ff 75 10
[I]      6427  0x55555556201f    xor r15d, 0x1                            41 83 f7 01
[I]      6428  0x555555562023    xor ecx, ecx                             31 c9
[I]      6429  0x555555562025    movzx r8d, r15b                          45 0f b6 c7
[I]      6430  0x555555562029    mov rdi, r14                             4c 89 f7
[C]      6431 Calling function 0x555555561be0(error_at_line)
[I]      6431  0x55555556202c    call 0x555555561be0                      e8 af fb ff ff
[B]      6432  0x555555561be0 loc_555555561be0: // size=132 thread=0x100000000
[I]      6432  0x555555561be0    push rbp                                 55
[I]      6433  0x555555561be1    mov rbp, rsp                             48 89 e5
[I]      6434  0x555555561be4    push r15                                 41 57
[I]      6435  0x555555561be6    push r14                                 41 56
[I]      6436  0x555555561be8    push r13                                 41 55
[I]      6437  0x555555561bea    push r12                                 41 54
[I]      6438  0x555555561bec    push rbx                                 53
[I]      6439  0x555555561bed    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      6440  0x555555561bf4    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      6441  0x555555561bf9    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      6442  0x555555561c00    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      6443  0x555555561c05    sub rsp, 0x68                            48 83 ec 68
[I]      6444  0x555555561c09    mov qword ptr [rbp-0x2080], rdi          48 89 bd 80 df ff ff
[I]      6445  0x555555561c10    mov rbx, rdi                             48 89 fb
[I]      6446  0x555555561c13    mov r12, rcx                             49 89 cc
[I]      6447  0x555555561c16    mov r14d, r8d                            45 89 c6
[I]      6448  0x555555561c19    mov qword ptr [rbp-0x2058], r9           4c 89 8d a8 df ff ff
[I]      6449  0x555555561c20    lea rax, ptr [rbp-0x2040]                48 8d 85 c0 df ff ff
[I]      6450  0x555555561c27    mov ecx, edx                             89 d1
[I]      6451  0x555555561c29    xor r8d, r8d                             45 31 c0
[I]      6452  0x555555561c2c    mov rdx, rsi                             48 89 f2
[I]      6453  0x555555561c2f    lea rdi, ptr [rbp-0x2048]                48 8d bd b8 df ff ff
[I]      6454  0x555555561c36    mov rsi, rbx                             48 89 de
[I]      6455  0x555555561c39    lea r9, ptr [rbp-0x2049]                 4c 8d 8d b7 df ff ff
[I]      6456  0x555555561c40    mov r13, qword ptr fs:[0x28]             64 4c 8b 2c 25 28 00 00 00
[I]      6457  0x555555561c49    mov qword ptr [rbp-0x38], r13            4c 89 6d c8
[I]      6458  0x555555561c4d    mov r13, qword ptr [rbp+0x10]            4c 8b 6d 10
[I]      6459  0x555555561c51    mov qword ptr [rbp-0x2088], rax          48 89 85 78 df ff ff
[I]      6460  0x555555561c58    mov qword ptr [rbp-0x2048], rax          48 89 85 b8 df ff ff
[C]      6461 Calling function 0x555555568e70(error_at_line)
[I]      6461  0x555555561c5f    call 0x555555568e70                      e8 0c 72 00 00
[B]      6462  0x555555568e70 loc_555555568e70: // size=99 thread=0x100000000
[I]      6462  0x555555568e70    nop edx, edi                             f3 0f 1e fa
[I]      6463  0x555555568e74    push rbp                                 55
[I]      6464  0x555555568e75    mov rbp, rsp                             48 89 e5
[I]      6465  0x555555568e78    push r15                                 41 57
[I]      6466  0x555555568e7a    mov r15, rdx                             49 89 d7
[I]      6467  0x555555568e7d    push r14                                 41 56
[I]      6468  0x555555568e7f    mov r14, rsi                             49 89 f6
[I]      6469  0x555555568e82    push r13                                 41 55
[I]      6470  0x555555568e84    push r12                                 41 54
[I]      6471  0x555555568e86    push rbx                                 53
[I]      6472  0x555555568e87    sub rsp, 0x68                            48 83 ec 68
[I]      6473  0x555555568e8b    test rdx, rdx                            48 85 d2
[I]      6474  0x555555568e8e    mov qword ptr [rbp-0x80], rdi            48 89 7d 80
[I]      6475  0x555555568e92    lea rdx, ptr [rip+0xe447]                48 8d 15 47 e4 00 00
[I]      6476  0x555555568e99    cmovz r15, rdx                           4c 0f 44 fa
[I]      6477  0x555555568e9d    mov qword ptr [rbp-0x60], r8             4c 89 45 a0
[I]      6478  0x555555568ea1    mov qword ptr [rbp-0x88], r9             4c 89 8d 78 ff ff ff
[I]      6479  0x555555568ea8    mov ebx, dword ptr [r15]                 41 8b 1f
[I]      6480  0x555555568eab    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6481  0x555555568eb4    mov qword ptr [rbp-0x38], r12            4c 89 65 c8
[I]      6482  0x555555568eb8    mov r12, qword ptr [rdi]                 4c 8b 27
[I]      6483  0x555555568ebb    cmp ebx, 0x2                             83 fb 02
[I]      6484  0x555555568ebe    setbe r13b                               41 0f 96 c5
[I]      6485  0x555555568ec2    and r13b, byte ptr [rip+0xe3f5]          44 22 2d f5 e3 00 00
[I]      6486  0x555555568ec9    mov byte ptr [rbp-0x71], r13b            44 88 6d 8f
[I]      6487  0x555555568ecd    jnz 0x555555569000                       0f 85 2d 01 00 00
[B]      6488  0x555555568ed3 loc_555555568ed3: // size=8 thread=0x100000000
[I]      6488  0x555555568ed3    test ecx, ecx                            85 c9
[I]      6489  0x555555568ed5    jnz 0x555555569168                       0f 85 8d 02 00 00
[B]      6490  0x555555568edb loc_555555568edb: // size=12 thread=0x100000000
[I]      6490  0x555555568edb    mov rdi, rsi                             48 89 f7
[I]      6491  0x555555568ede    mov r12, r14                             4d 89 f4
[C]      6492 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      6492  0x555555568ee1    call qword ptr [rip+0xde71]              ff 15 71 de 00 00
[B]      6493  0x555555568ee7 loc_555555568ee7: // size=14 thread=0x100000000
[I]      6493  0x555555568ee7    cmp qword ptr [rbp-0x60], 0x0            48 83 7d a0 00
[I]      6494  0x555555568eec    mov rbx, rax                             48 89 c3
[I]      6495  0x555555568eef    jz 0x555555568f98                        0f 84 a3 00 00 00
[B]      6496  0x555555568f98 loc_555555568f98: // size=13 thread=0x100000000
[I]      6496  0x555555568f98    cmp byte ptr [rip+0xe31e], 0x0           80 3d 1e e3 00 00 00
[I]      6497  0x555555568f9f    jz 0x555555569248                        0f 84 a3 02 00 00
[B]      6498  0x555555568fa5 loc_555555568fa5: // size=13 thread=0x100000000
[I]      6498  0x555555568fa5    cmp byte ptr [rip+0xe310], 0x0           80 3d 10 e3 00 00 00
[I]      6499  0x555555568fac    jz 0x555555569248                        0f 84 96 02 00 00
[B]      6500  0x555555569248 loc_555555569248: // size=15 thread=0x100000000
[I]      6500  0x555555569248    mov rax, qword ptr [rbp-0x88]            48 8b 85 78 ff ff ff
[I]      6501  0x55555556924f    mov byte ptr [rax], 0x0                  c6 00 00
[I]      6502  0x555555569252    jmp 0x555555568fd0                       e9 79 fd ff ff
[B]      6503  0x555555568fd0 loc_555555568fd0: // size=26 thread=0x100000000
[I]      6503  0x555555568fd0    mov rax, qword ptr [rbp-0x80]            48 8b 45 80
[I]      6504  0x555555568fd4    mov qword ptr [rax], r12                 4c 89 20
[I]      6505  0x555555568fd7    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      6506  0x555555568fdb    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6507  0x555555568fe4    jnz 0x555555569443                       0f 85 59 04 00 00
[B]      6508  0x555555568fea loc_555555568fea: // size=18 thread=0x100000000
[I]      6508  0x555555568fea    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      6509  0x555555568fee    mov rax, rbx                             48 89 d8
[I]      6510  0x555555568ff1    pop rbx                                  5b
[I]      6511  0x555555568ff2    pop r12                                  41 5c
[I]      6512  0x555555568ff4    pop r13                                  41 5d
[I]      6513  0x555555568ff6    pop r14                                  41 5e
[I]      6514  0x555555568ff8    pop r15                                  41 5f
[I]      6515  0x555555568ffa    pop rbp                                  5d
[I]      6516  0x555555568ffb    ret                                      c3
[B]      6517  0x555555561c64 loc_555555561c64: // size=20 thread=0x100000000
[I]      6517  0x555555561c64    mov rbx, rax                             48 89 c3
[I]      6518  0x555555561c67    movzx eax, byte ptr [rbp-0x2049]         0f b6 85 b7 df ff ff
[I]      6519  0x555555561c6e    mov byte ptr [rbp-0x2059], al            88 85 a7 df ff ff
[I]      6520  0x555555561c74    test al, al                              84 c0
[I]      6521  0x555555561c76    jz 0x555555561c81                        74 09
[B]      6522  0x555555561c81 loc_555555561c81: // size=12 thread=0x100000000
[I]      6522  0x555555561c81    mov r14, qword ptr [rip+0x15020]         4c 8b 35 20 50 01 00
[I]      6523  0x555555561c88    test r12, r12                            4d 85 e4
[I]      6524  0x555555561c8b    jz 0x555555561ce1                        74 54
[B]      6525  0x555555561ce1 loc_555555561ce1: // size=16 thread=0x100000000
[I]      6525  0x555555561ce1    mov r12, qword ptr [rbp-0x2048]          4c 8b a5 b8 df ff ff
[I]      6526  0x555555561ce8    test r13, r13                            4d 85 ed
[I]      6527  0x555555561ceb    jz 0x555555561ed0                        0f 84 df 01 00 00
[B]      6528  0x555555561ed0 loc_555555561ed0: // size=22 thread=0x100000000
[I]      6528  0x555555561ed0    mov qword ptr [rbp-0x2078], rbx          48 89 9d 88 df ff ff
[I]      6529  0x555555561ed7    xor r15d, r15d                           45 31 ff
[I]      6530  0x555555561eda    mov qword ptr [rbp-0x2070], r12          4c 89 a5 90 df ff ff
[I]      6531  0x555555561ee1    jmp 0x555555561d86                       e9 a0 fe ff ff
[B]      6532  0x555555561d86 loc_555555561d86: // size=16 thread=0x100000000
[I]      6532  0x555555561d86    mov rax, qword ptr [rbp-0x2058]          48 8b 85 a8 df ff ff
[I]      6533  0x555555561d8d    test rax, rax                            48 85 c0
[I]      6534  0x555555561d90    jz 0x555555561ea8                        0f 84 12 01 00 00
[B]      6535  0x555555561ea8 loc_555555561ea8: // size=28 thread=0x100000000
[I]      6535  0x555555561ea8    mov rcx, qword ptr [r14]                 49 8b 0e
[I]      6536  0x555555561eab    mov rdx, qword ptr [rbp-0x2078]          48 8b 95 88 df ff ff
[I]      6537  0x555555561eb2    mov esi, 0x1                             be 01 00 00 00
[I]      6538  0x555555561eb7    mov rdi, qword ptr [rbp-0x2070]          48 8b bd 90 df ff ff
[C]      6539 Calling function 0x7fffc2e8c740(fwrite_unlocked)
[!] Function 0x7fffc2e8c740 is filtered, no tracing
[I]      6539  0x555555561ebe    call qword ptr [rip+0x1501c]             ff 15 1c 50 01 00
[B]      6540  0x555555561ec4 loc_555555561ec4: // size=12 thread=0x100000000
[I]      6540  0x555555561ec4    add qword ptr [rip+0x15465], rbx         48 01 1d 65 54 01 00
[I]      6541  0x555555561ecb    jmp 0x555555561ddf                       e9 0f ff ff ff
[B]      6542  0x555555561ddf loc_555555561ddf: // size=5 thread=0x100000000
[I]      6542  0x555555561ddf    test r13, r13                            4d 85 ed
[I]      6543  0x555555561de2    jz 0x555555561e24                        74 40
[B]      6544  0x555555561e24 loc_555555561e24: // size=9 thread=0x100000000
[I]      6544  0x555555561e24    cmp qword ptr [rbp-0x2080], r12          4c 39 a5 80 df ff ff
[I]      6545  0x555555561e2b    jz 0x555555561e42                        74 15
[B]      6546  0x555555561e42 loc_555555561e42: // size=29 thread=0x100000000
[I]      6546  0x555555561e42    movzx eax, byte ptr [rbp-0x2059]         0f b6 85 a7 df ff ff
[I]      6547  0x555555561e49    add rax, rbx                             48 01 d8
[I]      6548  0x555555561e4c    mov rdx, qword ptr [rbp-0x38]            48 8b 55 c8
[I]      6549  0x555555561e50    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      6550  0x555555561e59    jnz 0x555555561fbd                       0f 85 5e 01 00 00
[B]      6551  0x555555561e5f loc_555555561e5f: // size=18 thread=0x100000000
[I]      6551  0x555555561e5f    add rsp, 0x2068                          48 81 c4 68 20 00 00
[I]      6552  0x555555561e66    pop rbx                                  5b
[I]      6553  0x555555561e67    pop r12                                  41 5c
[I]      6554  0x555555561e69    pop r13                                  41 5d
[I]      6555  0x555555561e6b    pop r14                                  41 5e
[I]      6556  0x555555561e6d    pop r15                                  41 5f
[I]      6557  0x555555561e6f    pop rbp                                  5d
[I]      6558  0x555555561e70    ret                                      c3
[B]      6559  0x555555562031 loc_555555562031: // size=10 thread=0x100000000
[I]      6559  0x555555562031    pop rcx                                  59
[I]      6560  0x555555562032    pop rsi                                  5e
[I]      6561  0x555555562033    mov rbx, rax                             48 89 c3
[C]      6562 Calling function 0x55555555f4f0(error_at_line)
[I]      6562  0x555555562036    call 0x55555555f4f0                      e8 b5 d4 ff ff
[B]      6563  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      6563  0x55555555f4f0    push rbp                                 55
[I]      6564  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      6565  0x55555555f4f4    push r15                                 41 57
[I]      6566  0x55555555f4f6    push r14                                 41 56
[I]      6567  0x55555555f4f8    push r13                                 41 55
[I]      6568  0x55555555f4fa    push r12                                 41 54
[I]      6569  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      6570  0x55555555f503    push rbx                                 53
[I]      6571  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      6572  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      6573  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      6574  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      6575  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      6576  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      6577  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      6578  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      6578  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      6579  0x55555555f58d    test eax, eax                            85 c0
[I]      6580  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      6581  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      6581  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      6582  0x55555555f597    test eax, eax                            85 c0
[I]      6583  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      6584  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      6584  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      6585  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6586  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      6587  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      6587  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      6588  0x55555555f5e6    pop rbx                                  5b
[I]      6589  0x55555555f5e7    pop r12                                  41 5c
[I]      6590  0x55555555f5e9    pop r13                                  41 5d
[I]      6591  0x55555555f5eb    pop r14                                  41 5e
[I]      6592  0x55555555f5ed    pop r15                                  41 5f
[I]      6593  0x55555555f5ef    pop rbp                                  5d
[I]      6594  0x55555555f5f0    ret                                      c3
[B]      6595  0x55555556203b loc_55555556203b: // size=18 thread=0x100000000
[I]      6595  0x55555556203b    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      6596  0x55555556203f    mov rax, rbx                             48 89 d8
[I]      6597  0x555555562042    pop rbx                                  5b
[I]      6598  0x555555562043    pop r12                                  41 5c
[I]      6599  0x555555562045    pop r13                                  41 5d
[I]      6600  0x555555562047    pop r14                                  41 5e
[I]      6601  0x555555562049    pop r15                                  41 5f
[I]      6602  0x55555556204b    pop rbp                                  5d
[I]      6603  0x55555556204c    ret                                      c3
[B]      6604  0x55555556c744 loc_55555556c744: // size=10 thread=0x100000000
[I]      6604  0x55555556c744    mov eax, dword ptr [rip+0xabd2]          8b 05 d2 ab 00 00
[I]      6605  0x55555556c74a    test eax, eax                            85 c0
[I]      6606  0x55555556c74c    jnz 0x55555556c770                       75 22
[B]      6607  0x55555556c74e loc_55555556c74e: // size=19 thread=0x100000000
[I]      6607  0x55555556c74e    mov rax, qword ptr [rbp-0x18]            48 8b 45 e8
[I]      6608  0x55555556c752    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6609  0x55555556c75b    jnz 0x55555556c8b6                       0f 85 55 01 00 00
[B]      6610  0x55555556c761 loc_55555556c761: // size=12 thread=0x100000000
[I]      6610  0x55555556c761    add rsp, 0x2a0                           48 81 c4 a0 02 00 00
[I]      6611  0x55555556c768    pop rbx                                  5b
[I]      6612  0x55555556c769    pop r12                                  41 5c
[I]      6613  0x55555556c76b    pop rbp                                  5d
[I]      6614  0x55555556c76c    ret                                      c3
[B]      6615  0x555555563ec5 loc_555555563ec5: // size=15 thread=0x100000000
[I]      6615  0x555555563ec5    mov rax, qword ptr [rip+0x1373c]         48 8b 05 3c 37 01 00
[I]      6616  0x555555563ecc    sub rax, r14                             4c 29 f0
[I]      6617  0x555555563ecf    cmp rbx, rax                             48 39 c3
[I]      6618  0x555555563ed2    jl 0x555555563e70                        7c 9c
[B]      6619  0x555555563e70 loc_555555563e70: // size=29 thread=0x100000000
[I]      6619  0x555555563e70    mov rcx, qword ptr [rbp-0x48]            48 8b 4d b8
[I]      6620  0x555555563e74    mov rdi, qword ptr [rbp-0x40]            48 8b 7d c0
[I]      6621  0x555555563e78    add rbx, r14                             4c 01 f3
[I]      6622  0x555555563e7b    add rcx, r12                             4c 01 e1
[I]      6623  0x555555563e7e    add rdi, r12                             4c 01 e7
[I]      6624  0x555555563e81    mov rsi, rcx                             48 89 ce
[I]      6625  0x555555563e84    mov qword ptr [rbp-0x38], rcx            48 89 4d c8
[C]      6626 Calling function 0x55555555aa50(error_at_line)
[I]      6626  0x555555563e88    call 0x55555555aa50                      e8 c3 6b ff ff
[B]      6627  0x55555555aa50 loc_55555555aa50: // size=9 thread=0x100000000
[I]      6627  0x55555555aa50    cmp rdi, rsi                             48 39 f7
[I]      6628  0x55555555aa53    jnb 0x55555555ab20                       0f 83 c7 00 00 00
[B]      6629  0x55555555aa59 loc_55555555aa59: // size=26 thread=0x100000000
[I]      6629  0x55555555aa59    push rbp                                 55
[I]      6630  0x55555555aa5a    mov rbp, rsp                             48 89 e5
[I]      6631  0x55555555aa5d    push r14                                 41 56
[I]      6632  0x55555555aa5f    mov r14, qword ptr [rip+0x1c242]         4c 8b 35 42 c2 01 00
[I]      6633  0x55555555aa66    push r13                                 41 55
[I]      6634  0x55555555aa68    mov r13, rsi                             49 89 f5
[I]      6635  0x55555555aa6b    push r12                                 41 54
[I]      6636  0x55555555aa6d    push rbx                                 53
[I]      6637  0x55555555aa6e    mov rbx, rdi                             48 89 fb
[I]      6638  0x55555555aa71    jmp 0x55555555aab6                       eb 43
[B]      6639  0x55555555aab6 loc_55555555aab6: // size=27 thread=0x100000000
[I]      6639  0x55555555aab6    mov rdi, qword ptr [r14]                 49 8b 3e
[I]      6640  0x55555555aab9    mov rcx, qword ptr [rip+0x1ccd0]         48 8b 0d d0 cc 01 00
[I]      6641  0x55555555aac0    lea r12, ptr [rbx+0x1]                   4c 8d 63 01
[I]      6642  0x55555555aac4    mov rsi, qword ptr [rdi+0x28]            48 8b 77 28
[I]      6643  0x55555555aac8    mov r8, qword ptr [rdi+0x30]             4c 8b 47 30
[I]      6644  0x55555555aacc    test rcx, rcx                            48 85 c9
[I]      6645  0x55555555aacf    jnz 0x55555555aa78                       75 a7
[B]      6646  0x55555555aa78 loc_55555555aa78: // size=24 thread=0x100000000
[I]      6646  0x55555555aa78    mov rax, r13                             4c 89 e8
[I]      6647  0x55555555aa7b    xor edx, edx                             31 d2
[I]      6648  0x55555555aa7d    div rcx                                  48 f7 f1
[I]      6649  0x55555555aa80    xor edx, edx                             31 d2
[I]      6650  0x55555555aa82    mov r9, rax                              49 89 c1
[I]      6651  0x55555555aa85    mov rax, r12                             4c 89 e0
[I]      6652  0x55555555aa88    div rcx                                  48 f7 f1
[I]      6653  0x55555555aa8b    cmp rax, r9                              4c 39 c8
[I]      6654  0x55555555aa8e    jnb 0x55555555aad1                       73 41
[B]      6655  0x55555555aad1 loc_55555555aad1: // size=5 thread=0x100000000
[I]      6655  0x55555555aad1    cmp rsi, r8                              4c 39 c6
[I]      6656  0x55555555aad4    jnb 0x55555555aaf8                       73 22
[B]      6657  0x55555555aaf8 loc_55555555aaf8: // size=11 thread=0x100000000
[I]      6657  0x55555555aaf8    mov esi, 0x20                            be 20 00 00 00
[C]      6658 Calling function 0x7fffc2e8fe20(__overflow)
[!] Function 0x7fffc2e8fe20 is filtered, no tracing
[I]      6658  0x55555555aafd    call qword ptr [rip+0x1c285]             ff 15 85 c2 01 00
[B]      6659  0x55555555ab03 loc_55555555ab03: // size=2 thread=0x100000000
[I]      6659  0x55555555ab03    jmp 0x55555555aae1                       eb dc
[B]      6660  0x55555555aae1 loc_55555555aae1: // size=8 thread=0x100000000
[I]      6660  0x55555555aae1    mov rbx, r12                             4c 89 e3
[I]      6661  0x55555555aae4    cmp rbx, r13                             4c 39 eb
[I]      6662  0x55555555aae7    jb 0x55555555aab6                        72 cd
[B]      6663  0x55555555aab6 loc_55555555aab6: // size=27 thread=0x100000000
[I]      6663  0x55555555aab6    mov rdi, qword ptr [r14]                 49 8b 3e
[I]      6664  0x55555555aab9    mov rcx, qword ptr [rip+0x1ccd0]         48 8b 0d d0 cc 01 00
[I]      6665  0x55555555aac0    lea r12, ptr [rbx+0x1]                   4c 8d 63 01
[I]      6666  0x55555555aac4    mov rsi, qword ptr [rdi+0x28]            48 8b 77 28
[I]      6667  0x55555555aac8    mov r8, qword ptr [rdi+0x30]             4c 8b 47 30
[I]      6668  0x55555555aacc    test rcx, rcx                            48 85 c9
[I]      6669  0x55555555aacf    jnz 0x55555555aa78                       75 a7
[B]      6670  0x55555555aa78 loc_55555555aa78: // size=24 thread=0x100000000
[I]      6670  0x55555555aa78    mov rax, r13                             4c 89 e8
[I]      6671  0x55555555aa7b    xor edx, edx                             31 d2
[I]      6672  0x55555555aa7d    div rcx                                  48 f7 f1
[I]      6673  0x55555555aa80    xor edx, edx                             31 d2
[I]      6674  0x55555555aa82    mov r9, rax                              49 89 c1
[I]      6675  0x55555555aa85    mov rax, r12                             4c 89 e0
[I]      6676  0x55555555aa88    div rcx                                  48 f7 f1
[I]      6677  0x55555555aa8b    cmp rax, r9                              4c 39 c8
[I]      6678  0x55555555aa8e    jnb 0x55555555aad1                       73 41
[B]      6679  0x55555555aad1 loc_55555555aad1: // size=5 thread=0x100000000
[I]      6679  0x55555555aad1    cmp rsi, r8                              4c 39 c6
[I]      6680  0x55555555aad4    jnb 0x55555555aaf8                       73 22
[B]      6681  0x55555555aaf8 loc_55555555aaf8: // size=11 thread=0x100000000
[I]      6681  0x55555555aaf8    mov esi, 0x20                            be 20 00 00 00
[C]      6682 Calling function 0x7fffc2e8fe20(__overflow)
[!] Function 0x7fffc2e8fe20 is filtered, no tracing
[I]      6682  0x55555555aafd    call qword ptr [rip+0x1c285]             ff 15 85 c2 01 00
[B]      6683  0x55555555ab03 loc_55555555ab03: // size=2 thread=0x100000000
[I]      6683  0x55555555ab03    jmp 0x55555555aae1                       eb dc
[B]      6684  0x55555555aae1 loc_55555555aae1: // size=8 thread=0x100000000
[I]      6684  0x55555555aae1    mov rbx, r12                             4c 89 e3
[I]      6685  0x55555555aae4    cmp rbx, r13                             4c 39 eb
[I]      6686  0x55555555aae7    jb 0x55555555aab6                        72 cd
[B]      6687  0x55555555aae9 loc_55555555aae9: // size=9 thread=0x100000000
[I]      6687  0x55555555aae9    pop rbx                                  5b
[I]      6688  0x55555555aaea    pop r12                                  41 5c
[I]      6689  0x55555555aaec    pop r13                                  41 5d
[I]      6690  0x55555555aaee    pop r14                                  41 5e
[I]      6691  0x55555555aaf0    pop rbp                                  5d
[I]      6692  0x55555555aaf1    ret                                      c3
[B]      6693  0x555555563e8d loc_555555563e8d: // size=24 thread=0x100000000
[I]      6693  0x555555563e8d    mov r12, qword ptr [rbp-0x38]            4c 8b 65 c8
[I]      6694  0x555555563e91    mov rax, qword ptr [rip+0x135f8]         48 8b 05 f8 35 01 00
[I]      6695  0x555555563e98    mov rdi, qword ptr [rax+rbx*8]           48 8b 3c d8
[I]      6696  0x555555563e9c    mov qword ptr [rbp-0x38], rdi            48 89 7d c8
[C]      6697 Calling function 0x555555560db0(error_at_line)
[I]      6697  0x555555563ea0    call 0x555555560db0                      e8 0b cf ff ff
[B]      6698  0x555555560db0 loc_555555560db0: // size=53 thread=0x100000000
[I]      6698  0x555555560db0    push rbp                                 55
[I]      6699  0x555555560db1    mov rbp, rsp                             48 89 e5
[I]      6700  0x555555560db4    push r13                                 41 55
[I]      6701  0x555555560db6    push r12                                 41 54
[I]      6702  0x555555560db8    push rbx                                 53
[I]      6703  0x555555560db9    sub rsp, 0x2a8                           48 81 ec a8 02 00 00
[I]      6704  0x555555560dc0    cmp byte ptr [rip+0x16562], 0x0          80 3d 62 65 01 00 00
[I]      6705  0x555555560dc7    movzx r13d, byte ptr [rip+0x16559]       44 0f b6 2d 59 65 01 00
[I]      6706  0x555555560dcf    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6707  0x555555560dd8    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      6708  0x555555560ddc    mov r12, rdi                             49 89 fc
[I]      6709  0x555555560ddf    jz 0x555555560e88                        0f 84 a3 00 00 00
[B]      6710  0x555555560e88 loc_555555560e88: // size=7 thread=0x100000000
[I]      6710  0x555555560e88    xor ebx, ebx                             31 db
[I]      6711  0x555555560e8a    test r13b, r13b                          45 84 ed
[I]      6712  0x555555560e8d    jz 0x555555560e14                        74 85
[B]      6713  0x555555560e14 loc_555555560e14: // size=13 thread=0x100000000
[I]      6713  0x555555560e14    cmp byte ptr [rip+0x164fd], 0x0          80 3d fd 64 01 00 00
[I]      6714  0x555555560e1b    jnz 0x555555560ee8                       0f 85 c7 00 00 00
[B]      6715  0x555555560e21 loc_555555560e21: // size=17 thread=0x100000000
[I]      6715  0x555555560e21    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      6716  0x555555560e29    test rax, rax                            48 85 c0
[I]      6717  0x555555560e2c    jz 0x555555560f14                        0f 84 e2 00 00 00
[B]      6718  0x555555560e32 loc_555555560e32: // size=13 thread=0x100000000
[I]      6718  0x555555560e32    add rbx, rax                             48 01 c3
[I]      6719  0x555555560e35    mov eax, dword ptr [rip+0x164e1]         8b 05 e1 64 01 00
[I]      6720  0x555555560e3b    test eax, eax                            85 c0
[I]      6721  0x555555560e3d    jz 0x555555560e60                        74 21
[B]      6722  0x555555560e60 loc_555555560e60: // size=19 thread=0x100000000
[I]      6722  0x555555560e60    mov rax, qword ptr [rbp-0x28]            48 8b 45 d8
[I]      6723  0x555555560e64    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6724  0x555555560e6d    jnz 0x555555560fe7                       0f 85 74 01 00 00
[B]      6725  0x555555560e73 loc_555555560e73: // size=17 thread=0x100000000
[I]      6725  0x555555560e73    add rsp, 0x2a8                           48 81 c4 a8 02 00 00
[I]      6726  0x555555560e7a    mov rax, rbx                             48 89 d8
[I]      6727  0x555555560e7d    pop rbx                                  5b
[I]      6728  0x555555560e7e    pop r12                                  41 5c
[I]      6729  0x555555560e80    pop r13                                  41 5d
[I]      6730  0x555555560e82    pop rbp                                  5d
[I]      6731  0x555555560e83    ret                                      c3
[B]      6732  0x555555563ea5 loc_555555563ea5: // size=32 thread=0x100000000
[I]      6732  0x555555563ea5    mov rdi, qword ptr [rbp-0x38]            48 8b 7d c8
[I]      6733  0x555555563ea9    mov rsi, r12                             4c 89 e6
[I]      6734  0x555555563eac    mov qword ptr [rbp-0x40], rax            48 89 45 c0
[I]      6735  0x555555563eb0    mov rax, qword ptr [r15+0x10]            49 8b 47 10
[I]      6736  0x555555563eb4    mov rcx, qword ptr [rax+r13*1]           4a 8b 0c 28
[I]      6737  0x555555563eb8    add r13, 0x8                             49 83 c5 08
[I]      6738  0x555555563ebc    mov qword ptr [rbp-0x48], rcx            48 89 4d b8
[C]      6739 Calling function 0x55555556c610(error_at_line)
[I]      6739  0x555555563ec0    call 0x55555556c610                      e8 4b 87 00 00
[B]      6740  0x55555556c610 loc_55555556c610: // size=46 thread=0x100000000
[I]      6740  0x55555556c610    nop edx, edi                             f3 0f 1e fa
[I]      6741  0x55555556c614    push rbp                                 55
[I]      6742  0x55555556c615    mov rbp, rsp                             48 89 e5
[I]      6743  0x55555556c618    push r12                                 41 54
[I]      6744  0x55555556c61a    push rbx                                 53
[I]      6745  0x55555556c61b    mov rbx, rdi                             48 89 fb
[I]      6746  0x55555556c61e    sub rsp, 0x2a0                           48 81 ec a0 02 00 00
[I]      6747  0x55555556c625    cmp byte ptr [rip+0xacf4], 0x0           80 3d f4 ac 00 00 00
[I]      6748  0x55555556c62c    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6749  0x55555556c635    mov qword ptr [rbp-0x18], r12            4c 89 65 e8
[I]      6750  0x55555556c639    mov r12, rsi                             49 89 f4
[I]      6751  0x55555556c63c    jz 0x55555556c670                        74 32
[B]      6752  0x55555556c670 loc_55555556c670: // size=9 thread=0x100000000
[I]      6752  0x55555556c670    cmp byte ptr [rip+0xacb2], 0x0           80 3d b2 ac 00 00 00
[I]      6753  0x55555556c677    jz 0x55555556c6be                        74 45
[B]      6754  0x55555556c6be loc_55555556c6be: // size=9 thread=0x100000000
[I]      6754  0x55555556c6be    cmp byte ptr [rip+0xac63], 0x0           80 3d 63 ac 00 00 00
[I]      6755  0x55555556c6c5    jz 0x55555556c700                        74 39
[B]      6756  0x55555556c700 loc_55555556c700: // size=9 thread=0x100000000
[I]      6756  0x55555556c700    cmp byte ptr [rip+0xac11], 0x0           80 3d 11 ac 00 00 00
[I]      6757  0x55555556c707    jz 0x55555556c735                        74 2c
[B]      6758  0x55555556c735 loc_55555556c735: // size=15 thread=0x100000000
[I]      6758  0x55555556c735    mov rcx, r12                             4c 89 e1
[I]      6759  0x55555556c738    xor edx, edx                             31 d2
[I]      6760  0x55555556c73a    xor esi, esi                             31 f6
[I]      6761  0x55555556c73c    mov rdi, rbx                             48 89 df
[C]      6762 Calling function 0x555555561fd0(error_at_line)
[I]      6762  0x55555556c73f    call 0x555555561fd0                      e8 8c 58 ff ff
[B]      6763  0x555555561fd0 loc_555555561fd0: // size=45 thread=0x100000000
[I]      6763  0x555555561fd0    nop edx, edi                             f3 0f 1e fa
[I]      6764  0x555555561fd4    push rbp                                 55
[I]      6765  0x555555561fd5    mov r9, rdx                              49 89 d1
[I]      6766  0x555555561fd8    mov rbp, rsp                             48 89 e5
[I]      6767  0x555555561fdb    push r15                                 41 57
[I]      6768  0x555555561fdd    mov r15d, esi                            41 89 f7
[I]      6769  0x555555561fe0    push r14                                 41 56
[I]      6770  0x555555561fe2    push r13                                 41 55
[I]      6771  0x555555561fe4    mov r13, rdi                             49 89 fd
[I]      6772  0x555555561fe7    push r12                                 41 54
[I]      6773  0x555555561fe9    mov r12, rcx                             49 89 cc
[I]      6774  0x555555561fec    push rbx                                 53
[I]      6775  0x555555561fed    sub rsp, 0x18                            48 83 ec 18
[I]      6776  0x555555561ff1    movzx eax, byte ptr [rip+0x15328]        0f b6 05 28 53 01 00
[I]      6777  0x555555561ff8    test sil, sil                            40 84 f6
[I]      6778  0x555555561ffb    jz 0x555555562050                        74 53
[B]      6779  0x555555562050 loc_555555562050: // size=7 thread=0x100000000
[I]      6779  0x555555562050    mov r14, qword ptr [rdi]                 4c 8b 37
[I]      6780  0x555555562053    test al, al                              84 c0
[I]      6781  0x555555562055    jz 0x555555562009                        74 b2
[B]      6782  0x555555562009 loc_555555562009: // size=40 thread=0x100000000
[I]      6782  0x555555562009    mov edx, dword ptr [r13+0xc4]            41 8b 95 c4 00 00 00
[I]      6783  0x555555562010    mov rsi, qword ptr [rip+0x155e9]         48 8b 35 e9 55 01 00
[I]      6784  0x555555562017    sub rsp, 0x8                             48 83 ec 08
[I]      6785  0x55555556201b    push qword ptr [r13+0x10]                41 ff 75 10
[I]      6786  0x55555556201f    xor r15d, 0x1                            41 83 f7 01
[I]      6787  0x555555562023    xor ecx, ecx                             31 c9
[I]      6788  0x555555562025    movzx r8d, r15b                          45 0f b6 c7
[I]      6789  0x555555562029    mov rdi, r14                             4c 89 f7
[C]      6790 Calling function 0x555555561be0(error_at_line)
[I]      6790  0x55555556202c    call 0x555555561be0                      e8 af fb ff ff
[B]      6791  0x555555561be0 loc_555555561be0: // size=132 thread=0x100000000
[I]      6791  0x555555561be0    push rbp                                 55
[I]      6792  0x555555561be1    mov rbp, rsp                             48 89 e5
[I]      6793  0x555555561be4    push r15                                 41 57
[I]      6794  0x555555561be6    push r14                                 41 56
[I]      6795  0x555555561be8    push r13                                 41 55
[I]      6796  0x555555561bea    push r12                                 41 54
[I]      6797  0x555555561bec    push rbx                                 53
[I]      6798  0x555555561bed    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      6799  0x555555561bf4    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      6800  0x555555561bf9    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      6801  0x555555561c00    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      6802  0x555555561c05    sub rsp, 0x68                            48 83 ec 68
[I]      6803  0x555555561c09    mov qword ptr [rbp-0x2080], rdi          48 89 bd 80 df ff ff
[I]      6804  0x555555561c10    mov rbx, rdi                             48 89 fb
[I]      6805  0x555555561c13    mov r12, rcx                             49 89 cc
[I]      6806  0x555555561c16    mov r14d, r8d                            45 89 c6
[I]      6807  0x555555561c19    mov qword ptr [rbp-0x2058], r9           4c 89 8d a8 df ff ff
[I]      6808  0x555555561c20    lea rax, ptr [rbp-0x2040]                48 8d 85 c0 df ff ff
[I]      6809  0x555555561c27    mov ecx, edx                             89 d1
[I]      6810  0x555555561c29    xor r8d, r8d                             45 31 c0
[I]      6811  0x555555561c2c    mov rdx, rsi                             48 89 f2
[I]      6812  0x555555561c2f    lea rdi, ptr [rbp-0x2048]                48 8d bd b8 df ff ff
[I]      6813  0x555555561c36    mov rsi, rbx                             48 89 de
[I]      6814  0x555555561c39    lea r9, ptr [rbp-0x2049]                 4c 8d 8d b7 df ff ff
[I]      6815  0x555555561c40    mov r13, qword ptr fs:[0x28]             64 4c 8b 2c 25 28 00 00 00
[I]      6816  0x555555561c49    mov qword ptr [rbp-0x38], r13            4c 89 6d c8
[I]      6817  0x555555561c4d    mov r13, qword ptr [rbp+0x10]            4c 8b 6d 10
[I]      6818  0x555555561c51    mov qword ptr [rbp-0x2088], rax          48 89 85 78 df ff ff
[I]      6819  0x555555561c58    mov qword ptr [rbp-0x2048], rax          48 89 85 b8 df ff ff
[C]      6820 Calling function 0x555555568e70(error_at_line)
[I]      6820  0x555555561c5f    call 0x555555568e70                      e8 0c 72 00 00
[B]      6821  0x555555568e70 loc_555555568e70: // size=99 thread=0x100000000
[I]      6821  0x555555568e70    nop edx, edi                             f3 0f 1e fa
[I]      6822  0x555555568e74    push rbp                                 55
[I]      6823  0x555555568e75    mov rbp, rsp                             48 89 e5
[I]      6824  0x555555568e78    push r15                                 41 57
[I]      6825  0x555555568e7a    mov r15, rdx                             49 89 d7
[I]      6826  0x555555568e7d    push r14                                 41 56
[I]      6827  0x555555568e7f    mov r14, rsi                             49 89 f6
[I]      6828  0x555555568e82    push r13                                 41 55
[I]      6829  0x555555568e84    push r12                                 41 54
[I]      6830  0x555555568e86    push rbx                                 53
[I]      6831  0x555555568e87    sub rsp, 0x68                            48 83 ec 68
[I]      6832  0x555555568e8b    test rdx, rdx                            48 85 d2
[I]      6833  0x555555568e8e    mov qword ptr [rbp-0x80], rdi            48 89 7d 80
[I]      6834  0x555555568e92    lea rdx, ptr [rip+0xe447]                48 8d 15 47 e4 00 00
[I]      6835  0x555555568e99    cmovz r15, rdx                           4c 0f 44 fa
[I]      6836  0x555555568e9d    mov qword ptr [rbp-0x60], r8             4c 89 45 a0
[I]      6837  0x555555568ea1    mov qword ptr [rbp-0x88], r9             4c 89 8d 78 ff ff ff
[I]      6838  0x555555568ea8    mov ebx, dword ptr [r15]                 41 8b 1f
[I]      6839  0x555555568eab    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      6840  0x555555568eb4    mov qword ptr [rbp-0x38], r12            4c 89 65 c8
[I]      6841  0x555555568eb8    mov r12, qword ptr [rdi]                 4c 8b 27
[I]      6842  0x555555568ebb    cmp ebx, 0x2                             83 fb 02
[I]      6843  0x555555568ebe    setbe r13b                               41 0f 96 c5
[I]      6844  0x555555568ec2    and r13b, byte ptr [rip+0xe3f5]          44 22 2d f5 e3 00 00
[I]      6845  0x555555568ec9    mov byte ptr [rbp-0x71], r13b            44 88 6d 8f
[I]      6846  0x555555568ecd    jnz 0x555555569000                       0f 85 2d 01 00 00
[B]      6847  0x555555568ed3 loc_555555568ed3: // size=8 thread=0x100000000
[I]      6847  0x555555568ed3    test ecx, ecx                            85 c9
[I]      6848  0x555555568ed5    jnz 0x555555569168                       0f 85 8d 02 00 00
[B]      6849  0x555555568edb loc_555555568edb: // size=12 thread=0x100000000
[I]      6849  0x555555568edb    mov rdi, rsi                             48 89 f7
[I]      6850  0x555555568ede    mov r12, r14                             4d 89 f4
[C]      6851 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      6851  0x555555568ee1    call qword ptr [rip+0xde71]              ff 15 71 de 00 00
[B]      6852  0x555555568ee7 loc_555555568ee7: // size=14 thread=0x100000000
[I]      6852  0x555555568ee7    cmp qword ptr [rbp-0x60], 0x0            48 83 7d a0 00
[I]      6853  0x555555568eec    mov rbx, rax                             48 89 c3
[I]      6854  0x555555568eef    jz 0x555555568f98                        0f 84 a3 00 00 00
[B]      6855  0x555555568f98 loc_555555568f98: // size=13 thread=0x100000000
[I]      6855  0x555555568f98    cmp byte ptr [rip+0xe31e], 0x0           80 3d 1e e3 00 00 00
[I]      6856  0x555555568f9f    jz 0x555555569248                        0f 84 a3 02 00 00
[B]      6857  0x555555568fa5 loc_555555568fa5: // size=13 thread=0x100000000
[I]      6857  0x555555568fa5    cmp byte ptr [rip+0xe310], 0x0           80 3d 10 e3 00 00 00
[I]      6858  0x555555568fac    jz 0x555555569248                        0f 84 96 02 00 00
[B]      6859  0x555555569248 loc_555555569248: // size=15 thread=0x100000000
[I]      6859  0x555555569248    mov rax, qword ptr [rbp-0x88]            48 8b 85 78 ff ff ff
[I]      6860  0x55555556924f    mov byte ptr [rax], 0x0                  c6 00 00
[I]      6861  0x555555569252    jmp 0x555555568fd0                       e9 79 fd ff ff
[B]      6862  0x555555568fd0 loc_555555568fd0: // size=26 thread=0x100000000
[I]      6862  0x555555568fd0    mov rax, qword ptr [rbp-0x80]            48 8b 45 80
[I]      6863  0x555555568fd4    mov qword ptr [rax], r12                 4c 89 20
[I]      6864  0x555555568fd7    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      6865  0x555555568fdb    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6866  0x555555568fe4    jnz 0x555555569443                       0f 85 59 04 00 00
[B]      6867  0x555555568fea loc_555555568fea: // size=18 thread=0x100000000
[I]      6867  0x555555568fea    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      6868  0x555555568fee    mov rax, rbx                             48 89 d8
[I]      6869  0x555555568ff1    pop rbx                                  5b
[I]      6870  0x555555568ff2    pop r12                                  41 5c
[I]      6871  0x555555568ff4    pop r13                                  41 5d
[I]      6872  0x555555568ff6    pop r14                                  41 5e
[I]      6873  0x555555568ff8    pop r15                                  41 5f
[I]      6874  0x555555568ffa    pop rbp                                  5d
[I]      6875  0x555555568ffb    ret                                      c3
[B]      6876  0x555555561c64 loc_555555561c64: // size=20 thread=0x100000000
[I]      6876  0x555555561c64    mov rbx, rax                             48 89 c3
[I]      6877  0x555555561c67    movzx eax, byte ptr [rbp-0x2049]         0f b6 85 b7 df ff ff
[I]      6878  0x555555561c6e    mov byte ptr [rbp-0x2059], al            88 85 a7 df ff ff
[I]      6879  0x555555561c74    test al, al                              84 c0
[I]      6880  0x555555561c76    jz 0x555555561c81                        74 09
[B]      6881  0x555555561c81 loc_555555561c81: // size=12 thread=0x100000000
[I]      6881  0x555555561c81    mov r14, qword ptr [rip+0x15020]         4c 8b 35 20 50 01 00
[I]      6882  0x555555561c88    test r12, r12                            4d 85 e4
[I]      6883  0x555555561c8b    jz 0x555555561ce1                        74 54
[B]      6884  0x555555561ce1 loc_555555561ce1: // size=16 thread=0x100000000
[I]      6884  0x555555561ce1    mov r12, qword ptr [rbp-0x2048]          4c 8b a5 b8 df ff ff
[I]      6885  0x555555561ce8    test r13, r13                            4d 85 ed
[I]      6886  0x555555561ceb    jz 0x555555561ed0                        0f 84 df 01 00 00
[B]      6887  0x555555561ed0 loc_555555561ed0: // size=22 thread=0x100000000
[I]      6887  0x555555561ed0    mov qword ptr [rbp-0x2078], rbx          48 89 9d 88 df ff ff
[I]      6888  0x555555561ed7    xor r15d, r15d                           45 31 ff
[I]      6889  0x555555561eda    mov qword ptr [rbp-0x2070], r12          4c 89 a5 90 df ff ff
[I]      6890  0x555555561ee1    jmp 0x555555561d86                       e9 a0 fe ff ff
[B]      6891  0x555555561d86 loc_555555561d86: // size=16 thread=0x100000000
[I]      6891  0x555555561d86    mov rax, qword ptr [rbp-0x2058]          48 8b 85 a8 df ff ff
[I]      6892  0x555555561d8d    test rax, rax                            48 85 c0
[I]      6893  0x555555561d90    jz 0x555555561ea8                        0f 84 12 01 00 00
[B]      6894  0x555555561ea8 loc_555555561ea8: // size=28 thread=0x100000000
[I]      6894  0x555555561ea8    mov rcx, qword ptr [r14]                 49 8b 0e
[I]      6895  0x555555561eab    mov rdx, qword ptr [rbp-0x2078]          48 8b 95 88 df ff ff
[I]      6896  0x555555561eb2    mov esi, 0x1                             be 01 00 00 00
[I]      6897  0x555555561eb7    mov rdi, qword ptr [rbp-0x2070]          48 8b bd 90 df ff ff
[C]      6898 Calling function 0x7fffc2e8c740(fwrite_unlocked)
[!] Function 0x7fffc2e8c740 is filtered, no tracing
[I]      6898  0x555555561ebe    call qword ptr [rip+0x1501c]             ff 15 1c 50 01 00
[B]      6899  0x555555561ec4 loc_555555561ec4: // size=12 thread=0x100000000
[I]      6899  0x555555561ec4    add qword ptr [rip+0x15465], rbx         48 01 1d 65 54 01 00
[I]      6900  0x555555561ecb    jmp 0x555555561ddf                       e9 0f ff ff ff
[B]      6901  0x555555561ddf loc_555555561ddf: // size=5 thread=0x100000000
[I]      6901  0x555555561ddf    test r13, r13                            4d 85 ed
[I]      6902  0x555555561de2    jz 0x555555561e24                        74 40
[B]      6903  0x555555561e24 loc_555555561e24: // size=9 thread=0x100000000
[I]      6903  0x555555561e24    cmp qword ptr [rbp-0x2080], r12          4c 39 a5 80 df ff ff
[I]      6904  0x555555561e2b    jz 0x555555561e42                        74 15
[B]      6905  0x555555561e42 loc_555555561e42: // size=29 thread=0x100000000
[I]      6905  0x555555561e42    movzx eax, byte ptr [rbp-0x2059]         0f b6 85 a7 df ff ff
[I]      6906  0x555555561e49    add rax, rbx                             48 01 d8
[I]      6907  0x555555561e4c    mov rdx, qword ptr [rbp-0x38]            48 8b 55 c8
[I]      6908  0x555555561e50    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      6909  0x555555561e59    jnz 0x555555561fbd                       0f 85 5e 01 00 00
[B]      6910  0x555555561e5f loc_555555561e5f: // size=18 thread=0x100000000
[I]      6910  0x555555561e5f    add rsp, 0x2068                          48 81 c4 68 20 00 00
[I]      6911  0x555555561e66    pop rbx                                  5b
[I]      6912  0x555555561e67    pop r12                                  41 5c
[I]      6913  0x555555561e69    pop r13                                  41 5d
[I]      6914  0x555555561e6b    pop r14                                  41 5e
[I]      6915  0x555555561e6d    pop r15                                  41 5f
[I]      6916  0x555555561e6f    pop rbp                                  5d
[I]      6917  0x555555561e70    ret                                      c3
[B]      6918  0x555555562031 loc_555555562031: // size=10 thread=0x100000000
[I]      6918  0x555555562031    pop rcx                                  59
[I]      6919  0x555555562032    pop rsi                                  5e
[I]      6920  0x555555562033    mov rbx, rax                             48 89 c3
[C]      6921 Calling function 0x55555555f4f0(error_at_line)
[I]      6921  0x555555562036    call 0x55555555f4f0                      e8 b5 d4 ff ff
[B]      6922  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      6922  0x55555555f4f0    push rbp                                 55
[I]      6923  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      6924  0x55555555f4f4    push r15                                 41 57
[I]      6925  0x55555555f4f6    push r14                                 41 56
[I]      6926  0x55555555f4f8    push r13                                 41 55
[I]      6927  0x55555555f4fa    push r12                                 41 54
[I]      6928  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      6929  0x55555555f503    push rbx                                 53
[I]      6930  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      6931  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      6932  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      6933  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      6934  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      6935  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      6936  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      6937  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      6937  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      6938  0x55555555f58d    test eax, eax                            85 c0
[I]      6939  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      6940  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      6940  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      6941  0x55555555f597    test eax, eax                            85 c0
[I]      6942  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      6943  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      6943  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      6944  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6945  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      6946  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      6946  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      6947  0x55555555f5e6    pop rbx                                  5b
[I]      6948  0x55555555f5e7    pop r12                                  41 5c
[I]      6949  0x55555555f5e9    pop r13                                  41 5d
[I]      6950  0x55555555f5eb    pop r14                                  41 5e
[I]      6951  0x55555555f5ed    pop r15                                  41 5f
[I]      6952  0x55555555f5ef    pop rbp                                  5d
[I]      6953  0x55555555f5f0    ret                                      c3
[B]      6954  0x55555556203b loc_55555556203b: // size=18 thread=0x100000000
[I]      6954  0x55555556203b    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      6955  0x55555556203f    mov rax, rbx                             48 89 d8
[I]      6956  0x555555562042    pop rbx                                  5b
[I]      6957  0x555555562043    pop r12                                  41 5c
[I]      6958  0x555555562045    pop r13                                  41 5d
[I]      6959  0x555555562047    pop r14                                  41 5e
[I]      6960  0x555555562049    pop r15                                  41 5f
[I]      6961  0x55555556204b    pop rbp                                  5d
[I]      6962  0x55555556204c    ret                                      c3
[B]      6963  0x55555556c744 loc_55555556c744: // size=10 thread=0x100000000
[I]      6963  0x55555556c744    mov eax, dword ptr [rip+0xabd2]          8b 05 d2 ab 00 00
[I]      6964  0x55555556c74a    test eax, eax                            85 c0
[I]      6965  0x55555556c74c    jnz 0x55555556c770                       75 22
[B]      6966  0x55555556c74e loc_55555556c74e: // size=19 thread=0x100000000
[I]      6966  0x55555556c74e    mov rax, qword ptr [rbp-0x18]            48 8b 45 e8
[I]      6967  0x55555556c752    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      6968  0x55555556c75b    jnz 0x55555556c8b6                       0f 85 55 01 00 00
[B]      6969  0x55555556c761 loc_55555556c761: // size=12 thread=0x100000000
[I]      6969  0x55555556c761    add rsp, 0x2a0                           48 81 c4 a0 02 00 00
[I]      6970  0x55555556c768    pop rbx                                  5b
[I]      6971  0x55555556c769    pop r12                                  41 5c
[I]      6972  0x55555556c76b    pop rbp                                  5d
[I]      6973  0x55555556c76c    ret                                      c3
[B]      6974  0x555555563ec5 loc_555555563ec5: // size=15 thread=0x100000000
[I]      6974  0x555555563ec5    mov rax, qword ptr [rip+0x1373c]         48 8b 05 3c 37 01 00
[I]      6975  0x555555563ecc    sub rax, r14                             4c 29 f0
[I]      6976  0x555555563ecf    cmp rbx, rax                             48 39 c3
[I]      6977  0x555555563ed2    jl 0x555555563e70                        7c 9c
[B]      6978  0x555555563e70 loc_555555563e70: // size=29 thread=0x100000000
[I]      6978  0x555555563e70    mov rcx, qword ptr [rbp-0x48]            48 8b 4d b8
[I]      6979  0x555555563e74    mov rdi, qword ptr [rbp-0x40]            48 8b 7d c0
[I]      6980  0x555555563e78    add rbx, r14                             4c 01 f3
[I]      6981  0x555555563e7b    add rcx, r12                             4c 01 e1
[I]      6982  0x555555563e7e    add rdi, r12                             4c 01 e7
[I]      6983  0x555555563e81    mov rsi, rcx                             48 89 ce
[I]      6984  0x555555563e84    mov qword ptr [rbp-0x38], rcx            48 89 4d c8
[C]      6985 Calling function 0x55555555aa50(error_at_line)
[I]      6985  0x555555563e88    call 0x55555555aa50                      e8 c3 6b ff ff
[B]      6986  0x55555555aa50 loc_55555555aa50: // size=9 thread=0x100000000
[I]      6986  0x55555555aa50    cmp rdi, rsi                             48 39 f7
[I]      6987  0x55555555aa53    jnb 0x55555555ab20                       0f 83 c7 00 00 00
[B]      6988  0x55555555aa59 loc_55555555aa59: // size=26 thread=0x100000000
[I]      6988  0x55555555aa59    push rbp                                 55
[I]      6989  0x55555555aa5a    mov rbp, rsp                             48 89 e5
[I]      6990  0x55555555aa5d    push r14                                 41 56
[I]      6991  0x55555555aa5f    mov r14, qword ptr [rip+0x1c242]         4c 8b 35 42 c2 01 00
[I]      6992  0x55555555aa66    push r13                                 41 55
[I]      6993  0x55555555aa68    mov r13, rsi                             49 89 f5
[I]      6994  0x55555555aa6b    push r12                                 41 54
[I]      6995  0x55555555aa6d    push rbx                                 53
[I]      6996  0x55555555aa6e    mov rbx, rdi                             48 89 fb
[I]      6997  0x55555555aa71    jmp 0x55555555aab6                       eb 43
[B]      6998  0x55555555aab6 loc_55555555aab6: // size=27 thread=0x100000000
[I]      6998  0x55555555aab6    mov rdi, qword ptr [r14]                 49 8b 3e
[I]      6999  0x55555555aab9    mov rcx, qword ptr [rip+0x1ccd0]         48 8b 0d d0 cc 01 00
[I]      7000  0x55555555aac0    lea r12, ptr [rbx+0x1]                   4c 8d 63 01
[I]      7001  0x55555555aac4    mov rsi, qword ptr [rdi+0x28]            48 8b 77 28
[I]      7002  0x55555555aac8    mov r8, qword ptr [rdi+0x30]             4c 8b 47 30
[I]      7003  0x55555555aacc    test rcx, rcx                            48 85 c9
[I]      7004  0x55555555aacf    jnz 0x55555555aa78                       75 a7
[B]      7005  0x55555555aa78 loc_55555555aa78: // size=24 thread=0x100000000
[I]      7005  0x55555555aa78    mov rax, r13                             4c 89 e8
[I]      7006  0x55555555aa7b    xor edx, edx                             31 d2
[I]      7007  0x55555555aa7d    div rcx                                  48 f7 f1
[I]      7008  0x55555555aa80    xor edx, edx                             31 d2
[I]      7009  0x55555555aa82    mov r9, rax                              49 89 c1
[I]      7010  0x55555555aa85    mov rax, r12                             4c 89 e0
[I]      7011  0x55555555aa88    div rcx                                  48 f7 f1
[I]      7012  0x55555555aa8b    cmp rax, r9                              4c 39 c8
[I]      7013  0x55555555aa8e    jnb 0x55555555aad1                       73 41
[B]      7014  0x55555555aad1 loc_55555555aad1: // size=5 thread=0x100000000
[I]      7014  0x55555555aad1    cmp rsi, r8                              4c 39 c6
[I]      7015  0x55555555aad4    jnb 0x55555555aaf8                       73 22
[B]      7016  0x55555555aaf8 loc_55555555aaf8: // size=11 thread=0x100000000
[I]      7016  0x55555555aaf8    mov esi, 0x20                            be 20 00 00 00
[C]      7017 Calling function 0x7fffc2e8fe20(__overflow)
[!] Function 0x7fffc2e8fe20 is filtered, no tracing
[I]      7017  0x55555555aafd    call qword ptr [rip+0x1c285]             ff 15 85 c2 01 00
[B]      7018  0x55555555ab03 loc_55555555ab03: // size=2 thread=0x100000000
[I]      7018  0x55555555ab03    jmp 0x55555555aae1                       eb dc
[B]      7019  0x55555555aae1 loc_55555555aae1: // size=8 thread=0x100000000
[I]      7019  0x55555555aae1    mov rbx, r12                             4c 89 e3
[I]      7020  0x55555555aae4    cmp rbx, r13                             4c 39 eb
[I]      7021  0x55555555aae7    jb 0x55555555aab6                        72 cd
[B]      7022  0x55555555aab6 loc_55555555aab6: // size=27 thread=0x100000000
[I]      7022  0x55555555aab6    mov rdi, qword ptr [r14]                 49 8b 3e
[I]      7023  0x55555555aab9    mov rcx, qword ptr [rip+0x1ccd0]         48 8b 0d d0 cc 01 00
[I]      7024  0x55555555aac0    lea r12, ptr [rbx+0x1]                   4c 8d 63 01
[I]      7025  0x55555555aac4    mov rsi, qword ptr [rdi+0x28]            48 8b 77 28
[I]      7026  0x55555555aac8    mov r8, qword ptr [rdi+0x30]             4c 8b 47 30
[I]      7027  0x55555555aacc    test rcx, rcx                            48 85 c9
[I]      7028  0x55555555aacf    jnz 0x55555555aa78                       75 a7
[B]      7029  0x55555555aa78 loc_55555555aa78: // size=24 thread=0x100000000
[I]      7029  0x55555555aa78    mov rax, r13                             4c 89 e8
[I]      7030  0x55555555aa7b    xor edx, edx                             31 d2
[I]      7031  0x55555555aa7d    div rcx                                  48 f7 f1
[I]      7032  0x55555555aa80    xor edx, edx                             31 d2
[I]      7033  0x55555555aa82    mov r9, rax                              49 89 c1
[I]      7034  0x55555555aa85    mov rax, r12                             4c 89 e0
[I]      7035  0x55555555aa88    div rcx                                  48 f7 f1
[I]      7036  0x55555555aa8b    cmp rax, r9                              4c 39 c8
[I]      7037  0x55555555aa8e    jnb 0x55555555aad1                       73 41
[B]      7038  0x55555555aad1 loc_55555555aad1: // size=5 thread=0x100000000
[I]      7038  0x55555555aad1    cmp rsi, r8                              4c 39 c6
[I]      7039  0x55555555aad4    jnb 0x55555555aaf8                       73 22
[B]      7040  0x55555555aaf8 loc_55555555aaf8: // size=11 thread=0x100000000
[I]      7040  0x55555555aaf8    mov esi, 0x20                            be 20 00 00 00
[C]      7041 Calling function 0x7fffc2e8fe20(__overflow)
[!] Function 0x7fffc2e8fe20 is filtered, no tracing
[I]      7041  0x55555555aafd    call qword ptr [rip+0x1c285]             ff 15 85 c2 01 00
[B]      7042  0x55555555ab03 loc_55555555ab03: // size=2 thread=0x100000000
[I]      7042  0x55555555ab03    jmp 0x55555555aae1                       eb dc
[B]      7043  0x55555555aae1 loc_55555555aae1: // size=8 thread=0x100000000
[I]      7043  0x55555555aae1    mov rbx, r12                             4c 89 e3
[I]      7044  0x55555555aae4    cmp rbx, r13                             4c 39 eb
[I]      7045  0x55555555aae7    jb 0x55555555aab6                        72 cd
[B]      7046  0x55555555aae9 loc_55555555aae9: // size=9 thread=0x100000000
[I]      7046  0x55555555aae9    pop rbx                                  5b
[I]      7047  0x55555555aaea    pop r12                                  41 5c
[I]      7048  0x55555555aaec    pop r13                                  41 5d
[I]      7049  0x55555555aaee    pop r14                                  41 5e
[I]      7050  0x55555555aaf0    pop rbp                                  5d
[I]      7051  0x55555555aaf1    ret                                      c3
[B]      7052  0x555555563e8d loc_555555563e8d: // size=24 thread=0x100000000
[I]      7052  0x555555563e8d    mov r12, qword ptr [rbp-0x38]            4c 8b 65 c8
[I]      7053  0x555555563e91    mov rax, qword ptr [rip+0x135f8]         48 8b 05 f8 35 01 00
[I]      7054  0x555555563e98    mov rdi, qword ptr [rax+rbx*8]           48 8b 3c d8
[I]      7055  0x555555563e9c    mov qword ptr [rbp-0x38], rdi            48 89 7d c8
[C]      7056 Calling function 0x555555560db0(error_at_line)
[I]      7056  0x555555563ea0    call 0x555555560db0                      e8 0b cf ff ff
[B]      7057  0x555555560db0 loc_555555560db0: // size=53 thread=0x100000000
[I]      7057  0x555555560db0    push rbp                                 55
[I]      7058  0x555555560db1    mov rbp, rsp                             48 89 e5
[I]      7059  0x555555560db4    push r13                                 41 55
[I]      7060  0x555555560db6    push r12                                 41 54
[I]      7061  0x555555560db8    push rbx                                 53
[I]      7062  0x555555560db9    sub rsp, 0x2a8                           48 81 ec a8 02 00 00
[I]      7063  0x555555560dc0    cmp byte ptr [rip+0x16562], 0x0          80 3d 62 65 01 00 00
[I]      7064  0x555555560dc7    movzx r13d, byte ptr [rip+0x16559]       44 0f b6 2d 59 65 01 00
[I]      7065  0x555555560dcf    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      7066  0x555555560dd8    mov qword ptr [rbp-0x28], r12            4c 89 65 d8
[I]      7067  0x555555560ddc    mov r12, rdi                             49 89 fc
[I]      7068  0x555555560ddf    jz 0x555555560e88                        0f 84 a3 00 00 00
[B]      7069  0x555555560e88 loc_555555560e88: // size=7 thread=0x100000000
[I]      7069  0x555555560e88    xor ebx, ebx                             31 db
[I]      7070  0x555555560e8a    test r13b, r13b                          45 84 ed
[I]      7071  0x555555560e8d    jz 0x555555560e14                        74 85
[B]      7072  0x555555560e14 loc_555555560e14: // size=13 thread=0x100000000
[I]      7072  0x555555560e14    cmp byte ptr [rip+0x164fd], 0x0          80 3d fd 64 01 00 00
[I]      7073  0x555555560e1b    jnz 0x555555560ee8                       0f 85 c7 00 00 00
[B]      7074  0x555555560e21 loc_555555560e21: // size=17 thread=0x100000000
[I]      7074  0x555555560e21    mov rax, qword ptr [r12+0xc8]            49 8b 84 24 c8 00 00 00
[I]      7075  0x555555560e29    test rax, rax                            48 85 c0
[I]      7076  0x555555560e2c    jz 0x555555560f14                        0f 84 e2 00 00 00
[B]      7077  0x555555560e32 loc_555555560e32: // size=13 thread=0x100000000
[I]      7077  0x555555560e32    add rbx, rax                             48 01 c3
[I]      7078  0x555555560e35    mov eax, dword ptr [rip+0x164e1]         8b 05 e1 64 01 00
[I]      7079  0x555555560e3b    test eax, eax                            85 c0
[I]      7080  0x555555560e3d    jz 0x555555560e60                        74 21
[B]      7081  0x555555560e60 loc_555555560e60: // size=19 thread=0x100000000
[I]      7081  0x555555560e60    mov rax, qword ptr [rbp-0x28]            48 8b 45 d8
[I]      7082  0x555555560e64    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      7083  0x555555560e6d    jnz 0x555555560fe7                       0f 85 74 01 00 00
[B]      7084  0x555555560e73 loc_555555560e73: // size=17 thread=0x100000000
[I]      7084  0x555555560e73    add rsp, 0x2a8                           48 81 c4 a8 02 00 00
[I]      7085  0x555555560e7a    mov rax, rbx                             48 89 d8
[I]      7086  0x555555560e7d    pop rbx                                  5b
[I]      7087  0x555555560e7e    pop r12                                  41 5c
[I]      7088  0x555555560e80    pop r13                                  41 5d
[I]      7089  0x555555560e82    pop rbp                                  5d
[I]      7090  0x555555560e83    ret                                      c3
[B]      7091  0x555555563ea5 loc_555555563ea5: // size=32 thread=0x100000000
[I]      7091  0x555555563ea5    mov rdi, qword ptr [rbp-0x38]            48 8b 7d c8
[I]      7092  0x555555563ea9    mov rsi, r12                             4c 89 e6
[I]      7093  0x555555563eac    mov qword ptr [rbp-0x40], rax            48 89 45 c0
[I]      7094  0x555555563eb0    mov rax, qword ptr [r15+0x10]            49 8b 47 10
[I]      7095  0x555555563eb4    mov rcx, qword ptr [rax+r13*1]           4a 8b 0c 28
[I]      7096  0x555555563eb8    add r13, 0x8                             49 83 c5 08
[I]      7097  0x555555563ebc    mov qword ptr [rbp-0x48], rcx            48 89 4d b8
[C]      7098 Calling function 0x55555556c610(error_at_line)
[I]      7098  0x555555563ec0    call 0x55555556c610                      e8 4b 87 00 00
[B]      7099  0x55555556c610 loc_55555556c610: // size=46 thread=0x100000000
[I]      7099  0x55555556c610    nop edx, edi                             f3 0f 1e fa
[I]      7100  0x55555556c614    push rbp                                 55
[I]      7101  0x55555556c615    mov rbp, rsp                             48 89 e5
[I]      7102  0x55555556c618    push r12                                 41 54
[I]      7103  0x55555556c61a    push rbx                                 53
[I]      7104  0x55555556c61b    mov rbx, rdi                             48 89 fb
[I]      7105  0x55555556c61e    sub rsp, 0x2a0                           48 81 ec a0 02 00 00
[I]      7106  0x55555556c625    cmp byte ptr [rip+0xacf4], 0x0           80 3d f4 ac 00 00 00
[I]      7107  0x55555556c62c    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      7108  0x55555556c635    mov qword ptr [rbp-0x18], r12            4c 89 65 e8
[I]      7109  0x55555556c639    mov r12, rsi                             49 89 f4
[I]      7110  0x55555556c63c    jz 0x55555556c670                        74 32
[B]      7111  0x55555556c670 loc_55555556c670: // size=9 thread=0x100000000
[I]      7111  0x55555556c670    cmp byte ptr [rip+0xacb2], 0x0           80 3d b2 ac 00 00 00
[I]      7112  0x55555556c677    jz 0x55555556c6be                        74 45
[B]      7113  0x55555556c6be loc_55555556c6be: // size=9 thread=0x100000000
[I]      7113  0x55555556c6be    cmp byte ptr [rip+0xac63], 0x0           80 3d 63 ac 00 00 00
[I]      7114  0x55555556c6c5    jz 0x55555556c700                        74 39
[B]      7115  0x55555556c700 loc_55555556c700: // size=9 thread=0x100000000
[I]      7115  0x55555556c700    cmp byte ptr [rip+0xac11], 0x0           80 3d 11 ac 00 00 00
[I]      7116  0x55555556c707    jz 0x55555556c735                        74 2c
[B]      7117  0x55555556c735 loc_55555556c735: // size=15 thread=0x100000000
[I]      7117  0x55555556c735    mov rcx, r12                             4c 89 e1
[I]      7118  0x55555556c738    xor edx, edx                             31 d2
[I]      7119  0x55555556c73a    xor esi, esi                             31 f6
[I]      7120  0x55555556c73c    mov rdi, rbx                             48 89 df
[C]      7121 Calling function 0x555555561fd0(error_at_line)
[I]      7121  0x55555556c73f    call 0x555555561fd0                      e8 8c 58 ff ff
[B]      7122  0x555555561fd0 loc_555555561fd0: // size=45 thread=0x100000000
[I]      7122  0x555555561fd0    nop edx, edi                             f3 0f 1e fa
[I]      7123  0x555555561fd4    push rbp                                 55
[I]      7124  0x555555561fd5    mov r9, rdx                              49 89 d1
[I]      7125  0x555555561fd8    mov rbp, rsp                             48 89 e5
[I]      7126  0x555555561fdb    push r15                                 41 57
[I]      7127  0x555555561fdd    mov r15d, esi                            41 89 f7
[I]      7128  0x555555561fe0    push r14                                 41 56
[I]      7129  0x555555561fe2    push r13                                 41 55
[I]      7130  0x555555561fe4    mov r13, rdi                             49 89 fd
[I]      7131  0x555555561fe7    push r12                                 41 54
[I]      7132  0x555555561fe9    mov r12, rcx                             49 89 cc
[I]      7133  0x555555561fec    push rbx                                 53
[I]      7134  0x555555561fed    sub rsp, 0x18                            48 83 ec 18
[I]      7135  0x555555561ff1    movzx eax, byte ptr [rip+0x15328]        0f b6 05 28 53 01 00
[I]      7136  0x555555561ff8    test sil, sil                            40 84 f6
[I]      7137  0x555555561ffb    jz 0x555555562050                        74 53
[B]      7138  0x555555562050 loc_555555562050: // size=7 thread=0x100000000
[I]      7138  0x555555562050    mov r14, qword ptr [rdi]                 4c 8b 37
[I]      7139  0x555555562053    test al, al                              84 c0
[I]      7140  0x555555562055    jz 0x555555562009                        74 b2
[B]      7141  0x555555562009 loc_555555562009: // size=40 thread=0x100000000
[I]      7141  0x555555562009    mov edx, dword ptr [r13+0xc4]            41 8b 95 c4 00 00 00
[I]      7142  0x555555562010    mov rsi, qword ptr [rip+0x155e9]         48 8b 35 e9 55 01 00
[I]      7143  0x555555562017    sub rsp, 0x8                             48 83 ec 08
[I]      7144  0x55555556201b    push qword ptr [r13+0x10]                41 ff 75 10
[I]      7145  0x55555556201f    xor r15d, 0x1                            41 83 f7 01
[I]      7146  0x555555562023    xor ecx, ecx                             31 c9
[I]      7147  0x555555562025    movzx r8d, r15b                          45 0f b6 c7
[I]      7148  0x555555562029    mov rdi, r14                             4c 89 f7
[C]      7149 Calling function 0x555555561be0(error_at_line)
[I]      7149  0x55555556202c    call 0x555555561be0                      e8 af fb ff ff
[B]      7150  0x555555561be0 loc_555555561be0: // size=132 thread=0x100000000
[I]      7150  0x555555561be0    push rbp                                 55
[I]      7151  0x555555561be1    mov rbp, rsp                             48 89 e5
[I]      7152  0x555555561be4    push r15                                 41 57
[I]      7153  0x555555561be6    push r14                                 41 56
[I]      7154  0x555555561be8    push r13                                 41 55
[I]      7155  0x555555561bea    push r12                                 41 54
[I]      7156  0x555555561bec    push rbx                                 53
[I]      7157  0x555555561bed    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      7158  0x555555561bf4    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      7159  0x555555561bf9    sub rsp, 0x1000                          48 81 ec 00 10 00 00
[I]      7160  0x555555561c00    or qword ptr [rsp], 0x0                  48 83 0c 24 00
[I]      7161  0x555555561c05    sub rsp, 0x68                            48 83 ec 68
[I]      7162  0x555555561c09    mov qword ptr [rbp-0x2080], rdi          48 89 bd 80 df ff ff
[I]      7163  0x555555561c10    mov rbx, rdi                             48 89 fb
[I]      7164  0x555555561c13    mov r12, rcx                             49 89 cc
[I]      7165  0x555555561c16    mov r14d, r8d                            45 89 c6
[I]      7166  0x555555561c19    mov qword ptr [rbp-0x2058], r9           4c 89 8d a8 df ff ff
[I]      7167  0x555555561c20    lea rax, ptr [rbp-0x2040]                48 8d 85 c0 df ff ff
[I]      7168  0x555555561c27    mov ecx, edx                             89 d1
[I]      7169  0x555555561c29    xor r8d, r8d                             45 31 c0
[I]      7170  0x555555561c2c    mov rdx, rsi                             48 89 f2
[I]      7171  0x555555561c2f    lea rdi, ptr [rbp-0x2048]                48 8d bd b8 df ff ff
[I]      7172  0x555555561c36    mov rsi, rbx                             48 89 de
[I]      7173  0x555555561c39    lea r9, ptr [rbp-0x2049]                 4c 8d 8d b7 df ff ff
[I]      7174  0x555555561c40    mov r13, qword ptr fs:[0x28]             64 4c 8b 2c 25 28 00 00 00
[I]      7175  0x555555561c49    mov qword ptr [rbp-0x38], r13            4c 89 6d c8
[I]      7176  0x555555561c4d    mov r13, qword ptr [rbp+0x10]            4c 8b 6d 10
[I]      7177  0x555555561c51    mov qword ptr [rbp-0x2088], rax          48 89 85 78 df ff ff
[I]      7178  0x555555561c58    mov qword ptr [rbp-0x2048], rax          48 89 85 b8 df ff ff
[C]      7179 Calling function 0x555555568e70(error_at_line)
[I]      7179  0x555555561c5f    call 0x555555568e70                      e8 0c 72 00 00
[B]      7180  0x555555568e70 loc_555555568e70: // size=99 thread=0x100000000
[I]      7180  0x555555568e70    nop edx, edi                             f3 0f 1e fa
[I]      7181  0x555555568e74    push rbp                                 55
[I]      7182  0x555555568e75    mov rbp, rsp                             48 89 e5
[I]      7183  0x555555568e78    push r15                                 41 57
[I]      7184  0x555555568e7a    mov r15, rdx                             49 89 d7
[I]      7185  0x555555568e7d    push r14                                 41 56
[I]      7186  0x555555568e7f    mov r14, rsi                             49 89 f6
[I]      7187  0x555555568e82    push r13                                 41 55
[I]      7188  0x555555568e84    push r12                                 41 54
[I]      7189  0x555555568e86    push rbx                                 53
[I]      7190  0x555555568e87    sub rsp, 0x68                            48 83 ec 68
[I]      7191  0x555555568e8b    test rdx, rdx                            48 85 d2
[I]      7192  0x555555568e8e    mov qword ptr [rbp-0x80], rdi            48 89 7d 80
[I]      7193  0x555555568e92    lea rdx, ptr [rip+0xe447]                48 8d 15 47 e4 00 00
[I]      7194  0x555555568e99    cmovz r15, rdx                           4c 0f 44 fa
[I]      7195  0x555555568e9d    mov qword ptr [rbp-0x60], r8             4c 89 45 a0
[I]      7196  0x555555568ea1    mov qword ptr [rbp-0x88], r9             4c 89 8d 78 ff ff ff
[I]      7197  0x555555568ea8    mov ebx, dword ptr [r15]                 41 8b 1f
[I]      7198  0x555555568eab    mov r12, qword ptr fs:[0x28]             64 4c 8b 24 25 28 00 00 00
[I]      7199  0x555555568eb4    mov qword ptr [rbp-0x38], r12            4c 89 65 c8
[I]      7200  0x555555568eb8    mov r12, qword ptr [rdi]                 4c 8b 27
[I]      7201  0x555555568ebb    cmp ebx, 0x2                             83 fb 02
[I]      7202  0x555555568ebe    setbe r13b                               41 0f 96 c5
[I]      7203  0x555555568ec2    and r13b, byte ptr [rip+0xe3f5]          44 22 2d f5 e3 00 00
[I]      7204  0x555555568ec9    mov byte ptr [rbp-0x71], r13b            44 88 6d 8f
[I]      7205  0x555555568ecd    jnz 0x555555569000                       0f 85 2d 01 00 00
[B]      7206  0x555555568ed3 loc_555555568ed3: // size=8 thread=0x100000000
[I]      7206  0x555555568ed3    test ecx, ecx                            85 c9
[I]      7207  0x555555568ed5    jnz 0x555555569168                       0f 85 8d 02 00 00
[B]      7208  0x555555568edb loc_555555568edb: // size=12 thread=0x100000000
[I]      7208  0x555555568edb    mov rdi, rsi                             48 89 f7
[I]      7209  0x555555568ede    mov r12, r14                             4d 89 f4
[C]      7210 Calling function 0x7fffc2f80d80(_dl_mcount_wrapper)
[!] Function 0x7fffc2f80d80 is filtered, no tracing
[I]      7210  0x555555568ee1    call qword ptr [rip+0xde71]              ff 15 71 de 00 00
[B]      7211  0x555555568ee7 loc_555555568ee7: // size=14 thread=0x100000000
[I]      7211  0x555555568ee7    cmp qword ptr [rbp-0x60], 0x0            48 83 7d a0 00
[I]      7212  0x555555568eec    mov rbx, rax                             48 89 c3
[I]      7213  0x555555568eef    jz 0x555555568f98                        0f 84 a3 00 00 00
[B]      7214  0x555555568f98 loc_555555568f98: // size=13 thread=0x100000000
[I]      7214  0x555555568f98    cmp byte ptr [rip+0xe31e], 0x0           80 3d 1e e3 00 00 00
[I]      7215  0x555555568f9f    jz 0x555555569248                        0f 84 a3 02 00 00
[B]      7216  0x555555568fa5 loc_555555568fa5: // size=13 thread=0x100000000
[I]      7216  0x555555568fa5    cmp byte ptr [rip+0xe310], 0x0           80 3d 10 e3 00 00 00
[I]      7217  0x555555568fac    jz 0x555555569248                        0f 84 96 02 00 00
[B]      7218  0x555555569248 loc_555555569248: // size=15 thread=0x100000000
[I]      7218  0x555555569248    mov rax, qword ptr [rbp-0x88]            48 8b 85 78 ff ff ff
[I]      7219  0x55555556924f    mov byte ptr [rax], 0x0                  c6 00 00
[I]      7220  0x555555569252    jmp 0x555555568fd0                       e9 79 fd ff ff
[B]      7221  0x555555568fd0 loc_555555568fd0: // size=26 thread=0x100000000
[I]      7221  0x555555568fd0    mov rax, qword ptr [rbp-0x80]            48 8b 45 80
[I]      7222  0x555555568fd4    mov qword ptr [rax], r12                 4c 89 20
[I]      7223  0x555555568fd7    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      7224  0x555555568fdb    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      7225  0x555555568fe4    jnz 0x555555569443                       0f 85 59 04 00 00
[B]      7226  0x555555568fea loc_555555568fea: // size=18 thread=0x100000000
[I]      7226  0x555555568fea    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      7227  0x555555568fee    mov rax, rbx                             48 89 d8
[I]      7228  0x555555568ff1    pop rbx                                  5b
[I]      7229  0x555555568ff2    pop r12                                  41 5c
[I]      7230  0x555555568ff4    pop r13                                  41 5d
[I]      7231  0x555555568ff6    pop r14                                  41 5e
[I]      7232  0x555555568ff8    pop r15                                  41 5f
[I]      7233  0x555555568ffa    pop rbp                                  5d
[I]      7234  0x555555568ffb    ret                                      c3
[B]      7235  0x555555561c64 loc_555555561c64: // size=20 thread=0x100000000
[I]      7235  0x555555561c64    mov rbx, rax                             48 89 c3
[I]      7236  0x555555561c67    movzx eax, byte ptr [rbp-0x2049]         0f b6 85 b7 df ff ff
[I]      7237  0x555555561c6e    mov byte ptr [rbp-0x2059], al            88 85 a7 df ff ff
[I]      7238  0x555555561c74    test al, al                              84 c0
[I]      7239  0x555555561c76    jz 0x555555561c81                        74 09
[B]      7240  0x555555561c81 loc_555555561c81: // size=12 thread=0x100000000
[I]      7240  0x555555561c81    mov r14, qword ptr [rip+0x15020]         4c 8b 35 20 50 01 00
[I]      7241  0x555555561c88    test r12, r12                            4d 85 e4
[I]      7242  0x555555561c8b    jz 0x555555561ce1                        74 54
[B]      7243  0x555555561ce1 loc_555555561ce1: // size=16 thread=0x100000000
[I]      7243  0x555555561ce1    mov r12, qword ptr [rbp-0x2048]          4c 8b a5 b8 df ff ff
[I]      7244  0x555555561ce8    test r13, r13                            4d 85 ed
[I]      7245  0x555555561ceb    jz 0x555555561ed0                        0f 84 df 01 00 00
[B]      7246  0x555555561ed0 loc_555555561ed0: // size=22 thread=0x100000000
[I]      7246  0x555555561ed0    mov qword ptr [rbp-0x2078], rbx          48 89 9d 88 df ff ff
[I]      7247  0x555555561ed7    xor r15d, r15d                           45 31 ff
[I]      7248  0x555555561eda    mov qword ptr [rbp-0x2070], r12          4c 89 a5 90 df ff ff
[I]      7249  0x555555561ee1    jmp 0x555555561d86                       e9 a0 fe ff ff
[B]      7250  0x555555561d86 loc_555555561d86: // size=16 thread=0x100000000
[I]      7250  0x555555561d86    mov rax, qword ptr [rbp-0x2058]          48 8b 85 a8 df ff ff
[I]      7251  0x555555561d8d    test rax, rax                            48 85 c0
[I]      7252  0x555555561d90    jz 0x555555561ea8                        0f 84 12 01 00 00
[B]      7253  0x555555561ea8 loc_555555561ea8: // size=28 thread=0x100000000
[I]      7253  0x555555561ea8    mov rcx, qword ptr [r14]                 49 8b 0e
[I]      7254  0x555555561eab    mov rdx, qword ptr [rbp-0x2078]          48 8b 95 88 df ff ff
[I]      7255  0x555555561eb2    mov esi, 0x1                             be 01 00 00 00
[I]      7256  0x555555561eb7    mov rdi, qword ptr [rbp-0x2070]          48 8b bd 90 df ff ff
[C]      7257 Calling function 0x7fffc2e8c740(fwrite_unlocked)
[!] Function 0x7fffc2e8c740 is filtered, no tracing
[I]      7257  0x555555561ebe    call qword ptr [rip+0x1501c]             ff 15 1c 50 01 00
[B]      7258  0x555555561ec4 loc_555555561ec4: // size=12 thread=0x100000000
[I]      7258  0x555555561ec4    add qword ptr [rip+0x15465], rbx         48 01 1d 65 54 01 00
[I]      7259  0x555555561ecb    jmp 0x555555561ddf                       e9 0f ff ff ff
[B]      7260  0x555555561ddf loc_555555561ddf: // size=5 thread=0x100000000
[I]      7260  0x555555561ddf    test r13, r13                            4d 85 ed
[I]      7261  0x555555561de2    jz 0x555555561e24                        74 40
[B]      7262  0x555555561e24 loc_555555561e24: // size=9 thread=0x100000000
[I]      7262  0x555555561e24    cmp qword ptr [rbp-0x2080], r12          4c 39 a5 80 df ff ff
[I]      7263  0x555555561e2b    jz 0x555555561e42                        74 15
[B]      7264  0x555555561e42 loc_555555561e42: // size=29 thread=0x100000000
[I]      7264  0x555555561e42    movzx eax, byte ptr [rbp-0x2059]         0f b6 85 a7 df ff ff
[I]      7265  0x555555561e49    add rax, rbx                             48 01 d8
[I]      7266  0x555555561e4c    mov rdx, qword ptr [rbp-0x38]            48 8b 55 c8
[I]      7267  0x555555561e50    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      7268  0x555555561e59    jnz 0x555555561fbd                       0f 85 5e 01 00 00
[B]      7269  0x555555561e5f loc_555555561e5f: // size=18 thread=0x100000000
[I]      7269  0x555555561e5f    add rsp, 0x2068                          48 81 c4 68 20 00 00
[I]      7270  0x555555561e66    pop rbx                                  5b
[I]      7271  0x555555561e67    pop r12                                  41 5c
[I]      7272  0x555555561e69    pop r13                                  41 5d
[I]      7273  0x555555561e6b    pop r14                                  41 5e
[I]      7274  0x555555561e6d    pop r15                                  41 5f
[I]      7275  0x555555561e6f    pop rbp                                  5d
[I]      7276  0x555555561e70    ret                                      c3
[B]      7277  0x555555562031 loc_555555562031: // size=10 thread=0x100000000
[I]      7277  0x555555562031    pop rcx                                  59
[I]      7278  0x555555562032    pop rsi                                  5e
[I]      7279  0x555555562033    mov rbx, rax                             48 89 c3
[C]      7280 Calling function 0x55555555f4f0(error_at_line)
[I]      7280  0x555555562036    call 0x55555555f4f0                      e8 b5 d4 ff ff
[B]      7281  0x55555555f4f0 loc_55555555f4f0: // size=60 thread=0x100000000
[I]      7281  0x55555555f4f0    push rbp                                 55
[I]      7282  0x55555555f4f1    mov rbp, rsp                             48 89 e5
[I]      7283  0x55555555f4f4    push r15                                 41 57
[I]      7284  0x55555555f4f6    push r14                                 41 56
[I]      7285  0x55555555f4f8    push r13                                 41 55
[I]      7286  0x55555555f4fa    push r12                                 41 54
[I]      7287  0x55555555f4fc    lea r12, ptr [rip+0x182bd]               4c 8d 25 bd 82 01 00
[I]      7288  0x55555555f503    push rbx                                 53
[I]      7289  0x55555555f504    lea rbx, ptr [rbp-0xc0]                  48 8d 9d 40 ff ff ff
[I]      7290  0x55555555f50b    sub rsp, 0x98                            48 81 ec 98 00 00 00
[I]      7291  0x55555555f512    mov r14, qword ptr fs:[0x28]             64 4c 8b 34 25 28 00 00 00
[I]      7292  0x55555555f51b    mov qword ptr [rbp-0x38], r14            4c 89 75 c8
[I]      7293  0x55555555f51f    lea r14, ptr [rip+0x17b9a]               4c 8d 35 9a 7b 01 00
[I]      7294  0x55555555f526    lea r13, ptr [r14+0x10]                  4d 8d 6e 10
[I]      7295  0x55555555f52a    jmp 0x55555555f587                       eb 5b
[B]      7296  0x55555555f587 loc_55555555f587: // size=10 thread=0x100000000
[I]      7296  0x55555555f587    mov eax, dword ptr [rip+0x182bb]         8b 05 bb 82 01 00
[I]      7297  0x55555555f58d    test eax, eax                            85 c0
[I]      7298  0x55555555f58f    jnz 0x55555555f59b                       75 0a
[B]      7299  0x55555555f591 loc_55555555f591: // size=10 thread=0x100000000
[I]      7299  0x55555555f591    mov eax, dword ptr [rip+0x182ad]         8b 05 ad 82 01 00
[I]      7300  0x55555555f597    test eax, eax                            85 c0
[I]      7301  0x55555555f599    jz 0x55555555f5d0                        74 35
[B]      7302  0x55555555f5d0 loc_55555555f5d0: // size=15 thread=0x100000000
[I]      7302  0x55555555f5d0    mov rax, qword ptr [rbp-0x38]            48 8b 45 c8
[I]      7303  0x55555555f5d4    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      7304  0x55555555f5dd    jnz 0x55555555f5f1                       75 12
[B]      7305  0x55555555f5df loc_55555555f5df: // size=18 thread=0x100000000
[I]      7305  0x55555555f5df    add rsp, 0x98                            48 81 c4 98 00 00 00
[I]      7306  0x55555555f5e6    pop rbx                                  5b
[I]      7307  0x55555555f5e7    pop r12                                  41 5c
[I]      7308  0x55555555f5e9    pop r13                                  41 5d
[I]      7309  0x55555555f5eb    pop r14                                  41 5e
[I]      7310  0x55555555f5ed    pop r15                                  41 5f
[I]      7311  0x55555555f5ef    pop rbp                                  5d
[I]      7312  0x55555555f5f0    ret                                      c3
[B]      7313  0x55555556203b loc_55555556203b: // size=18 thread=0x100000000
[I]      7313  0x55555556203b    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      7314  0x55555556203f    mov rax, rbx                             48 89 d8
[I]      7315  0x555555562042    pop rbx                                  5b
[I]      7316  0x555555562043    pop r12                                  41 5c
[I]      7317  0x555555562045    pop r13                                  41 5d
[I]      7318  0x555555562047    pop r14                                  41 5e
[I]      7319  0x555555562049    pop r15                                  41 5f
[I]      7320  0x55555556204b    pop rbp                                  5d
[I]      7321  0x55555556204c    ret                                      c3
[B]      7322  0x55555556c744 loc_55555556c744: // size=10 thread=0x100000000
[I]      7322  0x55555556c744    mov eax, dword ptr [rip+0xabd2]          8b 05 d2 ab 00 00
[I]      7323  0x55555556c74a    test eax, eax                            85 c0
[I]      7324  0x55555556c74c    jnz 0x55555556c770                       75 22
[B]      7325  0x55555556c74e loc_55555556c74e: // size=19 thread=0x100000000
[I]      7325  0x55555556c74e    mov rax, qword ptr [rbp-0x18]            48 8b 45 e8
[I]      7326  0x55555556c752    sub rax, qword ptr fs:[0x28]             64 48 2b 04 25 28 00 00 00
[I]      7327  0x55555556c75b    jnz 0x55555556c8b6                       0f 85 55 01 00 00
[B]      7328  0x55555556c761 loc_55555556c761: // size=12 thread=0x100000000
[I]      7328  0x55555556c761    add rsp, 0x2a0                           48 81 c4 a0 02 00 00
[I]      7329  0x55555556c768    pop rbx                                  5b
[I]      7330  0x55555556c769    pop r12                                  41 5c
[I]      7331  0x55555556c76b    pop rbp                                  5d
[I]      7332  0x55555556c76c    ret                                      c3
[B]      7333  0x555555563ec5 loc_555555563ec5: // size=15 thread=0x100000000
[I]      7333  0x555555563ec5    mov rax, qword ptr [rip+0x1373c]         48 8b 05 3c 37 01 00
[I]      7334  0x555555563ecc    sub rax, r14                             4c 29 f0
[I]      7335  0x555555563ecf    cmp rbx, rax                             48 39 c3
[I]      7336  0x555555563ed2    jl 0x555555563e70                        7c 9c
[B]      7337  0x555555563ed4 loc_555555563ed4: // size=28 thread=0x100000000
[I]      7337  0x555555563ed4    mov rax, qword ptr [rbp-0x50]            48 8b 45 b0
[I]      7338  0x555555563ed8    movzx edx, byte ptr [rip+0x13199]        0f b6 15 99 31 01 00
[I]      7339  0x555555563edf    mov rdi, qword ptr [rax]                 48 8b 38
[I]      7340  0x555555563ee2    mov rax, qword ptr [rdi+0x28]            48 8b 47 28
[I]      7341  0x555555563ee6    cmp rax, qword ptr [rdi+0x30]            48 3b 47 30
[I]      7342  0x555555563eea    jnb 0x555555564050                       0f 83 60 01 00 00
[B]      7343  0x555555564050 loc_555555564050: // size=9 thread=0x100000000
[I]      7343  0x555555564050    movzx esi, dl                            0f b6 f2
[C]      7344 Calling function 0x7fffc2e8fe20(__overflow)
[!] Function 0x7fffc2e8fe20 is filtered, no tracing
[I]      7344  0x555555564053    call qword ptr [rip+0x12d2f]             ff 15 2f 2d 01 00
[B]      7345  0x555555564059 loc_555555564059: // size=5 thread=0x100000000
[I]      7345  0x555555564059    jmp 0x555555563efa                       e9 9c fe ff ff
[B]      7346  0x555555563efa loc_555555563efa: // size=18 thread=0x100000000
[I]      7346  0x555555563efa    add qword ptr [rbp-0x58], 0x1            48 83 45 a8 01
[I]      7347  0x555555563eff    mov rax, qword ptr [rbp-0x58]            48 8b 45 a8
[I]      7348  0x555555563f03    cmp r14, rax                             49 39 c6
[I]      7349  0x555555563f06    jnz 0x555555563e60                       0f 85 54 ff ff ff
[B]      7350  0x555555563f0c loc_555555563f0c: // size=15 thread=0x100000000
[I]      7350  0x555555563f0c    add rsp, 0x38                            48 83 c4 38
[I]      7351  0x555555563f10    pop rbx                                  5b
[I]      7352  0x555555563f11    pop r12                                  41 5c
[I]      7353  0x555555563f13    pop r13                                  41 5d
[I]      7354  0x555555563f15    pop r14                                  41 5e
[I]      7355  0x555555563f17    pop r15                                  41 5f
[I]      7356  0x555555563f19    pop rbp                                  5d
[I]      7357  0x555555563f1a    ret                                      c3
[B]      7358  0x555555558288 loc_555555558288: // size=9 thread=0x100000000
[I]      7358  0x555555558288    mov rdi, qword ptr [rbx]                 48 8b 3b
[C]      7359 Calling function 0x7fffc2ea7f30(cfree)
[!] Function 0x7fffc2ea7f30 is filtered, no tracing
[I]      7359  0x55555555828b    call qword ptr [rip+0x1e9d7]             ff 15 d7 e9 01 00
[B]      7360  0x555555558291 loc_555555558291: // size=10 thread=0x100000000
[I]      7360  0x555555558291    mov rdi, qword ptr [rbx+0x8]             48 8b 7b 08
[C]      7361 Calling function 0x7fffc2ea7f30(cfree)
[!] Function 0x7fffc2ea7f30 is filtered, no tracing
[I]      7361  0x555555558295    call qword ptr [rip+0x1e9cd]             ff 15 cd e9 01 00
[B]      7362  0x55555555829b loc_55555555829b: // size=9 thread=0x100000000
[I]      7362  0x55555555829b    mov rdi, rbx                             48 89 df
[C]      7363 Calling function 0x7fffc2ea7f30(cfree)
[!] Function 0x7fffc2ea7f30 is filtered, no tracing
[I]      7363  0x55555555829e    call qword ptr [rip+0x1e9c4]             ff 15 c4 e9 01 00
[B]      7364  0x5555555582a4 loc_5555555582a4: // size=19 thread=0x100000000
[I]      7364  0x5555555582a4    mov byte ptr [rip+0x1f50d], 0x1          c6 05 0d f5 01 00 01
[I]      7365  0x5555555582ab    mov rbx, qword ptr [rip+0x1f4fe]         48 8b 1d fe f4 01 00
[I]      7366  0x5555555582b2    test rbx, rbx                            48 85 db
[I]      7367  0x5555555582b5    jnz 0x555555558258                       75 a1
[B]      7368  0x5555555582b7 loc_5555555582b7: // size=9 thread=0x100000000
[I]      7368  0x5555555582b7    cmp byte ptr [rip+0x1f062], 0x0          80 3d 62 f0 01 00 00
[I]      7369  0x5555555582be    jz 0x55555555833e                        74 7e
[B]      7370  0x55555555833e loc_55555555833e: // size=13 thread=0x100000000
[I]      7370  0x55555555833e    cmp byte ptr [rip+0x1f3b3], 0x0          80 3d b3 f3 01 00 00
[I]      7371  0x555555558345    jnz 0x555555558723                       0f 85 d8 03 00 00
[B]      7372  0x55555555834b loc_55555555834b: // size=12 thread=0x100000000
[I]      7372  0x55555555834b    mov rdi, qword ptr [rip+0x1f426]         48 8b 3d 26 f4 01 00
[I]      7373  0x555555558352    test rdi, rdi                            48 85 ff
[I]      7374  0x555555558355    jz 0x555555558367                        74 10
[B]      7375  0x555555558367 loc_555555558367: // size=25 thread=0x100000000
[I]      7375  0x555555558367    mov eax, dword ptr [rip+0x1f44f]         8b 05 4f f4 01 00
[I]      7376  0x55555555836d    mov rdx, qword ptr [rbp-0x38]            48 8b 55 c8
[I]      7377  0x555555558371    sub rdx, qword ptr fs:[0x28]             64 48 2b 14 25 28 00 00 00
[I]      7378  0x55555555837a    jnz 0x55555555955e                       0f 85 de 11 00 00
[B]      7379  0x555555558380 loc_555555558380: // size=15 thread=0x100000000
[I]      7379  0x555555558380    lea rsp, ptr [rbp-0x28]                  48 8d 65 d8
[I]      7380  0x555555558384    pop rbx                                  5b
[I]      7381  0x555555558385    pop r12                                  41 5c
[I]      7382  0x555555558387    pop r13                                  41 5d
[I]      7383  0x555555558389    pop r14                                  41 5e
[I]      7384  0x55555555838b    pop r15                                  41 5f
[I]      7385  0x55555555838d    pop rbp                                  5d
[I]      7386  0x55555555838e    ret                                      c3
[B]      7387  0x55555555efe0 loc_55555555efe0: // size=27 thread=0x100000000
[I]      7387  0x55555555efe0    nop edx, edi                             f3 0f 1e fa
[I]      7388  0x55555555efe4    push rbp                                 55
[I]      7389  0x55555555efe5    mov rbp, rsp                             48 89 e5
[I]      7390  0x55555555efe8    sub rsp, 0x10                            48 83 ec 10
[I]      7391  0x55555555efec    mov rax, qword ptr [rip+0x17cb5]         48 8b 05 b5 7c 01 00
[I]      7392  0x55555555eff3    mov rdi, qword ptr [rax]                 48 8b 38
[C]      7393 Calling function 0x55555555e850(error_at_line)
[I]      7393  0x55555555eff6    call 0x55555555e850                      e8 55 f8 ff ff
[B]      7394  0x55555555e850 loc_55555555e850: // size=22 thread=0x100000000
[I]      7394  0x55555555e850    push rbp                                 55
[I]      7395  0x55555555e851    mov rbp, rsp                             48 89 e5
[I]      7396  0x55555555e854    push r13                                 41 55
[I]      7397  0x55555555e856    push r12                                 41 54
[I]      7398  0x55555555e858    push rbx                                 53
[I]      7399  0x55555555e859    mov rbx, rdi                             48 89 fb
[I]      7400  0x55555555e85c    sub rsp, 0x8                             48 83 ec 08
[C]      7401 Calling function 0x7fffc2e8b8b0(__fpending)
[!] Function 0x7fffc2e8b8b0 is filtered, no tracing
[I]      7401  0x55555555e860    call qword ptr [rip+0x1845a]             ff 15 5a 84 01 00
[B]      7402  0x55555555e866 loc_55555555e866: // size=18 thread=0x100000000
[I]      7402  0x55555555e866    mov r12d, dword ptr [rbx]                44 8b 23
[I]      7403  0x55555555e869    mov rdi, rbx                             48 89 df
[I]      7404  0x55555555e86c    mov r13, rax                             49 89 c5
[I]      7405  0x55555555e86f    and r12d, 0x20                           41 83 e4 20
[C]      7406 Calling function 0x55555555e720(error_at_line)
[I]      7406  0x55555555e873    call 0x55555555e720                      e8 a8 fe ff ff
[B]      7407  0x55555555e720 loc_55555555e720: // size=22 thread=0x100000000
[I]      7407  0x55555555e720    push rbp                                 55
[I]      7408  0x55555555e721    mov rbp, rsp                             48 89 e5
[I]      7409  0x55555555e724    push r13                                 41 55
[I]      7410  0x55555555e726    push r12                                 41 54
[I]      7411  0x55555555e728    push rbx                                 53
[I]      7412  0x55555555e729    mov rbx, rdi                             48 89 fb
[I]      7413  0x55555555e72c    sub rsp, 0x8                             48 83 ec 08
[C]      7414 Calling function 0x7fffc2e89940(fileno_unlocked)
[!] Function 0x7fffc2e89940 is filtered, no tracing
[I]      7414  0x55555555e730    call qword ptr [rip+0x18752]             ff 15 52 87 01 00
[B]      7415  0x55555555e736 loc_55555555e736: // size=7 thread=0x100000000
[I]      7415  0x55555555e736    mov rdi, rbx                             48 89 df
[I]      7416  0x55555555e739    test eax, eax                            85 c0
[I]      7417  0x55555555e73b    js 0x55555555e7b1                        78 74
[C]      7418 Calling function 0x7fffc2e8b7b0(__freading)
[!] Function 0x7fffc2e8b7b0 is filtered, no tracing
[B]      7418  0x55555555e73d loc_55555555e73d: // size=6 thread=0x100000000
[I]      7418  0x55555555e73d    call qword ptr [rip+0x18795]             ff 15 95 87 01 00
[B]      7419  0x55555555e743 loc_55555555e743: // size=4 thread=0x100000000
[I]      7419  0x55555555e743    test eax, eax                            85 c0
[I]      7420  0x55555555e745    jnz 0x55555555e790                       75 49
[B]      7421  0x55555555e747 loc_55555555e747: // size=9 thread=0x100000000
[I]      7421  0x55555555e747    mov rdi, rbx                             48 89 df
[C]      7422 Calling function 0x7fffc2e8b7b0(__freading)
[!] Function 0x7fffc2e8b7b0 is filtered, no tracing
[I]      7422  0x55555555e74a    call qword ptr [rip+0x18788]             ff 15 88 87 01 00
[B]      7423  0x55555555e750 loc_55555555e750: // size=4 thread=0x100000000
[I]      7423  0x55555555e750    test eax, eax                            85 c0
[I]      7424  0x55555555e752    jnz 0x55555555e7c8                       75 74
[B]      7425  0x55555555e754 loc_55555555e754: // size=9 thread=0x100000000
[I]      7425  0x55555555e754    mov rdi, rbx                             48 89 df
[C]      7426 Calling function 0x7fffc2e80590(_IO_fflush)
[!] Function 0x7fffc2e80590 is filtered, no tracing
[I]      7426  0x55555555e757    call qword ptr [rip+0x1875b]             ff 15 5b 87 01 00
[B]      7427  0x55555555e75d loc_55555555e75d: // size=4 thread=0x100000000
[I]      7427  0x55555555e75d    test eax, eax                            85 c0
[I]      7428  0x55555555e75f    jz 0x55555555e7ae                        74 4d
[B]      7429  0x55555555e7ae loc_55555555e7ae: // size=19 thread=0x100000000
[I]      7429  0x55555555e7ae    mov rdi, rbx                             48 89 df
[I]      7430  0x55555555e7b1    add rsp, 0x8                             48 83 c4 08
[I]      7431  0x55555555e7b5    pop rbx                                  5b
[I]      7432  0x55555555e7b6    pop r12                                  41 5c
[I]      7433  0x55555555e7b8    pop r13                                  41 5d
[I]      7434  0x55555555e7ba    pop rbp                                  5d
[I]      7435  0x55555555e7bb    jmp qword ptr [rip+0x1854f]              ff 25 4f 85 01 00
[B]      7436  0x55555555e878 loc_55555555e878: // size=5 thread=0x100000000
[I]      7436  0x55555555e878    test r12d, r12d                          45 85 e4
[I]      7437  0x55555555e87b    jnz 0x55555555e8a8                       75 2b
[B]      7438  0x55555555e87d loc_55555555e87d: // size=4 thread=0x100000000
[I]      7438  0x55555555e87d    test eax, eax                            85 c0
[I]      7439  0x55555555e87f    jz 0x55555555e897                        74 16
[B]      7440  0x55555555e897 loc_55555555e897: // size=11 thread=0x100000000
[I]      7440  0x55555555e897    add rsp, 0x8                             48 83 c4 08
[I]      7441  0x55555555e89b    pop rbx                                  5b
[I]      7442  0x55555555e89c    pop r12                                  41 5c
[I]      7443  0x55555555e89e    pop r13                                  41 5d
[I]      7444  0x55555555e8a0    pop rbp                                  5d
[I]      7445  0x55555555e8a1    ret                                      c3
[B]      7446  0x55555555effb loc_55555555effb: // size=8 thread=0x100000000
[I]      7446  0x55555555effb    test eax, eax                            85 c0
[I]      7447  0x55555555effd    jnz 0x555555557293                       0f 85 90 82 ff ff
[B]      7448  0x55555555f003 loc_55555555f003: // size=15 thread=0x100000000
[I]      7448  0x55555555f003    mov rax, qword ptr [rip+0x17fce]         48 8b 05 ce 7f 01 00
[I]      7449  0x55555555f00a    mov rdi, qword ptr [rax]                 48 8b 38
[C]      7450 Calling function 0x55555555e850(error_at_line)
[I]      7450  0x55555555f00d    call 0x55555555e850                      e8 3e f8 ff ff
[B]      7451  0x55555555e850 loc_55555555e850: // size=22 thread=0x100000000
[I]      7451  0x55555555e850    push rbp                                 55
[I]      7452  0x55555555e851    mov rbp, rsp                             48 89 e5
[I]      7453  0x55555555e854    push r13                                 41 55
[I]      7454  0x55555555e856    push r12                                 41 54
[I]      7455  0x55555555e858    push rbx                                 53
[I]      7456  0x55555555e859    mov rbx, rdi                             48 89 fb
[I]      7457  0x55555555e85c    sub rsp, 0x8                             48 83 ec 08
[C]      7458 Calling function 0x7fffc2e8b8b0(__fpending)
[!] Function 0x7fffc2e8b8b0 is filtered, no tracing
[I]      7458  0x55555555e860    call qword ptr [rip+0x1845a]             ff 15 5a 84 01 00
[B]      7459  0x55555555e866 loc_55555555e866: // size=18 thread=0x100000000
[I]      7459  0x55555555e866    mov r12d, dword ptr [rbx]                44 8b 23
[I]      7460  0x55555555e869    mov rdi, rbx                             48 89 df
[I]      7461  0x55555555e86c    mov r13, rax                             49 89 c5
[I]      7462  0x55555555e86f    and r12d, 0x20                           41 83 e4 20
[C]      7463 Calling function 0x55555555e720(error_at_line)
[I]      7463  0x55555555e873    call 0x55555555e720                      e8 a8 fe ff ff
[B]      7464  0x55555555e720 loc_55555555e720: // size=22 thread=0x100000000
[I]      7464  0x55555555e720    push rbp                                 55
[I]      7465  0x55555555e721    mov rbp, rsp                             48 89 e5
[I]      7466  0x55555555e724    push r13                                 41 55
[I]      7467  0x55555555e726    push r12                                 41 54
[I]      7468  0x55555555e728    push rbx                                 53
[I]      7469  0x55555555e729    mov rbx, rdi                             48 89 fb
[I]      7470  0x55555555e72c    sub rsp, 0x8                             48 83 ec 08
[C]      7471 Calling function 0x7fffc2e89940(fileno_unlocked)
[!] Function 0x7fffc2e89940 is filtered, no tracing
[I]      7471  0x55555555e730    call qword ptr [rip+0x18752]             ff 15 52 87 01 00
[B]      7472  0x55555555e736 loc_55555555e736: // size=7 thread=0x100000000
[I]      7472  0x55555555e736    mov rdi, rbx                             48 89 df
[I]      7473  0x55555555e739    test eax, eax                            85 c0
[I]      7474  0x55555555e73b    js 0x55555555e7b1                        78 74
[C]      7475 Calling function 0x7fffc2e8b7b0(__freading)
[!] Function 0x7fffc2e8b7b0 is filtered, no tracing
[B]      7475  0x55555555e73d loc_55555555e73d: // size=6 thread=0x100000000
[I]      7475  0x55555555e73d    call qword ptr [rip+0x18795]             ff 15 95 87 01 00
[B]      7476  0x55555555e743 loc_55555555e743: // size=4 thread=0x100000000
[I]      7476  0x55555555e743    test eax, eax                            85 c0
[I]      7477  0x55555555e745    jnz 0x55555555e790                       75 49
[B]      7478  0x55555555e747 loc_55555555e747: // size=9 thread=0x100000000
[I]      7478  0x55555555e747    mov rdi, rbx                             48 89 df
[C]      7479 Calling function 0x7fffc2e8b7b0(__freading)
[!] Function 0x7fffc2e8b7b0 is filtered, no tracing
[I]      7479  0x55555555e74a    call qword ptr [rip+0x18788]             ff 15 88 87 01 00
[B]      7480  0x55555555e750 loc_55555555e750: // size=4 thread=0x100000000
[I]      7480  0x55555555e750    test eax, eax                            85 c0
[I]      7481  0x55555555e752    jnz 0x55555555e7c8                       75 74
[B]      7482  0x55555555e754 loc_55555555e754: // size=9 thread=0x100000000
[I]      7482  0x55555555e754    mov rdi, rbx                             48 89 df
[C]      7483 Calling function 0x7fffc2e80590(_IO_fflush)
[!] Function 0x7fffc2e80590 is filtered, no tracing
[I]      7483  0x55555555e757    call qword ptr [rip+0x1875b]             ff 15 5b 87 01 00
[B]      7484  0x55555555e75d loc_55555555e75d: // size=4 thread=0x100000000
[I]      7484  0x55555555e75d    test eax, eax                            85 c0
[I]      7485  0x55555555e75f    jz 0x55555555e7ae                        74 4d
[B]      7486  0x55555555e7ae loc_55555555e7ae: // size=19 thread=0x100000000
[I]      7486  0x55555555e7ae    mov rdi, rbx                             48 89 df
[I]      7487  0x55555555e7b1    add rsp, 0x8                             48 83 c4 08
[I]      7488  0x55555555e7b5    pop rbx                                  5b
[I]      7489  0x55555555e7b6    pop r12                                  41 5c
[I]      7490  0x55555555e7b8    pop r13                                  41 5d
[I]      7491  0x55555555e7ba    pop rbp                                  5d
[I]      7492  0x55555555e7bb    jmp qword ptr [rip+0x1854f]              ff 25 4f 85 01 00
[B]      7493  0x55555555e878 loc_55555555e878: // size=5 thread=0x100000000
[I]      7493  0x55555555e878    test r12d, r12d                          45 85 e4
[I]      7494  0x55555555e87b    jnz 0x55555555e8a8                       75 2b
[B]      7495  0x55555555e87d loc_55555555e87d: // size=4 thread=0x100000000
[I]      7495  0x55555555e87d    test eax, eax                            85 c0
[I]      7496  0x55555555e87f    jz 0x55555555e897                        74 16
[B]      7497  0x55555555e897 loc_55555555e897: // size=11 thread=0x100000000
[I]      7497  0x55555555e897    add rsp, 0x8                             48 83 c4 08
[I]      7498  0x55555555e89b    pop rbx                                  5b
[I]      7499  0x55555555e89c    pop r12                                  41 5c
[I]      7500  0x55555555e89e    pop r13                                  41 5d
[I]      7501  0x55555555e8a0    pop rbp                                  5d
[I]      7502  0x55555555e8a1    ret                                      c3
[B]      7503  0x55555555f012 loc_55555555f012: // size=4 thread=0x100000000
[I]      7503  0x55555555f012    test eax, eax                            85 c0
[I]      7504  0x55555555f014    jnz 0x55555555f018                       75 02
[B]      7505  0x55555555f016 loc_55555555f016: // size=2 thread=0x100000000
[I]      7505  0x55555555f016    leave                                    c9
[I]      7506  0x55555555f017    ret                                      c3
[B]      7507  0x555555559690 loc_555555559690: // size=13 thread=0x100000000
[I]      7507  0x555555559690    nop edx, edi                             f3 0f 1e fa
[I]      7508  0x555555559694    cmp byte ptr [rip+0x1dbe5], 0x0          80 3d e5 db 01 00 00
[I]      7509  0x55555555969b    jnz 0x5555555596d0                       75 33
[B]      7510  0x55555555969d loc_55555555969d: // size=14 thread=0x100000000
[I]      7510  0x55555555969d    push rbp                                 55
[I]      7511  0x55555555969e    cmp qword ptr [rip+0x1d912], 0x0         48 83 3d 12 d9 01 00 00
[I]      7512  0x5555555596a6    mov rbp, rsp                             48 89 e5
[I]      7513  0x5555555596a9    jz 0x5555555596b8                        74 0d
[B]      7514  0x5555555596ab loc_5555555596ab: // size=13 thread=0x100000000
[I]      7514  0x5555555596ab    mov rdi, qword ptr [rip+0x1d956]         48 8b 3d 56 d9 01 00
[C]      7515 Calling function 0x7fffc2e40500(__cxa_finalize)
[!] Function 0x7fffc2e40500 is filtered, no tracing
[I]      7515  0x5555555596b2    call qword ptr [rip+0x1d900]             ff 15 00 d9 01 00
[C]      7516 Calling function 0x555555559620(error_at_line)
[B]      7516  0x5555555596b8 loc_5555555596b8: // size=5 thread=0x100000000
[I]      7516  0x5555555596b8    call 0x555555559620                      e8 63 ff ff ff
[B]      7517  0x555555559620 loc_555555559620: // size=19 thread=0x100000000
[I]      7517  0x555555559620    lea rdi, ptr [rip+0x1dc51]               48 8d 3d 51 dc 01 00
[I]      7518  0x555555559627    lea rax, ptr [rip+0x1dc4a]               48 8d 05 4a dc 01 00
[I]      7519  0x55555555962e    cmp rax, rdi                             48 39 f8
[I]      7520  0x555555559631    jz 0x555555559648                        74 15
[B]      7521  0x555555559648 loc_555555559648: // size=1 thread=0x100000000
[I]      7521  0x555555559648    ret                                      c3
[B]      7522  0x5555555596bd loc_5555555596bd: // size=9 thread=0x100000000
[I]      7522  0x5555555596bd    mov byte ptr [rip+0x1dbbc], 0x1          c6 05 bc db 01 00 01
[I]      7523  0x5555555596c4    pop rbp                                  5d
[I]      7524  0x5555555596c5    ret                                      c3
[B]      7525  0x55555556c8d4 loc_55555556c8d4: // size=13 thread=0x100000000
[I]      7525  0x55555556c8d4    nop edx, edi                             f3 0f 1e fa
[I]      7526  0x55555556c8d8    sub rsp, 0x8                             48 83 ec 08
[I]      7527  0x55555556c8dc    add rsp, 0x8                             48 83 c4 08
[I]      7528  0x55555556c8e0    ret                                      c3
[R]0x00007fffffffe210 0x0000000000000001
[W]0x00007fffffffe208 0x000000000000003c
[W]0x00007fffffffe200 0x00007fffffffe208
[R]0x0000555555576c78 0x00007fffc2e276a0
[W]0x00007fffffffe1f8 0x0000555555559615
[R]0x0000555555576e58 0x0000000000000000
[R]0x00007fffffffe198 0x00007fffc2e27752
[R]0x00007fffffffe198 0x00007fffc2e277a4
[W]0x00007fffffffe0f0 0x00007fffffffe190
[W]0x00007fffffffe0e8 0x0000555555575fd8
[W]0x00007fffffffe0e0 0x00007ffff7ffd000
[W]0x00007fffffffe0d8 0x0000000000000001
[W]0x00007fffffffe0d0 0x00007fffffffe218
[W]0x00007fffffffe0c8 0x0000000000000000
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffe0b8 0xe7ee3601ad702d00
[R]0x00007fffffffe218 0x00007fffffffe567
[R]0x0000555555576d90 0x00007fffc2f82d00
[W]0x00007fffffffdfc8 0x0000555555557505
[R]0x0000555555576e78 0x00007fffc300a378
[W]0x00005555555774a0 0x00007fffffffe567
[W]0x00007fffc300a378 0x00007fffffffe567
[R]0x0000555555576fa8 0x00007fffc300a370
[W]0x00007fffc300a370 0x00007fffffffe567
[R]0x0000555555576ef8 0x00007fffc2e353f0
[W]0x00007fffffffdfc8 0x00005555555575a2
[R]0x0000555555576d38 0x00007fffc2e36c30
[W]0x00007fffffffdfc8 0x00005555555575b2
[R]0x0000555555576d08 0x00007fffc2e3a6b0
[W]0x00007fffffffdfc8 0x00005555555575c2
[W]0x0000555555577088 0x00000002
[W]0x00007fffffffdfc8 0x00005555555575d9
[R]0x0000555555577008 0x0000555555577008
[R]0x0000555555576f50 0x00007fffc2e404f0
[R]0x0000555555571c60  00 00 00 00 00 00 00 80 ff ff ff ff ff ff ff ff
[W]0x00005555555777bc 0x00000000
[W]0x00005555555777b8 0x01
[W]0x00005555555777b0 0x0000000000000000
[W]0x00007fffffffdff0 0xffffffffffffffff
[W]0x00007fffffffdfe8 0xffffffffffffffff
[W]0x00007fffffffe000 0xffffffff
[W]0x00007fffffffe010 0xffffffff
[W]0x00007fffffffe018 0xffffffff
[W]0x00007fffffffe01c 0xffffffff
[W]0x00007fffffffdfe7 0x00
[W]0x00007fffffffdff8 0x0000000000000000
[W]0x00005555555777a0  00 00 00 00 00 00 00 80 ff ff ff ff ff ff ff ff
[W]0x00007fffffffe02c 0xffffffff
[R]0x0000555555576d68 0x00007fffc2eec320
[W]0x00007fffffffdfc8 0x0000555555557683
[R]0x00005555555772c0 0x0000000000000000
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdfc8 0x00005555555586ce
[W]0x00007fffffffdfc8 0x00005555555586d9
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x0000555555576400
[W]0x00007fffffffdfb0 0x0000000000000000
[W]0x00007fffffffdfa8 0x00007fffffffe218
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf98 0xe7ee3601ad702d00
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdf88 0x000055555555bfa5
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdf88 0x000055555555bfbe
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdf88 0x000055555555bfd7
[W]0x00005555555772c8 0x00000000
[W]0x00005555555772c0 0x0000000000000400
[R]0x00007fffffffdf98 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdfa8 0x00007fffffffe218
[R]0x00007fffffffdfb0 0x0000000000000000
[R]0x00007fffffffdfb8 0x0000555555576400
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x00007fffffffdfc8 0x00005555555586d9
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdfc8 0x0000555555559301
[R]0x00007fffffffdfe7 0x00
[R]0x00007fffffffe01c 0xffffffff
[W]0x00007fffffffdfc8 0x0000555555557e33
[R]0x0000555555577029 0xff
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x0000555555576cc8 0x00007fffc2f0ea70
[W]0x00007fffffffdfb8 0x000055555555ceaf
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x0000555555577029 0x01
[R]0x00007fffffffdfc8 0x0000555555557e33
[W]0x0000555555577324 0x00000002
[R]0x00007fffffffdff0 0xffffffffffffffff
[W]0x00007fffffffdfc8 0x0000555555558cc3
[R]0x0000555555577029 0x01
[R]0x00007fffffffdfc8 0x0000555555558cc3
[R]0x0000555555576dc0 0x00007fffc2f16710
[W]0x00007fffffffdfc8 0x0000555555558ce0
[R]0x00007fffffffe042 0x009e
[W]0x00007fffffffdff0 0x000000000000009e
[R]0x00007fffffffdff0 0x000000000000009e
[W]0x00005555555774b8 0x000000000000009e
[W]0x00005555555774b0 0x0000000000000035
[R]0x0000555555577324 0x00000002
[R]0x00007fffffffdfe8 0xffffffffffffffff
[W]0x0000555555577790 0x0000000000000008
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdfc8 0x00005555555584c4
[R]0x00007fffffffe018 0xffffffff
[W]0x00007fffffffdfc8 0x0000555555557ec4
[R]0x0000555555577029 0x01
[R]0x00007fffffffdfc8 0x0000555555557ec4
[R]0x00007fffffffe010 0xffffffff
[W]0x00005555555772be 0x01
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdfc8 0x00005555555585a3
[W]0x00007fffffffdfc8 0x00005555555585e6
[R]0x0000555555577029 0x01
[R]0x00007fffffffdfc8 0x00005555555585e6
[W]0x00007fffffffe010 0x00000003
[R]0x00007fffffffe010 0x00000003
[W]0x00005555555772e0 0x00000003
[R]0x0000555555577324 0x00000002
[R]0x00005555555772e0 0x00000003
[R]0x00005555555774b8 0x000000000000009e
[W]0x00005555555772bd 0x01
[W]0x00007fffffffdfc8 0x00005555555583c2
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x0000000000000003
[W]0x00007fffffffdfb0 0x00007fffffffe218
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffdfa8 0x000055555556699d
[R]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdfa8 0x00005555555669ae
[R]0x00005555555772e0  03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x0000555555577310 0x0000000000000000
[W]0x000055555557a480  03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x00005555555772f0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[W]0x000055555557a4b0 0x0000000000000000
[W]0x000055555557a490  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x0000555555577300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[W]0x00007fffc2ddb6e0 0x00000000
[W]0x000055555557a4a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x00007fffffffdfb0 0x00007fffffffe218
[R]0x00007fffffffdfb8 0x0000000000000003
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x00007fffffffdfc8 0x00005555555583c2
[W]0x0000555555577600 0x000055555557a480
[R]0x000055555557731c 0x00000000
[W]0x00007fffffffdfc8 0x0000555555557fb2
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x0000000000000003
[W]0x00007fffffffdfb0 0x00007fffffffe218
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffdfa8 0x000055555556699d
[R]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdfa8 0x00005555555669ae
[R]0x00005555555772e0  03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x0000555555577310 0x0000000000000000
[W]0x000055555557a4c0  03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x00005555555772f0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[W]0x000055555557a4f0 0x0000000000000000
[W]0x000055555557a4d0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x0000555555577300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[W]0x00007fffc2ddb6e0 0x00000000
[W]0x000055555557a4e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
[R]0x00007fffffffdfb0 0x00007fffffffe218
[R]0x00007fffffffdfb8 0x0000000000000003
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x00007fffffffdfc8 0x0000555555557fb2
[R]0x0000555555577324 0x00000002
[R]0x000055555557a4cc 0x00000000
[W]0x000055555557a4cc 0x04000000
[W]0x00005555555774a8 0x000055555557a4c0
[R]0x00005555555776fc 0x00
[R]0x0000555555577078 0x0a
[R]0x00005555555776f8 0x00
[W]0x00005555555776f8 0x00
[R]0x00007fffffffe000 0xffffffff
[R]0x00005555555774d0 0x00
[W]0x0000555555578460 0x00000000
[R]0x0000555555576d20 0x00007fffc3009248
[R]0x00007fffc3009248 0x00000001
[W]0x00007fffffffe01c 0x00000001
[R]0x0000555555577320 0x00
[W]0x00007fffffffe018 0x00
[R]0x000055555557778a 0x00
[R]0x0000555555577784 0x00000000
[R]0x0000555555577781 0x00
[R]0x000055555557731c 0x00000000
[R]0x0000555555577324 0x00000002
[W]0x0000555555577784 0x00000003
[R]0x0000555555576eb0 0x00007fffc2ea7970
[R]0x0000555555577780 0x00
[R]0x0000555555576c68 0x00007fffc2ea7f30
[W]0x00007fffffffe000  70 79 ea c2 ff 7f 00 00 30 7f ea c2 ff 7f 00 00
[R]0x0000555555576c40 0x00007fffc2e41b00
[W]0x00007fffffffdfc8 0x000055555555812d
[W]0x00007fffffffdfc8 0x0000555555558135
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x0000000000000001
[W]0x00007fffffffdfb0 0x0000555555576400
[W]0x00007fffffffdfa8 0x0000000000000003
[W]0x00007fffffffdfa0 0x00007fffffffe218
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdf98 0x000055555555bdbb
[W]0x000055555557a500 0x0000000000000000
[W]0x000055555557a508 0x0000
[R]0x00007fffffffdfa0 0x00007fffffffe218
[R]0x00007fffffffdfa8 0x0000000000000003
[R]0x00007fffffffdfb0 0x0000555555576400
[R]0x00007fffffffdfb8 0x0000000000000001
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x00007fffffffdfc8 0x0000555555558135
[R]0x0000555555577318 0x00
[R]0x0000555555577328 0x00
[R]0x00005555555776fc 0x00
[W]0x0000555555577700 0x000055555557a500
[R]0x0000555555577324 0x00000002
[R]0x0000555555578460 0x00000000
[R]0x0000555555577780 0x00
[R]0x0000555555577320 0x00
[W]0x00005555555776fb 0x00
[R]0x000055555557778a 0x00
[R]0x000055555557731c 0x00000000
[W]0x00005555555776fa 0x00
[R]0x00005555555776f8 0x00
[W]0x00005555555776f9 0x00
[R]0x00005555555776fc 0x00
[W]0x0000555555577618 0x0000000000000064
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdfc8 0x00005555555581e6
[W]0x0000555555577610 0x000055555557a590
[W]0x0000555555577608 0x0000000000000000
[W]0x00007fffffffdfc8 0x0000555555558207
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x0000000000000001
[W]0x00007fffffffdfb0 0x0000000000000003
[W]0x00007fffffffdfa8 0x00007fffffffe218
[R]0x0000555555577608 0x0000000000000000
[W]0x0000555555577608 0x0000000000000000
[W]0x00005555555772bc 0x00
[W]0x000055555557748c 0x00
[W]0x00005555555772b8 0x00000000
[W]0x00005555555772b4 0x00000000
[W]0x0000555555577488 0x00000000
[W]0x0000555555577484 0x00000000
[W]0x0000555555577480 0x00000000
[W]0x000055555557747c 0x00000000
[W]0x00005555555772b0 0x00000000
[W]0x0000555555577478 0x00000000
[W]0x0000555555577474 0x00000000
[W]0x0000555555577470 0x00000000
[R]0x00007fffffffdfa8 0x00007fffffffe218
[R]0x00007fffffffdfb0 0x0000000000000003
[R]0x00007fffffffdfb8 0x0000000000000001
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x00007fffffffdfc8 0x0000555555558207
[R]0x00007fffffffe01c 0x00000001
[R]0x0000555555577781 0x00
[W]0x00007fffffffdfc8 0x0000555555558c9d
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x0000000000000001
[W]0x00007fffffffdfb0 0x0000000000000000
[W]0x00007fffffffdfa8 0x0000000000000003
[W]0x00007fffffffdfa0 0x00007fffffffe218
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdf98 0x000055555556410f
[W]0x000055555557f6e8 0x0000000000000000
[W]0x00007fffffffdf98 0x0000555555564138
[W]0x00007fffffffdf90 0x00007fffffffdfc0
[W]0x00007fffffffdf88 0x000055555556f1ec
[W]0x00007fffffffdf80 0x000055555557f6e0
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffdf78 0x00005555555640b4
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdf78 0x00005555555640c1
[R]0x00007fffffffdf80 0x000055555557f6e0
[R]0x00007fffffffdf88 0x000055555556f1ec
[R]0x00007fffffffdf90 0x00007fffffffdfc0
[R]0x0000555555576e48 0x00007fffc2f7dcd0
[R]0x00005555555777b0 0x0000000000000000
[W]0x000055555557f6e0 0x000055555557f710
[W]0x000055555557f6f0 0x01
[W]0x000055555557f6f8 0x0000000000000000
[W]0x00005555555777b0 0x000055555557f6e0
[R]0x00007fffffffdfa0 0x00007fffffffe218
[R]0x00007fffffffdfa8 0x0000000000000003
[R]0x00007fffffffdfb0 0x0000000000000000
[R]0x00007fffffffdfb8 0x0000000000000001
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x00007fffffffdfc8 0x0000555555558c9d
[R]0x0000555555577608 0x0000000000000000
[R]0x00005555555777b0 0x000055555557f6e0
[R]0x000055555557f6f8 0x0000000000000000
[W]0x00005555555777b8 0x00
[R]0x000055555557f6f8 0x0000000000000000
[R]0x0000555555577778 0x0000000000000000
[R]0x000055555557f6e0 0x000055555557f710
[W]0x00005555555777b0 0x0000000000000000
[R]0x000055555557f6f0 0x01
[R]0x000055555557f6e8 0x0000000000000000
[W]0x00007fffffffdfc8 0x0000555555558288
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x00007fffffffe02c
[W]0x00007fffffffdfb0 0x0000000000000001
[W]0x00007fffffffdfa8 0x0000000000000000
[W]0x00007fffffffdfa0 0x0000000000000000
[W]0x00007fffffffdf98 0x000055555557f6e0
[W]0x00007fffffffdcd8 0x000055555557f710
[W]0x00007fffffffdcbc 0x00000001
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf88 0xe7ee3601ad702d00
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffdca8 0x000055555556627f
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576d28 0x00007fffc2ee4800
[W]0x00007fffffffdca8 0x0000555555566291
[R]0x0000555555577778 0x0000000000000000
[W]0x00007fffffffdca8 0x00005555555663e7
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x00007fffc2ddb6e0
[W]0x00007fffffffdc90 0x0000000000000000
[W]0x00007fffffffdc88 0x0000000000000000
[R]0x0000555555577608 0x0000000000000000
[W]0x0000555555577608 0x0000000000000000
[W]0x00005555555772bc 0x00
[W]0x000055555557748c 0x00
[W]0x00005555555772b8 0x00000000
[W]0x00005555555772b4 0x00000000
[W]0x0000555555577488 0x00000000
[W]0x0000555555577484 0x00000000
[W]0x0000555555577480 0x00000000
[W]0x000055555557747c 0x00000000
[W]0x00005555555772b0 0x00000000
[W]0x0000555555577478 0x00000000
[W]0x0000555555577474 0x00000000
[W]0x0000555555577470 0x00000000
[R]0x00007fffffffdc88 0x0000000000000000
[R]0x00007fffffffdc90 0x0000000000000000
[R]0x00007fffffffdc98 0x00007fffc2ddb6e0
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x00005555555663e7
[R]0x0000555555577780 0x00
[R]0x00005555555777b8 0x00
[W]0x00007fffffffdcd0 0x0000000000000000
[W]0x00007fffffffdcc0 0x00000001
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00005555555774d4 0x00000000
[R]0x000055555557f773 0x2e
[W]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000001
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f760
[W]0x00007fffffffdc78 0x000055555557f773
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f773
[R]0x00007fffffffdc80 0x000055555557f760
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000001
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00005555555774d4 0x00000000
[R]0x000055555557f793 0x2e
[W]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000001
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f780
[W]0x00007fffffffdc78 0x000055555557f793
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f793
[R]0x00007fffffffdc80 0x000055555557f780
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000001
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00005555555774d4 0x00000000
[R]0x000055555557f7ab 0x70
[R]0x00005555555774c0 0x0000000000000000
[R]0x0000555555577498 0x0000000000000000
[R]0x000055555557f7aa 0x04
[R]0x000055555556d744 0x03
[R]0x00007fffffffdcd8 0x000055555557f710
[W]0x00007fffffffdca8 0x000055555556670a
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f798
[W]0x00007fffffffdc78 0x000055555557f7ab
[W]0x00007fffffffd910 0x000055555557f7ab
[R]0x0000555555577610 0x000055555557a590
[W]0x00007fffffffd928 0x00000000
[R]0x0000555555577608 0x0000000000000000
[W]0x00007fffffffd92c 0x00000003
[R]0x0000555555577618 0x0000000000000064
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[W]0x000055555557a590 0x0000000000000000
[W]0x000055555557a658 0x0000000000000000
[W]0x000055555557a598 0x0000000000000000
[W]0x000055555557a5a0 0x0000000000000000
[W]0x000055555557a5a8 0x0000000000000000
[W]0x000055555557a5b0 0x0000000000000000
[W]0x000055555557a5b8 0x0000000000000000
[W]0x000055555557a5c0 0x0000000000000000
[W]0x000055555557a5c8 0x0000000000000000
[W]0x000055555557a5d0 0x0000000000000000
[W]0x000055555557a5d8 0x0000000000000000
[W]0x000055555557a5e0 0x0000000000000000
[W]0x000055555557a5e8 0x0000000000000000
[W]0x000055555557a5f0 0x0000000000000000
[W]0x000055555557a5f8 0x0000000000000000
[W]0x000055555557a600 0x0000000000000000
[W]0x000055555557a608 0x0000000000000000
[W]0x000055555557a610 0x0000000000000000
[W]0x000055555557a618 0x0000000000000000
[W]0x000055555557a620 0x0000000000000000
[W]0x000055555557a628 0x0000000000000000
[W]0x000055555557a630 0x0000000000000000
[W]0x000055555557a638 0x0000000000000000
[W]0x000055555557a640 0x0000000000000000
[W]0x000055555557a648 0x0000000000000000
[W]0x000055555557a650 0x0000000000000000
[W]0x000055555557a658 0x0000000000000000
[W]0x000055555557a654 0xffffffff
[R]0x00007fffffffd92c 0x00000003
[R]0x00005555555772bc 0x00
[W]0x000055555557a638 0x00000003
[W]0x000055555557a640 0x0000555555577020
[R]0x00005555555772bd 0x01
[R]0x00007fffffffd910 0x000055555557f7ab
[W]0x00007fffffffd8e8 0x0000555555564c84
[W]0x00007fffffffd8e0 0x00007fffffffdca0
[W]0x00007fffffffd8d8 0x000055555557f730
[W]0x00007fffffffd8d0 0x00007fffc2ddb6e0
[W]0x00007fffffffd8c8 0x000055555557f798
[W]0x00007fffffffd8c0 0x000055555557f710
[R]0x0000555555577600 0x000055555557a480
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffd8b8 0xe7ee3601ad702d00
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffd8a8 0x000055555555cefa
[R]0x00007fffc2ddb6e0 0x00000000
[R]0x000055555557a480 0x00000003
[R]0x000055555557a484 0x00000000
[R]0x000055555557a4b0 0x0000000000000000
[W]0x00007fffffffd8a8 0x0000000000000000
[R]0x000055555557a4a8 0x0000000000000000
[W]0x00007fffffffd8a0 0x0000000000000000
[W]0x00007fffffffd898 0x000055555555cf21
[W]0x00007fffffffd890 0x00007fffffffd8e0
[W]0x00007fffffffd888 0x000055555557a590
[W]0x00007fffffffd880 0x0000000000000000
[W]0x00007fffffffd878 0x00007fffc2ddb6e0
[W]0x00007fffffffd870 0x000055555557f7ab
[W]0x00007fffffffd868 0x000055555557a480
[W]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd8a0 0x0000000000000000
[W]0x00007fffffffd7f4 0x00000000
[W]0x00007fffffffd814 0x00000003
[W]0x00007fffffffd820 0x000055555557a488
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffd858 0xe7ee3601ad702d00
[R]0x00007fffffffd8a8 0x0000000000000000
[W]0x00007fffffffd7b8 0x0000000000000000
[W]0x00007fffffffd7c0 0x0000000000000000
[W]0x00007fffffffd830 0x0000000000000002
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffd7a8 0x000055555556721a
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd7e0 0x0000000000000006
[R]0x00007fffffffd7f4 0x00000000
[W]0x00007fffffffd812 0x00
[R]0x00007fffffffd830 0x0000000000000002
[W]0x00007fffffffd82b 0x00
[W]0x00007fffffffd818 0x0000000000000000
[W]0x00007fffffffd82f 0x00
[W]0x00007fffffffd7f8 0x0000000000000000
[W]0x00007fffffffd7e8 0x0000000000000000
[R]0x00007fffffffd814 0x00000003
[R]0x0000555555571d64 0xffff5d27
[W]0x00007fffffffd82e 0x00
[W]0x00007fffffffd82a 0x01
[W]0x00007fffffffd829 0x01
[W]0x00007fffffffd82c 0x01
[W]0x00007fffffffd813 0x00
[W]0x00007fffffffd7f3 0x00
[W]0x00007fffffffd82f 0x01
[W]0x00007fffffffd82b 0x01
[W]0x00007fffffffd818 0x0000000000000001
[W]0x00007fffffffd7f8 0x000055555556f390
[W]0x00007fffffffd814 0x00000002
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7ab 0x70
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7ab 0x70
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd8b6 0x70
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7ac 0x72
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7ac 0x72
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd8b7 0x72
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7ad 0x75
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7ad 0x75
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7ae 0x65
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7ae 0x65
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7af 0x62
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7af 0x62
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7b0 0x61
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7b0 0x61
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7b1 0x73
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7b1 0x73
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7ab
[R]0x000055555557f7b2 0x00
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd7f8 0x000055555556f390
[R]0x00007fffffffd858 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffd868 0x000055555557a480
[R]0x00007fffffffd870 0x000055555557f7ab
[R]0x00007fffffffd878 0x00007fffc2ddb6e0
[R]0x00007fffffffd880 0x0000000000000000
[R]0x00007fffffffd888 0x000055555557a590
[R]0x00007fffffffd890 0x00007fffffffd8e0
[R]0x00007fffffffd898 0x000055555555cf21
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x00007fffffffd8b6 0x70
[R]0x00007fffffffd8a0 0x0000000000000000
[R]0x00007fffffffd8a8 0x0000000000000000
[R]0x000055555557f7ab 0x70
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffd8a8 0x000055555555cf64
[R]0x00007fffffffd8b8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffd8c0 0x000055555557f710
[R]0x00007fffffffd8c8 0x000055555557f798
[R]0x00007fffffffd8d0 0x00007fffc2ddb6e0
[R]0x00007fffffffd8d8 0x000055555557f730
[R]0x00007fffffffd8e0 0x00007fffffffdca0
[R]0x00007fffffffd8e8 0x0000555555564c84
[W]0x000055555557a654 0x00000000
[R]0x00007fffffffd928 0x00
[R]0x00005555555776fc 0x00
[R]0x00005555555776fb 0x00
[R]0x00007fffffffd92c 0x00000003
[R]0x00005555555776fa 0x00
[R]0x00007fffffffd92c 0x00000003
[R]0x0000555555577320 0x00
[R]0x0000555555577329 0x00
[R]0x00007fffffffd92c 0x00000003
[R]0x0000555555577318 0x00
[R]0x00005555555776f9 0x00
[R]0x0000555555577784 0x00000003
[R]0x00007fffffffd910 0x000055555557f7ab
[R]0x00007fffffffd92c 0x00000003
[W]0x00007fffffffd90f 0x00
[W]0x00007fffffffd90d 0x00
[R]0x0000555555577324 0x00000002
[R]0x00007fffffffd90f 0x00
[W]0x00007fffffffd90e 0x00
[R]0x0000555555577789 0x00
[R]0x000055555557a5e8 0x0000000000000000
[R]0x0000555555577328 0x00
[R]0x0000555555577318 0x00
[R]0x0000555555577329 0x00
[R]0x00007fffffffd910 0x000055555557f7ab
[W]0x00007fffffffd8e8 0x0000555555564e04
[W]0x00007fffffffd8e0 0x00007fffffffdca0
[W]0x00007fffffffd8d8 0x000055555557f7ab
[W]0x00007fffffffd8d0 0x0000000000000000
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffd8c8 0x00005555555640b4
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffd8c8 0x00005555555640c1
[R]0x00007fffffffd8d0 0x0000000000000000
[R]0x00007fffffffd8d8 0x000055555557f7ab
[R]0x00007fffffffd8e0 0x00007fffffffdca0
[R]0x0000555555576e48 0x00007fffc2f7dcd0
[R]0x0000555555577608 0x0000000000000000
[W]0x0000555555577608 0x0000000000000001
[W]0x000055555557a590 0x0000555555587770
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f7ab
[R]0x00007fffffffdc80 0x000055555557f798
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x000055555556670a
[R]0x00007fffffffdcd0 0x0000000000000000
[W]0x00007fffffffdcd0 0x0000000000000000
[R]0x0000555555577324 0x00000002
[W]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f798
[W]0x00007fffffffdc78 0x000055555557f7ab
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f7ab
[R]0x00007fffffffdc80 0x000055555557f798
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00005555555774d4 0x00000000
[R]0x000055555557f7cb 0x74
[R]0x00005555555774c0 0x0000000000000000
[R]0x0000555555577498 0x0000000000000000
[R]0x000055555557f7ca 0x08
[R]0x000055555556d748 0x05
[R]0x00007fffffffdcd8 0x000055555557f710
[W]0x00007fffffffdca8 0x000055555556670a
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f7b8
[W]0x00007fffffffdc78 0x000055555557f7cb
[W]0x00007fffffffd910 0x000055555557f7cb
[R]0x0000555555577610 0x000055555557a590
[W]0x00007fffffffd928 0x00000000
[R]0x0000555555577608 0x0000000000000001
[W]0x00007fffffffd92c 0x00000005
[R]0x0000555555577618 0x0000000000000064
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[W]0x000055555557a660 0x0000000000000000
[W]0x000055555557a728 0x0000000000000000
[W]0x000055555557a668 0x0000000000000000
[W]0x000055555557a670 0x0000000000000000
[W]0x000055555557a678 0x0000000000000000
[W]0x000055555557a680 0x0000000000000000
[W]0x000055555557a688 0x0000000000000000
[W]0x000055555557a690 0x0000000000000000
[W]0x000055555557a698 0x0000000000000000
[W]0x000055555557a6a0 0x0000000000000000
[W]0x000055555557a6a8 0x0000000000000000
[W]0x000055555557a6b0 0x0000000000000000
[W]0x000055555557a6b8 0x0000000000000000
[W]0x000055555557a6c0 0x0000000000000000
[W]0x000055555557a6c8 0x0000000000000000
[W]0x000055555557a6d0 0x0000000000000000
[W]0x000055555557a6d8 0x0000000000000000
[W]0x000055555557a6e0 0x0000000000000000
[W]0x000055555557a6e8 0x0000000000000000
[W]0x000055555557a6f0 0x0000000000000000
[W]0x000055555557a6f8 0x0000000000000000
[W]0x000055555557a700 0x0000000000000000
[W]0x000055555557a708 0x0000000000000000
[W]0x000055555557a710 0x0000000000000000
[W]0x000055555557a718 0x0000000000000000
[W]0x000055555557a720 0x0000000000000000
[W]0x000055555557a728 0x0000000000000000
[W]0x000055555557a724 0xffffffff
[R]0x00007fffffffd92c 0x00000005
[R]0x00005555555772bc 0x00
[W]0x000055555557a708 0x00000005
[W]0x000055555557a710 0x0000555555577020
[R]0x00005555555772bd 0x01
[R]0x00007fffffffd910 0x000055555557f7cb
[W]0x00007fffffffd8e8 0x0000555555564c84
[W]0x00007fffffffd8e0 0x00007fffffffdca0
[W]0x00007fffffffd8d8 0x000055555557f730
[W]0x00007fffffffd8d0 0x00007fffc2ddb6e0
[W]0x00007fffffffd8c8 0x000055555557f7b8
[W]0x00007fffffffd8c0 0x000055555557f710
[R]0x0000555555577600 0x000055555557a480
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffd8b8 0xe7ee3601ad702d00
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffd8a8 0x000055555555cefa
[R]0x00007fffc2ddb6e0 0x00000000
[R]0x000055555557a480 0x00000003
[R]0x000055555557a484 0x00000000
[R]0x000055555557a4b0 0x0000000000000000
[W]0x00007fffffffd8a8 0x0000000000000000
[R]0x000055555557a4a8 0x0000000000000000
[W]0x00007fffffffd8a0 0x0000000000000000
[W]0x00007fffffffd898 0x000055555555cf21
[W]0x00007fffffffd890 0x00007fffffffd8e0
[W]0x00007fffffffd888 0x000055555557a660
[W]0x00007fffffffd880 0x0000000000000000
[W]0x00007fffffffd878 0x00007fffc2ddb6e0
[W]0x00007fffffffd870 0x000055555557f7cb
[W]0x00007fffffffd868 0x000055555557a480
[W]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd8a0 0x0000000000000000
[W]0x00007fffffffd7f4 0x00000000
[W]0x00007fffffffd814 0x00000003
[W]0x00007fffffffd820 0x000055555557a488
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffd858 0xe7ee3601ad702d00
[R]0x00007fffffffd8a8 0x0000000000000000
[W]0x00007fffffffd7b8 0x0000000000000000
[W]0x00007fffffffd7c0 0x0000000000000000
[W]0x00007fffffffd830 0x0000000000000002
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffd7a8 0x000055555556721a
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd7e0 0x0000000000000006
[R]0x00007fffffffd7f4 0x00000000
[W]0x00007fffffffd812 0x00
[R]0x00007fffffffd830 0x0000000000000002
[W]0x00007fffffffd82b 0x00
[W]0x00007fffffffd818 0x0000000000000000
[W]0x00007fffffffd82f 0x00
[W]0x00007fffffffd7f8 0x0000000000000000
[W]0x00007fffffffd7e8 0x0000000000000000
[R]0x00007fffffffd814 0x00000003
[R]0x0000555555571d64 0xffff5d27
[W]0x00007fffffffd82e 0x00
[W]0x00007fffffffd82a 0x01
[W]0x00007fffffffd829 0x01
[W]0x00007fffffffd82c 0x01
[W]0x00007fffffffd813 0x00
[W]0x00007fffffffd7f3 0x00
[W]0x00007fffffffd82f 0x01
[W]0x00007fffffffd82b 0x01
[W]0x00007fffffffd818 0x0000000000000001
[W]0x00007fffffffd7f8 0x000055555556f390
[W]0x00007fffffffd814 0x00000002
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7cb 0x74
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7cb 0x74
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd8b6 0x74
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7cc 0x72
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7cc 0x72
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd8b7 0x72
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7cd 0x61
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7cd 0x61
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7ce 0x63
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7ce 0x63
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7cf 0x65
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7cf 0x65
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d0 0x2d
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d0 0x2d
[R]0x0000555555571e38 0xffff5644
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a48c 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d1 0x66
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d1 0x66
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d2 0x75
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d2 0x75
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d3 0x6c
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d3 0x6c
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d4 0x6c
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d4 0x6c
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d5 0x2d
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d5 0x2d
[R]0x0000555555571e38 0xffff5644
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a48c 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d6 0x69
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d6 0x69
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d7 0x6e
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d7 0x6e
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d8 0x66
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d8 0x66
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7d9 0x6f
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7d9 0x6f
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7da 0x2e
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7da 0x2e
[R]0x0000555555571e3c 0xffff5644
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a48c 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7db 0x74
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7db 0x74
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7dc 0x78
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7dc 0x78
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7dd 0x74
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7dd 0x74
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7cb
[R]0x000055555557f7de 0x00
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd7f8 0x000055555556f390
[R]0x00007fffffffd858 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffd868 0x000055555557a480
[R]0x00007fffffffd870 0x000055555557f7cb
[R]0x00007fffffffd878 0x00007fffc2ddb6e0
[R]0x00007fffffffd880 0x0000000000000000
[R]0x00007fffffffd888 0x000055555557a660
[R]0x00007fffffffd890 0x00007fffffffd8e0
[R]0x00007fffffffd898 0x000055555555cf21
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x00007fffffffd8b6 0x74
[R]0x00007fffffffd8a0 0x0000000000000000
[R]0x00007fffffffd8a8 0x0000000000000000
[R]0x000055555557f7cb 0x74
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffd8a8 0x000055555555cf64
[R]0x00007fffffffd8b8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffd8c0 0x000055555557f710
[R]0x00007fffffffd8c8 0x000055555557f7b8
[R]0x00007fffffffd8d0 0x00007fffc2ddb6e0
[R]0x00007fffffffd8d8 0x000055555557f730
[R]0x00007fffffffd8e0 0x00007fffffffdca0
[R]0x00007fffffffd8e8 0x0000555555564c84
[W]0x000055555557a724 0x00000000
[R]0x00007fffffffd928 0x00
[R]0x00005555555776fc 0x00
[R]0x00005555555776fb 0x00
[R]0x00007fffffffd92c 0x00000005
[R]0x00005555555776fa 0x00
[R]0x00007fffffffd92c 0x00000005
[R]0x0000555555577329 0x00
[R]0x00007fffffffd92c 0x00000005
[R]0x000055555557731c 0x00000000
[R]0x0000555555577320 0x00
[R]0x0000555555577318 0x00
[R]0x00005555555776f9 0x00
[R]0x0000555555577784 0x00000003
[R]0x00007fffffffd910 0x000055555557f7cb
[R]0x00007fffffffd92c 0x00000005
[W]0x00007fffffffd90f 0x00
[W]0x00007fffffffd90d 0x00
[R]0x0000555555577324 0x00000002
[R]0x00007fffffffd90f 0x00
[W]0x00007fffffffd90e 0x00
[R]0x0000555555577789 0x00
[R]0x000055555557a6b8 0x0000000000000000
[R]0x0000555555577328 0x00
[R]0x0000555555577318 0x00
[R]0x0000555555577329 0x00
[R]0x00007fffffffd910 0x000055555557f7cb
[W]0x00007fffffffd8e8 0x0000555555564e04
[W]0x00007fffffffd8e0 0x00007fffffffdca0
[W]0x00007fffffffd8d8 0x000055555557f7cb
[W]0x00007fffffffd8d0 0x0000000000000000
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffd8c8 0x00005555555640b4
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffd8c8 0x00005555555640c1
[R]0x00007fffffffd8d0 0x0000000000000000
[R]0x00007fffffffd8d8 0x000055555557f7cb
[R]0x00007fffffffd8e0 0x00007fffffffdca0
[R]0x0000555555576e48 0x00007fffc2f7dcd0
[R]0x0000555555577608 0x0000000000000001
[W]0x0000555555577608 0x0000000000000002
[W]0x000055555557a660 0x0000555555587790
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f7cb
[R]0x00007fffffffdc80 0x000055555557f7b8
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x000055555556670a
[R]0x00007fffffffdcd0 0x0000000000000000
[W]0x00007fffffffdcd0 0x0000000000000000
[R]0x0000555555577324 0x00000002
[W]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f7b8
[W]0x00007fffffffdc78 0x000055555557f7cb
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f7cb
[R]0x00007fffffffdc80 0x000055555557f7b8
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00005555555774d4 0x00000000
[R]0x000055555557f7f3 0x54
[R]0x00005555555774c0 0x0000000000000000
[R]0x0000555555577498 0x0000000000000000
[R]0x000055555557f7f2 0x04
[R]0x000055555556d744 0x03
[R]0x00007fffffffdcd8 0x000055555557f710
[W]0x00007fffffffdca8 0x000055555556670a
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f7e0
[W]0x00007fffffffdc78 0x000055555557f7f3
[W]0x00007fffffffd910 0x000055555557f7f3
[R]0x0000555555577610 0x000055555557a590
[W]0x00007fffffffd928 0x00000000
[R]0x0000555555577608 0x0000000000000002
[W]0x00007fffffffd92c 0x00000003
[R]0x0000555555577618 0x0000000000000064
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[W]0x000055555557a730 0x0000000000000000
[W]0x000055555557a7f8 0x0000000000000000
[W]0x000055555557a738 0x0000000000000000
[W]0x000055555557a740 0x0000000000000000
[W]0x000055555557a748 0x0000000000000000
[W]0x000055555557a750 0x0000000000000000
[W]0x000055555557a758 0x0000000000000000
[W]0x000055555557a760 0x0000000000000000
[W]0x000055555557a768 0x0000000000000000
[W]0x000055555557a770 0x0000000000000000
[W]0x000055555557a778 0x0000000000000000
[W]0x000055555557a780 0x0000000000000000
[W]0x000055555557a788 0x0000000000000000
[W]0x000055555557a790 0x0000000000000000
[W]0x000055555557a798 0x0000000000000000
[W]0x000055555557a7a0 0x0000000000000000
[W]0x000055555557a7a8 0x0000000000000000
[W]0x000055555557a7b0 0x0000000000000000
[W]0x000055555557a7b8 0x0000000000000000
[W]0x000055555557a7c0 0x0000000000000000
[W]0x000055555557a7c8 0x0000000000000000
[W]0x000055555557a7d0 0x0000000000000000
[W]0x000055555557a7d8 0x0000000000000000
[W]0x000055555557a7e0 0x0000000000000000
[W]0x000055555557a7e8 0x0000000000000000
[W]0x000055555557a7f0 0x0000000000000000
[W]0x000055555557a7f8 0x0000000000000000
[W]0x000055555557a7f4 0xffffffff
[R]0x00007fffffffd92c 0x00000003
[R]0x00005555555772bc 0x00
[W]0x000055555557a7d8 0x00000003
[W]0x000055555557a7e0 0x0000555555577020
[R]0x00005555555772bd 0x01
[R]0x00007fffffffd910 0x000055555557f7f3
[W]0x00007fffffffd8e8 0x0000555555564c84
[W]0x00007fffffffd8e0 0x00007fffffffdca0
[W]0x00007fffffffd8d8 0x000055555557f730
[W]0x00007fffffffd8d0 0x00007fffc2ddb6e0
[W]0x00007fffffffd8c8 0x000055555557f7e0
[W]0x00007fffffffd8c0 0x000055555557f710
[R]0x0000555555577600 0x000055555557a480
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffd8b8 0xe7ee3601ad702d00
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffd8a8 0x000055555555cefa
[R]0x00007fffc2ddb6e0 0x00000000
[R]0x000055555557a480 0x00000003
[R]0x000055555557a484 0x00000000
[R]0x000055555557a4b0 0x0000000000000000
[W]0x00007fffffffd8a8 0x0000000000000000
[R]0x000055555557a4a8 0x0000000000000000
[W]0x00007fffffffd8a0 0x0000000000000000
[W]0x00007fffffffd898 0x000055555555cf21
[W]0x00007fffffffd890 0x00007fffffffd8e0
[W]0x00007fffffffd888 0x000055555557a730
[W]0x00007fffffffd880 0x0000000000000000
[W]0x00007fffffffd878 0x00007fffc2ddb6e0
[W]0x00007fffffffd870 0x000055555557f7f3
[W]0x00007fffffffd868 0x000055555557a480
[W]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd8a0 0x0000000000000000
[W]0x00007fffffffd7f4 0x00000000
[W]0x00007fffffffd814 0x00000003
[W]0x00007fffffffd820 0x000055555557a488
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffd858 0xe7ee3601ad702d00
[R]0x00007fffffffd8a8 0x0000000000000000
[W]0x00007fffffffd7b8 0x0000000000000000
[W]0x00007fffffffd7c0 0x0000000000000000
[W]0x00007fffffffd830 0x0000000000000002
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffd7a8 0x000055555556721a
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd7e0 0x0000000000000006
[R]0x00007fffffffd7f4 0x00000000
[W]0x00007fffffffd812 0x00
[R]0x00007fffffffd830 0x0000000000000002
[W]0x00007fffffffd82b 0x00
[W]0x00007fffffffd818 0x0000000000000000
[W]0x00007fffffffd82f 0x00
[W]0x00007fffffffd7f8 0x0000000000000000
[W]0x00007fffffffd7e8 0x0000000000000000
[R]0x00007fffffffd814 0x00000003
[R]0x0000555555571d64 0xffff5d27
[W]0x00007fffffffd82e 0x00
[W]0x00007fffffffd82a 0x01
[W]0x00007fffffffd829 0x01
[W]0x00007fffffffd82c 0x01
[W]0x00007fffffffd813 0x00
[W]0x00007fffffffd7f3 0x00
[W]0x00007fffffffd82f 0x01
[W]0x00007fffffffd82b 0x01
[W]0x00007fffffffd818 0x0000000000000001
[W]0x00007fffffffd7f8 0x000055555556f390
[W]0x00007fffffffd814 0x00000002
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7f3 0x54
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7f3 0x54
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a490 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd8b6 0x54
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7f4 0x72
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7f4 0x72
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[W]0x00007fffffffd8b7 0x72
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7f5 0x61
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7f5 0x61
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7f6 0x63
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7f6 0x63
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7f7 0x65
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7f7 0x65
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7f8 0x72
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7f8 0x72
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7f9 0x50
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7f9 0x50
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a490 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7fa 0x49
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7fa 0x49
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a490 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7fb 0x4e
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7fb 0x4e
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a490 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7fc 0x5f
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7fc 0x5f
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a490 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7fd 0x6d
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7fd 0x6d
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7fe 0x6f
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7fe 0x6f
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f7ff 0x64
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f7ff 0x64
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f800 0x69
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f800 0x69
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f801 0x66
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f801 0x66
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f802 0x69
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f802 0x69
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f803 0x65
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f803 0x65
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f804 0x64
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x00007fffffffd82e 0x00
[R]0x000055555557f804 0x64
[R]0x00007fffffffd82a 0x01
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd820 0x000055555557a488
[W]0x00007fffffffd830 0x00
[R]0x00007fffffffd820 0x000055555557a488
[R]0x000055555557a494 0x00000000
[R]0x00007fffffffd830 0x00
[R]0x00007fffffffd82d 0x01
[W]0x00007fffffffd82d 0x01
[R]0x00007fffffffd838 0x000055555557f7f3
[R]0x000055555557f805 0x00
[R]0x00007fffffffd82f 0x01
[R]0x00007fffffffd7f8 0x000055555556f390
[R]0x00007fffffffd858 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffd868 0x000055555557a480
[R]0x00007fffffffd870 0x000055555557f7f3
[R]0x00007fffffffd878 0x00007fffc2ddb6e0
[R]0x00007fffffffd880 0x0000000000000000
[R]0x00007fffffffd888 0x000055555557a730
[R]0x00007fffffffd890 0x00007fffffffd8e0
[R]0x00007fffffffd898 0x000055555555cf21
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x00007fffffffd8b6 0x54
[R]0x00007fffffffd8a0 0x0000000000000000
[R]0x00007fffffffd8a8 0x0000000000000000
[R]0x000055555557f7f3 0x54
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffd8a8 0x000055555555cf64
[R]0x00007fffffffd8b8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffd8c0 0x000055555557f710
[R]0x00007fffffffd8c8 0x000055555557f7e0
[R]0x00007fffffffd8d0 0x00007fffc2ddb6e0
[R]0x00007fffffffd8d8 0x000055555557f730
[R]0x00007fffffffd8e0 0x00007fffffffdca0
[R]0x00007fffffffd8e8 0x0000555555564c84
[W]0x000055555557a7f4 0x00000000
[R]0x00007fffffffd928 0x00
[R]0x00005555555776fc 0x00
[R]0x00005555555776fb 0x00
[R]0x00007fffffffd92c 0x00000003
[R]0x00005555555776fa 0x00
[R]0x00007fffffffd92c 0x00000003
[R]0x0000555555577320 0x00
[R]0x0000555555577329 0x00
[R]0x00007fffffffd92c 0x00000003
[R]0x0000555555577318 0x00
[R]0x00005555555776f9 0x00
[R]0x0000555555577784 0x00000003
[R]0x00007fffffffd910 0x000055555557f7f3
[R]0x00007fffffffd92c 0x00000003
[W]0x00007fffffffd90f 0x00
[W]0x00007fffffffd90d 0x00
[R]0x0000555555577324 0x00000002
[R]0x00007fffffffd90f 0x00
[W]0x00007fffffffd90e 0x00
[R]0x0000555555577789 0x00
[R]0x000055555557a788 0x0000000000000000
[R]0x0000555555577328 0x00
[R]0x0000555555577318 0x00
[R]0x0000555555577329 0x00
[R]0x00007fffffffd910 0x000055555557f7f3
[W]0x00007fffffffd8e8 0x0000555555564e04
[W]0x00007fffffffd8e0 0x00007fffffffdca0
[W]0x00007fffffffd8d8 0x000055555557f7f3
[W]0x00007fffffffd8d0 0x0000000000000000
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffd8c8 0x00005555555640b4
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffd8c8 0x00005555555640c1
[R]0x00007fffffffd8d0 0x0000000000000000
[R]0x00007fffffffd8d8 0x000055555557f7f3
[R]0x00007fffffffd8e0 0x00007fffffffdca0
[R]0x0000555555576e48 0x00007fffc2f7dcd0
[R]0x0000555555577608 0x0000000000000002
[W]0x0000555555577608 0x0000000000000003
[W]0x000055555557a730 0x00005555555877b0
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f7f3
[R]0x00007fffffffdc80 0x000055555557f7e0
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x000055555556670a
[R]0x00007fffffffdcd0 0x0000000000000000
[W]0x00007fffffffdcd0 0x0000000000000000
[R]0x0000555555577324 0x00000002
[W]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f7e0
[W]0x00007fffffffdc78 0x000055555557f7f3
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f7f3
[R]0x00007fffffffdc80 0x000055555557f7e0
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00005555555774d4 0x00000000
[R]0x000055555557f81b 0x2e
[W]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f808
[W]0x00007fffffffdc78 0x000055555557f81b
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f81b
[R]0x00007fffffffdc80 0x000055555557f808
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00005555555774d4 0x00000000
[R]0x000055555557f833 0x2e
[W]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x0000000000000000
[W]0x00007fffffffdc90 0x000055555557f730
[W]0x00007fffffffdc88 0x00007fffc2ddb6e0
[W]0x00007fffffffdc80 0x000055555557f820
[W]0x00007fffffffdc78 0x000055555557f833
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc68 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc78 0x000055555557f833
[R]0x00007fffffffdc80 0x000055555557f820
[R]0x00007fffffffdc88 0x00007fffc2ddb6e0
[R]0x00007fffffffdc90 0x000055555557f730
[R]0x00007fffffffdc98 0x0000000000000000
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x0000555555566515
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576e98 0x00007fffc2ee4840
[W]0x00007fffffffdca8 0x00005555555664a1
[R]0x00007fffc2ddb6e0 0x00000000
[R]0x0000555555576de0 0x00007fffc2ee44d0
[W]0x00007fffffffdca8 0x000055555556655f
[W]0x00007fffffffdca8 0x000055555556656c
[W]0x00007fffffffdca0 0x00007fffffffdfc0
[W]0x00007fffffffdc98 0x00007fffc2ddb6e0
[W]0x00007fffffffdc90 0x0000000000000000
[W]0x00007fffffffdc88 0x0000000000000000
[R]0x0000555555577608 0x0000000000000003
[R]0x0000555555577468 0x0000000000000000
[R]0x0000555555577490 0x0000000000000000
[R]0x0000555555576c68 0x00007fffc2ea7f30
[W]0x00007fffffffdc78 0x00005555555617d3
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdc78 0x00005555555617f3
[W]0x0000555555577490 0x000055555557f730
[W]0x0000555555577468 0x0000000000000009
[R]0x0000555555577490 0x000055555557f730
[R]0x0000555555577610 0x000055555557a590
[W]0x000055555557f730 0x000055555557a590
[W]0x000055555557f738 0x000055555557a660
[W]0x000055555557f740 0x000055555557a730
[R]0x0000555555578460 0x00000000
[R]0x00005555555774b8 0x000000000000009e
[R]0x0000555555577324 0x00000002
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f730 0x000055555557a590
[R]0x000055555557a658 0x0000000000000000
[R]0x000055555557a654 0x00000000
[R]0x000055555557a590 0x0000555555587770
[R]0x0000555555577600 0x000055555557a480
[W]0x00007fffffffdc78 0x0000555555561a45
[W]0x00007fffffffdc70 0x00007fffffffdca0
[W]0x00007fffffffdc68 0x000055555557a590
[W]0x00007fffffffdc60 0x0000000000000000
[R]0x00007fffffffcc60 0x0000000000000000
[W]0x00007fffffffcc60 0x0000000000000000
[R]0x00007fffffffbc60 0x0000000000000000
[W]0x00007fffffffbc60 0x0000000000000000
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc58 0xe7ee3601ad702d00
[W]0x00007fffffffbc48 0x00007fffffffbc50
[W]0x00007fffffffbc28 0x000055555555e043
[W]0x00007fffffffbc20 0x00007fffffffdc70
[W]0x00007fffffffbc18 0x0000000000000000
[W]0x00007fffffffbc10 0x000055555557f730
[W]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbc00 0x00007fffffffbc50
[W]0x00007fffffffbbf8 0x0000555555587770
[W]0x00007fffffffbba0 0x00007fffffffbc48
[W]0x00007fffffffbbc0 0x00007fffffffbc40
[W]0x00007fffffffbb98 0x00007fffffffbc3f
[R]0x000055555557a480 0x00000003
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbbe8 0xe7ee3601ad702d00
[R]0x00007fffffffbc48 0x00007fffffffbc50
[R]0x00005555555772be 0x01
[W]0x00007fffffffbbaf 0x00
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffbb88 0x0000555555568ee7
[R]0x00007fffffffbbc0 0x00007fffffffbc40
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffbb88 0x0000555555568efb
[W]0x00007fffffffbb88 0x000055555556927b
[W]0x00007fffffffbb80 0x00007fffffffbc20
[W]0x00007fffffffbb78 0x000055555557a480
[W]0x00007fffffffbb70 0x0000555555587770
[W]0x00007fffffffbb68 0x00007fffc2ddb600
[W]0x00007fffffffbb60 0x0000555555587770
[W]0x00007fffffffbb58 0x0000000000000007
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbb48 0xe7ee3601ad702d00
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffbb28 0x0000555555568d5f
[R]0x0000555555587770 0x70
[R]0x0000555555587771 0x72
[R]0x0000555555587772 0x75
[R]0x0000555555587773 0x65
[R]0x0000555555587774 0x62
[R]0x0000555555587775 0x61
[R]0x0000555555587776 0x73
[R]0x00007fffffffbb48 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbb58 0x0000000000000007
[R]0x00007fffffffbb60 0x0000555555587770
[R]0x00007fffffffbb68 0x00007fffc2ddb600
[R]0x00007fffffffbb70 0x0000555555587770
[R]0x00007fffffffbb78 0x000055555557a480
[R]0x00007fffffffbb80 0x00007fffffffbc20
[R]0x00007fffffffbb88 0x000055555556927b
[R]0x00005555555772bd 0x01
[R]0x00005555555772bc 0x00
[R]0x00007fffffffbb98 0x00007fffffffbc3f
[W]0x00007fffffffbc3f 0x00
[R]0x00007fffffffbbc0 0x00007fffffffbc40
[W]0x00007fffffffbc40 0x0000000000000007
[R]0x00007fffffffbba0 0x00007fffffffbc48
[W]0x00007fffffffbc48 0x0000555555587770
[R]0x00007fffffffbbe8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbbf8 0x0000555555587770
[R]0x00007fffffffbc00 0x00007fffffffbc50
[R]0x00007fffffffbc08 0x00007fffc2ddb6e0
[R]0x00007fffffffbc10 0x000055555557f730
[R]0x00007fffffffbc18 0x0000000000000000
[R]0x00007fffffffbc20 0x00007fffffffdc70
[R]0x00007fffffffbc28 0x000055555555e043
[R]0x00007fffffffbc48 0x0000555555587770
[R]0x00007fffffffbc3f 0x00
[R]0x00007fffffffbc40 0x0000000000000007
[R]0x00007fffffffdc58 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc60 0x0000000000000000
[R]0x00007fffffffdc68 0x000055555557a590
[R]0x00007fffffffdc70 0x00007fffffffdca0
[R]0x00007fffffffdc78 0x0000555555561a45
[R]0x0000555555577608 0x0000000000000003
[W]0x000055555557a658 0x0000000000000007
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f738 0x000055555557a660
[R]0x000055555557a728 0x0000000000000000
[R]0x000055555557a724 0x00000000
[R]0x000055555557a660 0x0000555555587790
[R]0x0000555555577600 0x000055555557a480
[W]0x00007fffffffdc78 0x0000555555561a45
[W]0x00007fffffffdc70 0x00007fffffffdca0
[W]0x00007fffffffdc68 0x000055555557a660
[W]0x00007fffffffdc60 0x0000000000000001
[R]0x00007fffffffcc60 0x0000000000000000
[W]0x00007fffffffcc60 0x0000000000000000
[R]0x00007fffffffbc60 0x0000000000000000
[W]0x00007fffffffbc60 0x0000000000000000
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc58 0xe7ee3601ad702d00
[W]0x00007fffffffbc48 0x00007fffffffbc50
[W]0x00007fffffffbc28 0x000055555555e043
[W]0x00007fffffffbc20 0x00007fffffffdc70
[W]0x00007fffffffbc18 0x0000000000000000
[W]0x00007fffffffbc10 0x000055555557f730
[W]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbc00 0x00007fffffffbc50
[W]0x00007fffffffbbf8 0x0000555555587790
[W]0x00007fffffffbba0 0x00007fffffffbc48
[W]0x00007fffffffbbc0 0x00007fffffffbc40
[W]0x00007fffffffbb98 0x00007fffffffbc3f
[R]0x000055555557a480 0x00000003
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbbe8 0xe7ee3601ad702d00
[R]0x00007fffffffbc48 0x00007fffffffbc50
[R]0x00005555555772be 0x01
[W]0x00007fffffffbbaf 0x00
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffbb88 0x0000555555568ee7
[R]0x00007fffffffbbc0 0x00007fffffffbc40
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffbb88 0x0000555555568efb
[W]0x00007fffffffbb88 0x000055555556927b
[W]0x00007fffffffbb80 0x00007fffffffbc20
[W]0x00007fffffffbb78 0x000055555557a480
[W]0x00007fffffffbb70 0x0000555555587790
[W]0x00007fffffffbb68 0x00007fffc2ddb600
[W]0x00007fffffffbb60 0x0000555555587790
[W]0x00007fffffffbb58 0x0000000000000013
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbb48 0xe7ee3601ad702d00
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffbb28 0x0000555555568d5f
[R]0x0000555555587790 0x74
[R]0x0000555555587791 0x72
[R]0x0000555555587792 0x61
[R]0x0000555555587793 0x63
[R]0x0000555555587794 0x65
[R]0x0000555555587795 0x2d
[R]0x0000555555587796 0x66
[R]0x0000555555587797 0x75
[R]0x0000555555587798 0x6c
[R]0x0000555555587799 0x6c
[R]0x000055555558779a 0x2d
[R]0x000055555558779b 0x69
[R]0x000055555558779c 0x6e
[R]0x000055555558779d 0x66
[R]0x000055555558779e 0x6f
[R]0x000055555558779f 0x2e
[R]0x00005555555877a0 0x74
[R]0x00005555555877a1 0x78
[R]0x00005555555877a2 0x74
[R]0x00007fffffffbb48 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbb58 0x0000000000000013
[R]0x00007fffffffbb60 0x0000555555587790
[R]0x00007fffffffbb68 0x00007fffc2ddb600
[R]0x00007fffffffbb70 0x0000555555587790
[R]0x00007fffffffbb78 0x000055555557a480
[R]0x00007fffffffbb80 0x00007fffffffbc20
[R]0x00007fffffffbb88 0x000055555556927b
[R]0x00005555555772bd 0x01
[R]0x00005555555772bc 0x00
[R]0x00007fffffffbb98 0x00007fffffffbc3f
[W]0x00007fffffffbc3f 0x00
[R]0x00007fffffffbbc0 0x00007fffffffbc40
[W]0x00007fffffffbc40 0x0000000000000013
[R]0x00007fffffffbba0 0x00007fffffffbc48
[W]0x00007fffffffbc48 0x0000555555587790
[R]0x00007fffffffbbe8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbbf8 0x0000555555587790
[R]0x00007fffffffbc00 0x00007fffffffbc50
[R]0x00007fffffffbc08 0x00007fffc2ddb6e0
[R]0x00007fffffffbc10 0x000055555557f730
[R]0x00007fffffffbc18 0x0000000000000000
[R]0x00007fffffffbc20 0x00007fffffffdc70
[R]0x00007fffffffbc28 0x000055555555e043
[R]0x00007fffffffbc48 0x0000555555587790
[R]0x00007fffffffbc3f 0x00
[R]0x00007fffffffbc40 0x0000000000000013
[R]0x00007fffffffdc58 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc60 0x0000000000000001
[R]0x00007fffffffdc68 0x000055555557a660
[R]0x00007fffffffdc70 0x00007fffffffdca0
[R]0x00007fffffffdc78 0x0000555555561a45
[R]0x0000555555577608 0x0000000000000003
[W]0x000055555557a728 0x0000000000000013
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f740 0x000055555557a730
[R]0x000055555557a7f8 0x0000000000000000
[R]0x000055555557a7f4 0x00000000
[R]0x000055555557a730 0x00005555555877b0
[R]0x0000555555577600 0x000055555557a480
[W]0x00007fffffffdc78 0x0000555555561a45
[W]0x00007fffffffdc70 0x00007fffffffdca0
[W]0x00007fffffffdc68 0x000055555557a730
[W]0x00007fffffffdc60 0x0000000000000002
[R]0x00007fffffffcc60 0x0000000000000000
[W]0x00007fffffffcc60 0x0000000000000000
[R]0x00007fffffffbc60 0x0000000000000000
[W]0x00007fffffffbc60 0x0000000000000000
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc58 0xe7ee3601ad702d00
[W]0x00007fffffffbc48 0x00007fffffffbc50
[W]0x00007fffffffbc28 0x000055555555e043
[W]0x00007fffffffbc20 0x00007fffffffdc70
[W]0x00007fffffffbc18 0x0000000000000000
[W]0x00007fffffffbc10 0x000055555557f730
[W]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbc00 0x00007fffffffbc50
[W]0x00007fffffffbbf8 0x00005555555877b0
[W]0x00007fffffffbba0 0x00007fffffffbc48
[W]0x00007fffffffbbc0 0x00007fffffffbc40
[W]0x00007fffffffbb98 0x00007fffffffbc3f
[R]0x000055555557a480 0x00000003
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbbe8 0xe7ee3601ad702d00
[R]0x00007fffffffbc48 0x00007fffffffbc50
[R]0x00005555555772be 0x01
[W]0x00007fffffffbbaf 0x00
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffbb88 0x0000555555568ee7
[R]0x00007fffffffbbc0 0x00007fffffffbc40
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffbb88 0x0000555555568efb
[W]0x00007fffffffbb88 0x000055555556927b
[W]0x00007fffffffbb80 0x00007fffffffbc20
[W]0x00007fffffffbb78 0x000055555557a480
[W]0x00007fffffffbb70 0x00005555555877b0
[W]0x00007fffffffbb68 0x00007fffc2ddb600
[W]0x00007fffffffbb60 0x00005555555877b0
[W]0x00007fffffffbb58 0x0000000000000012
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbb48 0xe7ee3601ad702d00
[R]0x0000555555576d50 0x00007fffc2e34620
[W]0x00007fffffffbb28 0x0000555555568d5f
[R]0x00005555555877b0 0x54
[R]0x00005555555877b1 0x72
[R]0x00005555555877b2 0x61
[R]0x00005555555877b3 0x63
[R]0x00005555555877b4 0x65
[R]0x00005555555877b5 0x72
[R]0x00005555555877b6 0x50
[R]0x00005555555877b7 0x49
[R]0x00005555555877b8 0x4e
[R]0x00005555555877b9 0x5f
[R]0x00005555555877ba 0x6d
[R]0x00005555555877bb 0x6f
[R]0x00005555555877bc 0x64
[R]0x00005555555877bd 0x69
[R]0x00005555555877be 0x66
[R]0x00005555555877bf 0x69
[R]0x00005555555877c0 0x65
[R]0x00005555555877c1 0x64
[R]0x00007fffffffbb48 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbb58 0x0000000000000012
[R]0x00007fffffffbb60 0x00005555555877b0
[R]0x00007fffffffbb68 0x00007fffc2ddb600
[R]0x00007fffffffbb70 0x00005555555877b0
[R]0x00007fffffffbb78 0x000055555557a480
[R]0x00007fffffffbb80 0x00007fffffffbc20
[R]0x00007fffffffbb88 0x000055555556927b
[R]0x00005555555772bd 0x01
[R]0x00005555555772bc 0x00
[R]0x00007fffffffbb98 0x00007fffffffbc3f
[W]0x00007fffffffbc3f 0x00
[R]0x00007fffffffbbc0 0x00007fffffffbc40
[W]0x00007fffffffbc40 0x0000000000000012
[R]0x00007fffffffbba0 0x00007fffffffbc48
[W]0x00007fffffffbc48 0x00005555555877b0
[R]0x00007fffffffbbe8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbbf8 0x00005555555877b0
[R]0x00007fffffffbc00 0x00007fffffffbc50
[R]0x00007fffffffbc08 0x00007fffc2ddb6e0
[R]0x00007fffffffbc10 0x000055555557f730
[R]0x00007fffffffbc18 0x0000000000000000
[R]0x00007fffffffbc20 0x00007fffffffdc70
[R]0x00007fffffffbc28 0x000055555555e043
[R]0x00007fffffffbc48 0x00005555555877b0
[R]0x00007fffffffbc3f 0x00
[R]0x00007fffffffbc40 0x0000000000000012
[R]0x00007fffffffdc58 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc60 0x0000000000000002
[R]0x00007fffffffdc68 0x000055555557a730
[R]0x00007fffffffdc70 0x00007fffffffdca0
[R]0x00007fffffffdc78 0x0000555555561a45
[R]0x0000555555577608 0x0000000000000003
[W]0x000055555557a7f8 0x0000000000000012
[R]0x0000555555578460 0x00000000
[R]0x0000555555576df0 0x00007fffc2e3e140
[W]0x00007fffffffdc78 0x0000555555561886
[R]0x0000555555578460 0x00000000
[R]0x0000555555577608 0x0000000000000003
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557778a 0x00
[R]0x00005555555774c8 0x00
[R]0x0000555555576000 0x000055555555d9e0
[W]0x00007fffffffdc78 0x00005555555619a3
[W]0x00007fffffffdc70 0x00007fffffffdca0
[W]0x00007fffffffdc68 0x0000000000000000
[W]0x00007fffffffdc60 0x000055555557f730
[W]0x00007fffffffdc58 0x00007fffc2ddb6e0
[W]0x00007fffffffdc50 0x000055555557a730
[W]0x00007fffffffdc48 0x000055555557f730
[W]0x00007fffffffdc18 0x0000000000000003
[W]0x00007fffffffdc20 0x0000000000000001
[W]0x00007fffffffdc10 0x000055555557f748
[W]0x00007fffffffdc28 0x000055555555d9e0
[W]0x00007fffffffdc00 0x000055555557f738
[R]0x000055555557f738  60 a6 57 55 55 55 00 00 30 a7 57 55 55 55 00 00
[W]0x00007fffffffdc30  60 a6 57 55 55 55 00 00 30 a7 57 55 55 55 00 00
[W]0x00007fffffffdbf8 0x000055555555b9c2
[W]0x00007fffffffdbf0 0x00007fffffffdc70
[W]0x00007fffffffdbe8 0x000055555557a730
[W]0x00007fffffffdbe0 0x000055555557f730
[R]0x000055555557a730 0x00005555555877b0
[R]0x000055555557a660 0x0000555555587790
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffdbd8 0x000055555555d9f7
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x00007fffffffdbe0 0x000055555557f730
[R]0x00007fffffffdbe8 0x000055555557a730
[R]0x00007fffffffdbf0 0x00007fffffffdc70
[R]0x0000555555576ec8 0x00007fffc2ead210
[R]0x00007fffffffdc18 0x0000000000000003
[R]0x000055555557f730 0x000055555557a590
[R]0x00007fffffffdc10 0x000055555557f748
[W]0x00007fffffffdc30 0x000055555557a590
[W]0x000055555557f748 0x000055555557a590
[R]0x00007fffffffdc00 0x000055555557f738
[R]0x00007fffffffdc20 0x0000000000000001
[R]0x000055555557f738 0x000055555557a660
[R]0x00007fffffffdc30 0x000055555557a590
[R]0x00007fffffffdc28 0x000055555555d9e0
[W]0x00007fffffffdbf8 0x000055555555b931
[W]0x00007fffffffdbf0 0x00007fffffffdc70
[W]0x00007fffffffdbe8 0x000055555557a660
[W]0x00007fffffffdbe0 0x000055555557f730
[R]0x000055555557a660 0x0000555555587790
[R]0x000055555557a590 0x0000555555587770
[R]0x0000555555576c90 0x00007fffc2e27990
[W]0x00007fffffffdbd8 0x000055555555d9f7
[W]0x00007fffc2ddb6e0 0x00000000
[R]0x00007fffffffdbe0 0x000055555557f730
[R]0x00007fffffffdbe8 0x000055555557a660
[R]0x00007fffffffdbf0 0x00007fffffffdc70
[R]0x0000555555576ec8 0x00007fffc2ead210
[R]0x00007fffffffdc30 0x000055555557a590
[W]0x000055555557f730 0x000055555557a590
[R]0x00007fffffffdc20 0x0000000000000001
[R]0x00007fffffffdc48 0x000055555557f730
[R]0x00007fffffffdc50 0x000055555557a730
[R]0x00007fffffffdc58 0x00007fffc2ddb6e0
[R]0x00007fffffffdc60 0x000055555557f730
[R]0x00007fffffffdc68 0x0000000000000000
[R]0x00007fffffffdc70 0x00007fffffffdca0
[R]0x00007fffffffdc78 0x00005555555619a3
[R]0x00007fffffffdc88 0x0000000000000000
[R]0x00007fffffffdc90 0x0000000000000000
[R]0x00007fffffffdc98 0x00007fffc2ddb6e0
[R]0x00007fffffffdca0 0x00007fffffffdfc0
[R]0x00007fffffffdca8 0x000055555556656c
[R]0x0000555555577780 0x00
[R]0x0000555555577324 0x00000002
[R]0x0000555555577328 0x00
[R]0x0000555555577608 0x0000000000000003
[R]0x00007fffffffdf88 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdf98 0x000055555557f6e0
[R]0x00007fffffffdfa0 0x0000000000000000
[R]0x00007fffffffdfa8 0x0000000000000000
[R]0x00007fffffffdfb0 0x0000000000000001
[R]0x00007fffffffdfb8 0x00007fffffffe02c
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x0000555555577324 0x00000002
[W]0x00007fffffffdfc0 0x00007fffffffe0f0
[W]0x00007fffffffdfb8 0x00007fffffffe02c
[W]0x00007fffffffdfb0 0x0000000000000001
[W]0x00007fffffffdfa8 0x0000000000000000
[W]0x00007fffffffdfa0 0x0000000000000000
[W]0x00007fffffffdf98 0x000055555557f6e0
[R]0x0000555555577324 0x00000002
[R]0x000055555556d1b0 0xffff6c58
[R]0x00005555555774b8 0x000000000000009e
[W]0x00007fffffffdf58 0x0000555555563e18
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x00007fffffffe02c
[W]0x00007fffffffdf40 0x0000000000000001
[W]0x00007fffffffdf38 0x0000000000000000
[W]0x00007fffffffdf30 0x0000000000000000
[W]0x00007fffffffdf28 0x000055555557f6e0
[R]0x00005555555774b0 0x0000000000000035
[R]0x0000555555577608 0x0000000000000003
[R]0x0000555555577390 0x0000000000000000
[R]0x0000555555577398 0x0000000000000000
[W]0x00007fffffffdf08 0x0000555555563b2f
[W]0x00007fffffffdf00 0x00007fffffffdf50
[W]0x00007fffffffdef8 0x0000000000000001
[W]0x00007fffffffdef0 0x0000000000000003
[R]0x0000555555577390 0x0000000000000000
[W]0x0000555555577390 0x0000000000000000
[R]0x0000555555576ee8 0x00007fffc2ea82f0
[W]0x00007fffffffdee8 0x00005555555638bd
[W]0x0000555555577390 0x0000000000000005
[R]0x00007fffffffdef0 0x0000000000000003
[R]0x00007fffffffdef8 0x0000000000000001
[R]0x00007fffffffdf00 0x00007fffffffdf50
[R]0x00007fffffffdf08 0x0000555555563b2f
[R]0x0000555555577390 0x0000000000000005
[W]0x0000555555577398 0x000055555557f780
[W]0x00007fffffffdf18 0x0000000000000005
[R]0x0000555555576eb0 0x00007fffc2ea7970
[W]0x00007fffffffdf08 0x0000555555563b8a
[R]0x00007fffffffdf18 0x0000000000000005
[W]0x000055555557f790 0x000055555557f800
[W]0x000055555557f7a8 0x000055555557f808
[W]0x000055555557f7c0 0x000055555557f818
[W]0x000055555557f7d8 0x000055555557f830
[W]0x000055555557f7f0 0x000055555557f850
[R]0x0000555555577608 0x0000000000000003
[R]0x0000555555577398 0x000055555557f780
[R]0x000055555557f790 0x000055555557f800
[W]0x000055555557f780 0x01
[W]0x000055555557f788 0x0000000000000003
[W]0x000055555557f800 0x0000000000000003
[R]0x000055555557f7a8 0x000055555557f808
[W]0x000055555557f798 0x01
[W]0x000055555557f7a0 0x0000000000000006
[W]0x000055555557f808 0x0000000000000003
[W]0x000055555557f810 0x0000000000000003
[R]0x000055555557f7c0 0x000055555557f818
[W]0x000055555557f7b0 0x01
[W]0x000055555557f7b8 0x0000000000000009
[W]0x000055555557f818 0x0000000000000003
[W]0x000055555557f820 0x0000000000000003
[W]0x000055555557f828 0x0000000000000003
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f730 0x000055555557a590
[W]0x00007fffffffdf08 0x0000555555563a00
[W]0x00007fffffffdf00 0x00007fffffffdf50
[W]0x00007fffffffdef8 0x0000000000000001
[W]0x00007fffffffdef0 0x0000000000000000
[W]0x00007fffffffdee8 0x0000000000000003
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffded8 0xe7ee3601ad702d00
[R]0x0000555555577318 0x00
[R]0x000055555557a658 0x0000000000000007
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffded8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdee8 0x0000000000000003
[R]0x00007fffffffdef0 0x0000000000000000
[R]0x00007fffffffdef8 0x0000000000000001
[R]0x00007fffffffdf00 0x00007fffffffdf50
[R]0x00007fffffffdf08 0x0000555555563a00
[R]0x0000555555577608 0x0000000000000003
[R]0x00005555555774b8 0x000000000000009e
[R]0x0000555555577398 0x000055555557f780
[R]0x000055555557f780 0x01
[R]0x000055555557f790 0x000055555557f800
[R]0x000055555557f800 0x0000000000000003
[R]0x000055555557f788 0x0000000000000003
[W]0x000055555557f788 0x0000000000000007
[W]0x000055555557f800 0x0000000000000007
[R]0x000055555557f788 0x0000000000000007
[W]0x000055555557f780 0x01
[R]0x000055555557f798 0x01
[R]0x000055555557f7a8 0x000055555557f808
[R]0x000055555557f808 0x0000000000000003
[R]0x000055555557f7a0 0x0000000000000006
[W]0x000055555557f7a0 0x000000000000000c
[W]0x000055555557f808 0x0000000000000009
[R]0x000055555557f7a0 0x000000000000000c
[W]0x000055555557f798 0x01
[R]0x000055555557f7b0 0x01
[R]0x000055555557f7c0 0x000055555557f818
[R]0x000055555557f818 0x0000000000000003
[R]0x000055555557f7b8 0x0000000000000009
[W]0x000055555557f7b8 0x000000000000000f
[W]0x000055555557f818 0x0000000000000009
[R]0x000055555557f7b8 0x000000000000000f
[W]0x000055555557f7b0 0x01
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f738 0x000055555557a660
[W]0x00007fffffffdf08 0x0000555555563a00
[W]0x00007fffffffdf00 0x00007fffffffdf50
[W]0x00007fffffffdef8 0x0000000000000001
[W]0x00007fffffffdef0 0x0000000000000001
[W]0x00007fffffffdee8 0x0000000000000003
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffded8 0xe7ee3601ad702d00
[R]0x0000555555577318 0x00
[R]0x000055555557a728 0x0000000000000013
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffded8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdee8 0x0000000000000003
[R]0x00007fffffffdef0 0x0000000000000001
[R]0x00007fffffffdef8 0x0000000000000001
[R]0x00007fffffffdf00 0x00007fffffffdf50
[R]0x00007fffffffdf08 0x0000555555563a00
[R]0x0000555555577608 0x0000000000000003
[R]0x00005555555774b8 0x000000000000009e
[R]0x0000555555577398 0x000055555557f780
[R]0x000055555557f780 0x01
[R]0x000055555557f790 0x000055555557f800
[R]0x000055555557f800 0x0000000000000007
[R]0x000055555557f788 0x0000000000000007
[W]0x000055555557f788 0x0000000000000013
[W]0x000055555557f800 0x0000000000000013
[R]0x000055555557f788 0x0000000000000013
[W]0x000055555557f780 0x01
[R]0x000055555557f798 0x01
[R]0x000055555557f7a8 0x000055555557f808
[R]0x000055555557f808 0x0000000000000009
[R]0x000055555557f7a0 0x000000000000000c
[W]0x000055555557f7a0 0x0000000000000018
[W]0x000055555557f808 0x0000000000000015
[R]0x000055555557f7a0 0x0000000000000018
[W]0x000055555557f798 0x01
[R]0x000055555557f7b0 0x01
[R]0x000055555557f7c0 0x000055555557f818
[R]0x000055555557f820 0x0000000000000003
[R]0x000055555557f7b8 0x000000000000000f
[W]0x000055555557f7b8 0x0000000000000021
[W]0x000055555557f820 0x0000000000000015
[R]0x000055555557f7b8 0x0000000000000021
[W]0x000055555557f7b0 0x01
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f740 0x000055555557a730
[W]0x00007fffffffdf08 0x0000555555563a00
[W]0x00007fffffffdf00 0x00007fffffffdf50
[W]0x00007fffffffdef8 0x0000000000000001
[W]0x00007fffffffdef0 0x0000000000000002
[W]0x00007fffffffdee8 0x0000000000000003
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffded8 0xe7ee3601ad702d00
[R]0x0000555555577318 0x00
[R]0x000055555557a7f8 0x0000000000000012
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffded8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdee8 0x0000000000000003
[R]0x00007fffffffdef0 0x0000000000000002
[R]0x00007fffffffdef8 0x0000000000000001
[R]0x00007fffffffdf00 0x00007fffffffdf50
[R]0x00007fffffffdf08 0x0000555555563a00
[R]0x0000555555577608 0x0000000000000003
[R]0x00005555555774b8 0x000000000000009e
[R]0x0000555555577398 0x000055555557f780
[R]0x000055555557f780 0x01
[R]0x000055555557f790 0x000055555557f800
[R]0x000055555557f800 0x0000000000000013
[R]0x000055555557f798 0x01
[R]0x000055555557f7a8 0x000055555557f808
[R]0x000055555557f810 0x0000000000000003
[R]0x000055555557f7a0 0x0000000000000018
[W]0x000055555557f7a0 0x0000000000000027
[W]0x000055555557f810 0x0000000000000012
[R]0x000055555557f7a0 0x0000000000000027
[W]0x000055555557f798 0x01
[R]0x000055555557f7b0 0x01
[R]0x000055555557f7c0 0x000055555557f818
[R]0x000055555557f828 0x0000000000000003
[R]0x000055555557f7b8 0x0000000000000021
[W]0x000055555557f7b8 0x0000000000000030
[W]0x000055555557f828 0x0000000000000012
[R]0x000055555557f7b8 0x0000000000000030
[W]0x000055555557f7b0 0x01
[R]0x0000555555577398 0x000055555557f780
[R]0x000055555557f7b0 0x01
[R]0x00007fffffffdf28 0x000055555557f6e0
[R]0x00007fffffffdf30 0x0000000000000000
[R]0x00007fffffffdf38 0x0000000000000000
[R]0x00007fffffffdf40 0x0000000000000001
[R]0x00007fffffffdf48 0x00007fffffffe02c
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563e18
[R]0x0000555555577398 0x000055555557f780
[R]0x0000555555577608 0x0000000000000003
[R]0x0000555555576ca8 0x00007fffc300a6a8
[W]0x00007fffffffdf68 0x0000000000000000
[W]0x00007fffffffdf70 0x00007fffc300a6a8
[R]0x00007fffffffdf68 0x0000000000000000
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f730 0x000055555557a590
[W]0x00007fffffffdf88 0x000055555557a590
[W]0x00007fffffffdf58 0x0000555555563ea5
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x0000000000000000
[W]0x00007fffffffdf40 0x0000000000000000
[W]0x00007fffffffdf38 0x0000000000000000
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf28 0xe7ee3601ad702d00
[R]0x0000555555577318 0x00
[R]0x000055555557a658 0x0000000000000007
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffdf28 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdf38 0x0000000000000000
[R]0x00007fffffffdf40 0x0000000000000000
[R]0x00007fffffffdf48 0x0000000000000000
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563ea5
[R]0x00007fffffffdf88 0x000055555557a590
[W]0x00007fffffffdf80 0x0000000000000007
[R]0x000055555557f7c0 0x000055555557f818
[R]0x000055555557f818 0x0000000000000009
[W]0x00007fffffffdf78 0x0000000000000009
[W]0x00007fffffffdf58 0x0000555555563ec5
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x0000000000000000
[W]0x00007fffffffdf40 0x0000000000000000
[R]0x0000555555577320 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf38 0xe7ee3601ad702d00
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x0000555555577318 0x00
[W]0x00007fffffffdc98 0x000055555556c744
[W]0x00007fffffffdc90 0x00007fffffffdf50
[W]0x00007fffffffdc88 0x000055555557f7b0
[W]0x00007fffffffdc80 0x0000000000000001
[W]0x00007fffffffdc78 0x0000000000000008
[W]0x00007fffffffdc70 0x0000000000000000
[W]0x00007fffffffdc68 0x000055555557a590
[R]0x0000555555577320 0x00
[R]0x000055555557a590 0x0000555555587770
[R]0x000055555557a654 0x00000000
[R]0x0000555555577600 0x000055555557a480
[R]0x000055555557a5a0 0x0000000000000000
[W]0x00007fffffffdc40 0x0000000000000000
[W]0x00007fffffffdc38 0x0000555555562031
[W]0x00007fffffffdc30 0x00007fffffffdc90
[W]0x00007fffffffdc28 0x0000000000000001
[W]0x00007fffffffdc20 0x0000555555587770
[W]0x00007fffffffdc18 0x000055555557a590
[W]0x00007fffffffdc10 0x0000000000000000
[W]0x00007fffffffdc08 0x000055555557a590
[R]0x00007fffffffcc08 0x0000000000000000
[W]0x00007fffffffcc08 0x0000000000000000
[R]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbbb0 0x0000555555587770
[W]0x00007fffffffbbd8 0x0000000000000000
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdbf8 0xe7ee3601ad702d00
[R]0x00007fffffffdc40 0x0000000000000000
[W]0x00007fffffffbba8 0x00007fffffffbbf0
[W]0x00007fffffffbbe8 0x00007fffffffbbf0
[W]0x00007fffffffbb98 0x0000555555561c64
[W]0x00007fffffffbb90 0x00007fffffffdc30
[W]0x00007fffffffbb88 0x0000000000000001
[W]0x00007fffffffbb80 0x0000000000000001
[W]0x00007fffffffbb78 0x0000000000000000
[W]0x00007fffffffbb70 0x0000000000000000
[W]0x00007fffffffbb68 0x0000555555587770
[W]0x00007fffffffbb10 0x00007fffffffbbe8
[W]0x00007fffffffbb30 0x0000000000000000
[W]0x00007fffffffbb08 0x00007fffffffbbe7
[R]0x000055555557a480 0x00000003
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbb58 0xe7ee3601ad702d00
[R]0x00007fffffffbbe8 0x00007fffffffbbf0
[R]0x00005555555772be 0x01
[W]0x00007fffffffbb1f 0x00
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffbaf8 0x0000555555568ee7
[R]0x00007fffffffbb30 0x0000000000000000
[R]0x00005555555772bd 0x01
[R]0x00005555555772bc 0x00
[R]0x00007fffffffbb08 0x00007fffffffbbe7
[W]0x00007fffffffbbe7 0x00
[R]0x00007fffffffbb10 0x00007fffffffbbe8
[W]0x00007fffffffbbe8 0x0000555555587770
[R]0x00007fffffffbb58 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbb68 0x0000555555587770
[R]0x00007fffffffbb70 0x0000000000000000
[R]0x00007fffffffbb78 0x0000000000000000
[R]0x00007fffffffbb80 0x0000000000000001
[R]0x00007fffffffbb88 0x0000000000000001
[R]0x00007fffffffbb90 0x00007fffffffdc30
[R]0x00007fffffffbb98 0x0000555555561c64
[R]0x00007fffffffbbe7 0x00
[W]0x00007fffffffbbd7 0x00
[R]0x0000555555576ca8 0x00007fffc300a6a8
[R]0x00007fffffffbbe8 0x0000555555587770
[W]0x00007fffffffbbb8 0x0000000000000007
[W]0x00007fffffffbbc0 0x0000555555587770
[R]0x00007fffffffbbd8 0x0000000000000000
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x00007fffffffbbb8 0x0000000000000007
[R]0x00007fffffffbbc0 0x0000555555587770
[R]0x0000555555576ee0 0x00007fffc2e8c740
[W]0x00007fffffffbb98 0x0000555555561ec4
[R]0x0000555555577330 0x0000000000000000
[W]0x0000555555577330 0x0000000000000007
[R]0x00007fffffffbbb0 0x0000555555587770
[R]0x00007fffffffbbd7 0x00
[R]0x00007fffffffdbf8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc08 0x000055555557a590
[R]0x00007fffffffdc10 0x0000000000000000
[R]0x00007fffffffdc18 0x000055555557a590
[R]0x00007fffffffdc20 0x0000555555587770
[R]0x00007fffffffdc28 0x0000000000000001
[R]0x00007fffffffdc30 0x00007fffffffdc90
[R]0x00007fffffffdc38 0x0000555555562031
[R]0x00007fffffffdc40 0x0000000000000000
[R]0x00007fffffffdc48 0x000055555557f730
[W]0x00007fffffffdc48 0x000055555556203b
[W]0x00007fffffffdc40 0x00007fffffffdc90
[W]0x00007fffffffdc38 0x0000000000000001
[W]0x00007fffffffdc30 0x0000555555587770
[W]0x00007fffffffdc28 0x000055555557a590
[W]0x00007fffffffdc20 0x0000000000000000
[W]0x00007fffffffdc18 0x0000000000000007
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc08 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc08 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc18 0x0000000000000007
[R]0x00007fffffffdc20 0x0000000000000000
[R]0x00007fffffffdc28 0x000055555557a590
[R]0x00007fffffffdc30 0x0000555555587770
[R]0x00007fffffffdc38 0x0000000000000001
[R]0x00007fffffffdc40 0x00007fffffffdc90
[R]0x00007fffffffdc48 0x000055555556203b
[R]0x00007fffffffdc68 0x000055555557a590
[R]0x00007fffffffdc70 0x0000000000000000
[R]0x00007fffffffdc78 0x0000000000000008
[R]0x00007fffffffdc80 0x0000000000000001
[R]0x00007fffffffdc88 0x000055555557f7b0
[R]0x00007fffffffdc90 0x00007fffffffdf50
[R]0x00007fffffffdc98 0x000055555556c744
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffdf38 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdf40 0x0000000000000000
[R]0x00007fffffffdf48 0x0000000000000000
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563ec5
[R]0x0000555555577608 0x0000000000000003
[R]0x00007fffffffdf78 0x0000000000000009
[R]0x00007fffffffdf80 0x0000000000000007
[W]0x00007fffffffdf88 0x0000000000000009
[W]0x00007fffffffdf58 0x0000555555563e8d
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x0000000000000001
[R]0x0000555555576ca8 0x00007fffc300a6a8
[W]0x00007fffffffdf40 0x0000000000000008
[W]0x00007fffffffdf38 0x0000000000000000
[W]0x00007fffffffdf30 0x0000000000000001
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x0000555555577790 0x0000000000000008
[R]0x00007fffc300a5e8 0x000055555557f887
[R]0x00007fffc300a5f0 0x000055555557f880
[R]0x0000555555576d88 0x00007fffc2e8fe20
[W]0x00007fffffffdf28 0x000055555555ab03
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x0000555555577790 0x0000000000000008
[R]0x00007fffc300a5e8 0x000055555557f888
[R]0x00007fffc300a5f0 0x000055555557f880
[R]0x0000555555576d88 0x00007fffc2e8fe20
[W]0x00007fffffffdf28 0x000055555555ab03
[R]0x00007fffffffdf30 0x0000000000000001
[R]0x00007fffffffdf38 0x0000000000000000
[R]0x00007fffffffdf40 0x0000000000000008
[R]0x00007fffffffdf48 0x0000000000000001
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563e8d
[R]0x00007fffffffdf88 0x0000000000000009
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f738 0x000055555557a660
[W]0x00007fffffffdf88 0x000055555557a660
[W]0x00007fffffffdf58 0x0000555555563ea5
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x0000000000000008
[W]0x00007fffffffdf40 0x0000000000000009
[W]0x00007fffffffdf38 0x0000000000000001
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf28 0xe7ee3601ad702d00
[R]0x0000555555577318 0x00
[R]0x000055555557a728 0x0000000000000013
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffdf28 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdf38 0x0000000000000001
[R]0x00007fffffffdf40 0x0000000000000009
[R]0x00007fffffffdf48 0x0000000000000008
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563ea5
[R]0x00007fffffffdf88 0x000055555557a660
[W]0x00007fffffffdf80 0x0000000000000013
[R]0x000055555557f7c0 0x000055555557f818
[R]0x000055555557f820 0x0000000000000015
[W]0x00007fffffffdf78 0x0000000000000015
[W]0x00007fffffffdf58 0x0000555555563ec5
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x0000000000000009
[W]0x00007fffffffdf40 0x0000000000000001
[R]0x0000555555577320 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf38 0xe7ee3601ad702d00
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x0000555555577318 0x00
[W]0x00007fffffffdc98 0x000055555556c744
[W]0x00007fffffffdc90 0x00007fffffffdf50
[W]0x00007fffffffdc88 0x000055555557f7b0
[W]0x00007fffffffdc80 0x0000000000000001
[W]0x00007fffffffdc78 0x0000000000000010
[W]0x00007fffffffdc70 0x0000000000000009
[W]0x00007fffffffdc68 0x000055555557a660
[R]0x0000555555577320 0x00
[R]0x000055555557a660 0x0000555555587790
[R]0x000055555557a724 0x00000000
[R]0x0000555555577600 0x000055555557a480
[R]0x000055555557a670 0x0000000000000000
[W]0x00007fffffffdc40 0x0000000000000000
[W]0x00007fffffffdc38 0x0000555555562031
[W]0x00007fffffffdc30 0x00007fffffffdc90
[W]0x00007fffffffdc28 0x0000000000000001
[W]0x00007fffffffdc20 0x0000555555587790
[W]0x00007fffffffdc18 0x000055555557a660
[W]0x00007fffffffdc10 0x0000000000000009
[W]0x00007fffffffdc08 0x000055555557a660
[R]0x00007fffffffcc08 0x0000000000000000
[W]0x00007fffffffcc08 0x0000000000000000
[R]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbbb0 0x0000555555587790
[W]0x00007fffffffbbd8 0x0000000000000000
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdbf8 0xe7ee3601ad702d00
[R]0x00007fffffffdc40 0x0000000000000000
[W]0x00007fffffffbba8 0x00007fffffffbbf0
[W]0x00007fffffffbbe8 0x00007fffffffbbf0
[W]0x00007fffffffbb98 0x0000555555561c64
[W]0x00007fffffffbb90 0x00007fffffffdc30
[W]0x00007fffffffbb88 0x0000000000000001
[W]0x00007fffffffbb80 0x0000000000000001
[W]0x00007fffffffbb78 0x0000000000000000
[W]0x00007fffffffbb70 0x0000000000000000
[W]0x00007fffffffbb68 0x0000555555587790
[W]0x00007fffffffbb10 0x00007fffffffbbe8
[W]0x00007fffffffbb30 0x0000000000000000
[W]0x00007fffffffbb08 0x00007fffffffbbe7
[R]0x000055555557a480 0x00000003
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbb58 0xe7ee3601ad702d00
[R]0x00007fffffffbbe8 0x00007fffffffbbf0
[R]0x00005555555772be 0x01
[W]0x00007fffffffbb1f 0x00
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffbaf8 0x0000555555568ee7
[R]0x00007fffffffbb30 0x0000000000000000
[R]0x00005555555772bd 0x01
[R]0x00005555555772bc 0x00
[R]0x00007fffffffbb08 0x00007fffffffbbe7
[W]0x00007fffffffbbe7 0x00
[R]0x00007fffffffbb10 0x00007fffffffbbe8
[W]0x00007fffffffbbe8 0x0000555555587790
[R]0x00007fffffffbb58 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbb68 0x0000555555587790
[R]0x00007fffffffbb70 0x0000000000000000
[R]0x00007fffffffbb78 0x0000000000000000
[R]0x00007fffffffbb80 0x0000000000000001
[R]0x00007fffffffbb88 0x0000000000000001
[R]0x00007fffffffbb90 0x00007fffffffdc30
[R]0x00007fffffffbb98 0x0000555555561c64
[R]0x00007fffffffbbe7 0x00
[W]0x00007fffffffbbd7 0x00
[R]0x0000555555576ca8 0x00007fffc300a6a8
[R]0x00007fffffffbbe8 0x0000555555587790
[W]0x00007fffffffbbb8 0x0000000000000013
[W]0x00007fffffffbbc0 0x0000555555587790
[R]0x00007fffffffbbd8 0x0000000000000000
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x00007fffffffbbb8 0x0000000000000013
[R]0x00007fffffffbbc0 0x0000555555587790
[R]0x0000555555576ee0 0x00007fffc2e8c740
[W]0x00007fffffffbb98 0x0000555555561ec4
[R]0x0000555555577330 0x0000000000000007
[W]0x0000555555577330 0x000000000000001a
[R]0x00007fffffffbbb0 0x0000555555587790
[R]0x00007fffffffbbd7 0x00
[R]0x00007fffffffdbf8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc08 0x000055555557a660
[R]0x00007fffffffdc10 0x0000000000000009
[R]0x00007fffffffdc18 0x000055555557a660
[R]0x00007fffffffdc20 0x0000555555587790
[R]0x00007fffffffdc28 0x0000000000000001
[R]0x00007fffffffdc30 0x00007fffffffdc90
[R]0x00007fffffffdc38 0x0000555555562031
[R]0x00007fffffffdc40 0x0000000000000000
[R]0x00007fffffffdc48 0x000055555556203b
[W]0x00007fffffffdc48 0x000055555556203b
[W]0x00007fffffffdc40 0x00007fffffffdc90
[W]0x00007fffffffdc38 0x0000000000000001
[W]0x00007fffffffdc30 0x0000555555587790
[W]0x00007fffffffdc28 0x000055555557a660
[W]0x00007fffffffdc20 0x0000000000000009
[W]0x00007fffffffdc18 0x0000000000000013
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc08 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc08 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc18 0x0000000000000013
[R]0x00007fffffffdc20 0x0000000000000009
[R]0x00007fffffffdc28 0x000055555557a660
[R]0x00007fffffffdc30 0x0000555555587790
[R]0x00007fffffffdc38 0x0000000000000001
[R]0x00007fffffffdc40 0x00007fffffffdc90
[R]0x00007fffffffdc48 0x000055555556203b
[R]0x00007fffffffdc68 0x000055555557a660
[R]0x00007fffffffdc70 0x0000000000000009
[R]0x00007fffffffdc78 0x0000000000000010
[R]0x00007fffffffdc80 0x0000000000000001
[R]0x00007fffffffdc88 0x000055555557f7b0
[R]0x00007fffffffdc90 0x00007fffffffdf50
[R]0x00007fffffffdc98 0x000055555556c744
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffdf38 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdf40 0x0000000000000001
[R]0x00007fffffffdf48 0x0000000000000009
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563ec5
[R]0x0000555555577608 0x0000000000000003
[R]0x00007fffffffdf78 0x0000000000000015
[R]0x00007fffffffdf80 0x0000000000000013
[W]0x00007fffffffdf88 0x000000000000001e
[W]0x00007fffffffdf58 0x0000555555563e8d
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x0000000000000001
[R]0x0000555555576ca8 0x00007fffc300a6a8
[W]0x00007fffffffdf40 0x0000000000000010
[W]0x00007fffffffdf38 0x0000000000000009
[W]0x00007fffffffdf30 0x0000000000000002
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x0000555555577790 0x0000000000000008
[R]0x00007fffc300a5e8 0x000055555557f89c
[R]0x00007fffc300a5f0 0x000055555557f880
[R]0x0000555555576d88 0x00007fffc2e8fe20
[W]0x00007fffffffdf28 0x000055555555ab03
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x0000555555577790 0x0000000000000008
[R]0x00007fffc300a5e8 0x000055555557f89d
[R]0x00007fffc300a5f0 0x000055555557f880
[R]0x0000555555576d88 0x00007fffc2e8fe20
[W]0x00007fffffffdf28 0x000055555555ab03
[R]0x00007fffffffdf30 0x0000000000000002
[R]0x00007fffffffdf38 0x0000000000000009
[R]0x00007fffffffdf40 0x0000000000000010
[R]0x00007fffffffdf48 0x0000000000000001
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563e8d
[R]0x00007fffffffdf88 0x000000000000001e
[R]0x0000555555577490 0x000055555557f730
[R]0x000055555557f740 0x000055555557a730
[W]0x00007fffffffdf88 0x000055555557a730
[W]0x00007fffffffdf58 0x0000555555563ea5
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x0000000000000010
[W]0x00007fffffffdf40 0x000000000000001e
[W]0x00007fffffffdf38 0x0000000000000002
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf28 0xe7ee3601ad702d00
[R]0x0000555555577318 0x00
[R]0x000055555557a7f8 0x0000000000000012
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffdf28 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdf38 0x0000000000000002
[R]0x00007fffffffdf40 0x000000000000001e
[R]0x00007fffffffdf48 0x0000000000000010
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563ea5
[R]0x00007fffffffdf88 0x000055555557a730
[W]0x00007fffffffdf80 0x0000000000000012
[R]0x000055555557f7c0 0x000055555557f818
[R]0x000055555557f828 0x0000000000000012
[W]0x00007fffffffdf78 0x0000000000000012
[W]0x00007fffffffdf58 0x0000555555563ec5
[W]0x00007fffffffdf50 0x00007fffffffdfc0
[W]0x00007fffffffdf48 0x000000000000001e
[W]0x00007fffffffdf40 0x0000000000000002
[R]0x0000555555577320 0x00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdf38 0xe7ee3601ad702d00
[R]0x0000555555577329 0x00
[R]0x0000555555577328 0x00
[R]0x0000555555577318 0x00
[W]0x00007fffffffdc98 0x000055555556c744
[W]0x00007fffffffdc90 0x00007fffffffdf50
[W]0x00007fffffffdc88 0x000055555557f7b0
[W]0x00007fffffffdc80 0x0000000000000001
[W]0x00007fffffffdc78 0x0000000000000018
[W]0x00007fffffffdc70 0x000000000000001e
[W]0x00007fffffffdc68 0x000055555557a730
[R]0x0000555555577320 0x00
[R]0x000055555557a730 0x00005555555877b0
[R]0x000055555557a7f4 0x00000000
[R]0x0000555555577600 0x000055555557a480
[R]0x000055555557a740 0x0000000000000000
[W]0x00007fffffffdc40 0x0000000000000000
[W]0x00007fffffffdc38 0x0000555555562031
[W]0x00007fffffffdc30 0x00007fffffffdc90
[W]0x00007fffffffdc28 0x0000000000000001
[W]0x00007fffffffdc20 0x00005555555877b0
[W]0x00007fffffffdc18 0x000055555557a730
[W]0x00007fffffffdc10 0x000000000000001e
[W]0x00007fffffffdc08 0x000055555557a730
[R]0x00007fffffffcc08 0x0000000000000000
[W]0x00007fffffffcc08 0x0000000000000000
[R]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbc08 0x00007fffc2ddb6e0
[W]0x00007fffffffbbb0 0x00005555555877b0
[W]0x00007fffffffbbd8 0x0000000000000000
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdbf8 0xe7ee3601ad702d00
[R]0x00007fffffffdc40 0x0000000000000000
[W]0x00007fffffffbba8 0x00007fffffffbbf0
[W]0x00007fffffffbbe8 0x00007fffffffbbf0
[W]0x00007fffffffbb98 0x0000555555561c64
[W]0x00007fffffffbb90 0x00007fffffffdc30
[W]0x00007fffffffbb88 0x0000000000000001
[W]0x00007fffffffbb80 0x0000000000000001
[W]0x00007fffffffbb78 0x0000000000000000
[W]0x00007fffffffbb70 0x0000000000000000
[W]0x00007fffffffbb68 0x00005555555877b0
[W]0x00007fffffffbb10 0x00007fffffffbbe8
[W]0x00007fffffffbb30 0x0000000000000000
[W]0x00007fffffffbb08 0x00007fffffffbbe7
[R]0x000055555557a480 0x00000003
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffbb58 0xe7ee3601ad702d00
[R]0x00007fffffffbbe8 0x00007fffffffbbf0
[R]0x00005555555772be 0x01
[W]0x00007fffffffbb1f 0x00
[R]0x0000555555576d58 0x00007fffc2f80d80
[W]0x00007fffffffbaf8 0x0000555555568ee7
[R]0x00007fffffffbb30 0x0000000000000000
[R]0x00005555555772bd 0x01
[R]0x00005555555772bc 0x00
[R]0x00007fffffffbb08 0x00007fffffffbbe7
[W]0x00007fffffffbbe7 0x00
[R]0x00007fffffffbb10 0x00007fffffffbbe8
[W]0x00007fffffffbbe8 0x00005555555877b0
[R]0x00007fffffffbb58 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffbb68 0x00005555555877b0
[R]0x00007fffffffbb70 0x0000000000000000
[R]0x00007fffffffbb78 0x0000000000000000
[R]0x00007fffffffbb80 0x0000000000000001
[R]0x00007fffffffbb88 0x0000000000000001
[R]0x00007fffffffbb90 0x00007fffffffdc30
[R]0x00007fffffffbb98 0x0000555555561c64
[R]0x00007fffffffbbe7 0x00
[W]0x00007fffffffbbd7 0x00
[R]0x0000555555576ca8 0x00007fffc300a6a8
[R]0x00007fffffffbbe8 0x00005555555877b0
[W]0x00007fffffffbbb8 0x0000000000000012
[W]0x00007fffffffbbc0 0x00005555555877b0
[R]0x00007fffffffbbd8 0x0000000000000000
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x00007fffffffbbb8 0x0000000000000012
[R]0x00007fffffffbbc0 0x00005555555877b0
[R]0x0000555555576ee0 0x00007fffc2e8c740
[W]0x00007fffffffbb98 0x0000555555561ec4
[R]0x0000555555577330 0x000000000000001a
[W]0x0000555555577330 0x000000000000002c
[R]0x00007fffffffbbb0 0x00005555555877b0
[R]0x00007fffffffbbd7 0x00
[R]0x00007fffffffdbf8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc08 0x000055555557a730
[R]0x00007fffffffdc10 0x000000000000001e
[R]0x00007fffffffdc18 0x000055555557a730
[R]0x00007fffffffdc20 0x00005555555877b0
[R]0x00007fffffffdc28 0x0000000000000001
[R]0x00007fffffffdc30 0x00007fffffffdc90
[R]0x00007fffffffdc38 0x0000555555562031
[R]0x00007fffffffdc40 0x0000000000000000
[R]0x00007fffffffdc48 0x000055555556203b
[W]0x00007fffffffdc48 0x000055555556203b
[W]0x00007fffffffdc40 0x00007fffffffdc90
[W]0x00007fffffffdc38 0x0000000000000001
[W]0x00007fffffffdc30 0x00005555555877b0
[W]0x00007fffffffdc28 0x000055555557a730
[W]0x00007fffffffdc20 0x000000000000001e
[W]0x00007fffffffdc18 0x0000000000000012
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[W]0x00007fffffffdc08 0xe7ee3601ad702d00
[R]0x0000555555577848 0x00000000
[R]0x0000555555577844 0x00000000
[R]0x00007fffffffdc08 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdc18 0x0000000000000012
[R]0x00007fffffffdc20 0x000000000000001e
[R]0x00007fffffffdc28 0x000055555557a730
[R]0x00007fffffffdc30 0x00005555555877b0
[R]0x00007fffffffdc38 0x0000000000000001
[R]0x00007fffffffdc40 0x00007fffffffdc90
[R]0x00007fffffffdc48 0x000055555556203b
[R]0x00007fffffffdc68 0x000055555557a730
[R]0x00007fffffffdc70 0x000000000000001e
[R]0x00007fffffffdc78 0x0000000000000018
[R]0x00007fffffffdc80 0x0000000000000001
[R]0x00007fffffffdc88 0x000055555557f7b0
[R]0x00007fffffffdc90 0x00007fffffffdf50
[R]0x00007fffffffdc98 0x000055555556c744
[R]0x000055555557731c 0x00000000
[R]0x00007fffffffdf38 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffdf40 0x0000000000000002
[R]0x00007fffffffdf48 0x000000000000001e
[R]0x00007fffffffdf50 0x00007fffffffdfc0
[R]0x00007fffffffdf58 0x0000555555563ec5
[R]0x0000555555577608 0x0000000000000003
[R]0x00007fffffffdf70 0x00007fffc300a6a8
[R]0x0000555555577078 0x0a
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[R]0x00007fffc300a5e8 0x000055555557f8b0
[R]0x00007fffc300a5f0 0x000055555557f880
[R]0x0000555555576d88 0x00007fffc2e8fe20
[W]0x00007fffffffdf58 0x0000555555564059
[R]0x00007fffffffdf68 0x0000000000000000
[W]0x00007fffffffdf68 0x0000000000000001
[R]0x00007fffffffdf68 0x0000000000000001
[R]0x00007fffffffdf98 0x000055555557f6e0
[R]0x00007fffffffdfa0 0x0000000000000000
[R]0x00007fffffffdfa8 0x0000000000000000
[R]0x00007fffffffdfb0 0x0000000000000001
[R]0x00007fffffffdfb8 0x00007fffffffe02c
[R]0x00007fffffffdfc0 0x00007fffffffe0f0
[R]0x00007fffffffdfc8 0x0000555555558288
[R]0x000055555557f6e0 0x000055555557f710
[R]0x0000555555576c68 0x00007fffc2ea7f30
[W]0x00007fffffffdfc8 0x0000555555558291
[R]0x000055555557f6e8 0x0000000000000000
[R]0x0000555555576c68 0x00007fffc2ea7f30
[W]0x00007fffffffdfc8 0x000055555555829b
[R]0x0000555555576c68 0x00007fffc2ea7f30
[W]0x00007fffffffdfc8 0x00005555555582a4
[W]0x00005555555777b8 0x01
[R]0x00005555555777b0 0x0000000000000000
[R]0x0000555555577320 0x00
[R]0x00005555555776f8 0x00
[R]0x0000555555577778 0x0000000000000000
[R]0x00005555555777bc 0x00000000
[R]0x00007fffffffe0b8 0xe7ee3601ad702d00
[R]0x00007fffc2ddb768 0xe7ee3601ad702d00
[R]0x00007fffffffe0c8 0x0000000000000000
[R]0x00007fffffffe0d0 0x00007fffffffe218
[R]0x00007fffffffe0d8 0x0000000000000001
[R]0x00007fffffffe0e0 0x00007ffff7ffd000
[R]0x00007fffffffe0e8 0x0000555555575fd8
[R]0x00007fffffffe0f0 0x00007fffffffe190
[R]0x00007fffffffe0f8 0x00007fffc2e27675
[W]0x00007fffffffe080 0x00007fffffffe0e0
[R]0x0000555555576ca8 0x00007fffc300a6a8
[R]0x00007fffc300a6a8 0x00007fffc300a5c0
[W]0x00007fffffffe068 0x000055555555effb
[W]0x00007fffffffe060 0x00007fffffffe080
[W]0x00007fffffffe058 0x0000000000000000
[W]0x00007fffffffe050 0x0000000000000002
[W]0x00007fffffffe048 0x00007fffc300afc8
[R]0x0000555555576cc0 0x00007fffc2e8b8b0
[W]0x00007fffffffe038 0x000055555555e866
[R]0x00007fffc300a5c0 0xfbad2a84
[W]0x00007fffffffe038 0x000055555555e878
[W]0x00007fffffffe030 0x00007fffffffe060
[W]0x00007fffffffe028 0x0000000000000000
[W]0x00007fffffffe020 0x0000000000000000
[W]0x00007fffffffe018 0x00007fffc300a5c0
[R]0x0000555555576e88 0x00007fffc2e89940
[W]0x00007fffffffe008 0x000055555555e736
[R]0x0000555555576ed8 0x00007fffc2e8b7b0
[W]0x00007fffffffe008 0x000055555555e743
[R]0x0000555555576ed8 0x00007fffc2e8b7b0
[W]0x00007fffffffe008 0x000055555555e750
[R]0x0000555555576eb8 0x00007fffc2e80590
[W]0x00007fffffffe008 0x000055555555e75d
[R]0x00007fffffffe018 0x00007fffc300a5c0
[R]0x00007fffffffe020 0x0000000000000000
[R]0x00007fffffffe028 0x0000000000000000
[R]0x00007fffffffe030 0x00007fffffffe060
[R]0x0000555555576d10 0x00007fffc2e80060
[R]0x00007fffffffe048 0x00007fffc300afc8
[R]0x00007fffffffe050 0x0000000000000002
[R]0x00007fffffffe058 0x0000000000000000
[R]0x00007fffffffe060 0x00007fffffffe080
[R]0x00007fffffffe068 0x000055555555effb
[R]0x0000555555576fd8 0x00007fffc300a6a0
[R]0x00007fffc300a6a0 0x00007fffc300a4e0
[W]0x00007fffffffe068 0x000055555555f012
[W]0x00007fffffffe060 0x00007fffffffe080
[W]0x00007fffffffe058 0x0000000000000000
[W]0x00007fffffffe050 0x0000000000000002
[W]0x00007fffffffe048 0x00007fffc300afc8
[R]0x0000555555576cc0 0x00007fffc2e8b8b0
[W]0x00007fffffffe038 0x000055555555e866
[R]0x00007fffc300a4e0 0xfbad2086
[W]0x00007fffffffe038 0x000055555555e878
[W]0x00007fffffffe030 0x00007fffffffe060
[W]0x00007fffffffe028 0x0000000000000000
[W]0x00007fffffffe020 0x0000000000000000
[W]0x00007fffffffe018 0x00007fffc300a4e0
[R]0x0000555555576e88 0x00007fffc2e89940
[W]0x00007fffffffe008 0x000055555555e736
[R]0x0000555555576ed8 0x00007fffc2e8b7b0
[W]0x00007fffffffe008 0x000055555555e743
[R]0x0000555555576ed8 0x00007fffc2e8b7b0
[W]0x00007fffffffe008 0x000055555555e750
[R]0x0000555555576eb8 0x00007fffc2e80590
[W]0x00007fffffffe008 0x000055555555e75d
[R]0x00007fffffffe018 0x00007fffc300a4e0
[R]0x00007fffffffe020 0x0000000000000000
[R]0x00007fffffffe028 0x0000000000000000
[R]0x00007fffffffe030 0x00007fffffffe060
[R]0x0000555555576d10 0x00007fffc2e80060
[R]0x00007fffffffe048 0x00007fffc300afc8
[R]0x00007fffffffe050 0x0000000000000002
[R]0x00007fffffffe058 0x0000000000000000
[R]0x00007fffffffe060 0x00007fffffffe080
[R]0x00007fffffffe068 0x000055555555f012
[R]0x00007fffffffe080 0x00007fffffffe0e0
[R]0x00007fffffffe088 0x00007fffc2e40cb1
[R]0x0000555555577280 0x00
[W]0x00007fffffffdfc0 0x00007fffffffdff0
[R]0x0000555555576fb8 0x00007fffc2e40500
[R]0x0000555555577008 0x0000555555577008
[R]0x0000555555576fb8 0x00007fffc2e40500
[W]0x00007fffffffdfb8 0x00005555555596b8
[W]0x00007fffffffdfb8 0x00005555555596bd
[R]0x00007fffffffdfb8 0x00005555555596bd
[W]0x0000555555577280 0x01
[R]0x00007fffffffdfc0 0x00007fffffffdff0
[R]0x00007fffffffdfc8 0x00007ffff7fc4012
[R]0x00007fffffffdff8 0x00007ffff7fc816e
